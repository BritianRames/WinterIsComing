Nonterminals useless in grammar

   printableElement
   text


Terminals unused in grammar

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG
   ' '


Rules useless in grammar

   86 printableElement: ID
   87                 | QUOTE text QUOTE
   88                 | printableElement SUM printableElement
   89                 | INT_VAL

   90 text: STRING_VAL
   91     | ' '


Rules useless in parser due to conflicts

   49 $@9: %empty

   52 $@11: %empty

   58 $@15: %empty


State 26 conflicts: 1 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 100 conflicts: 1 reduce/reduce
State 109 conflicts: 4 reduce/reduce


Grammar

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   17 $@7: %empty

   18 params: INT_TYPE ID $@7 params
   19       | COMMA INT_TYPE ID params
   20       | %empty

   21 codeSet: instruction END_OF_INSTRUCTION codeSet
   22        | controlStructure END_OF_INSTRUCTION codeSet
   23        | END_OF_INSTRUCTION codeSet
   24        | %empty

   25 instruction: assignation
   26            | declaration
   27            | return
   28            | print
   29            | BREAK

   30 assignation: ID ASSIGN INT_VAL
   31            | ID PLUSPLUS
   32            | ID MINUSMINUS
   33            | ID ASSIGN aritmeticOperation
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   35            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   36            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   37 functionCallParams: aritmeticOperation
   38                   | aritmeticOperation COMMA functionCallParams
   39                   | %empty

   40 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   41                   | aritmeticOperation SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation PRODUCT aritmeticOperation
   43                   | aritmeticOperation DIVIDE aritmeticOperation
   44                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   45 $@8: %empty

   46 aritmeticOperation: ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE
   47                   | INT_VAL
   48                   | ID

   49 $@9: %empty

   50 $@10: %empty

   51 return: RETURN ID $@9 $@10

   52 $@11: %empty

   53 $@12: %empty

   54 return: RETURN INT_VAL $@11 $@12

   55 $@13: %empty

   56 $@14: %empty

   57 return: RETURN aritmeticOperation $@13 $@14

   58 $@15: %empty

   59 return: RETURN ID PARENTESIS_OPEN $@15 functionCallParams PARENTESIS_CLOSE

   60 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   61      | PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   62 $@16: %empty

   63 $@17: %empty

   64 $@18: %empty

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE
   66     | %empty

   67 $@19: %empty

   68 $@20: %empty

   69 $@21: %empty

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

   71 $@22: %empty

   72 $@23: %empty

   73 $@24: %empty

   74 $@25: %empty

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

   76 logicalOperation: ID logicalOperator ID
   77                 | ID logicalOperator INT_VAL
   78                 | INT_VAL logicalOperator INT_VAL
   79                 | INT_VAL logicalOperator ID

   80 logicalOperator: EQUALS
   81                | NOT_EQUALS
   82                | LESS
   83                | LESS_EQUALS
   84                | GREATER
   85                | GREATER_EQUALS


Terminals, with rules where they appear

$end (0) 0
' ' (32)
error (256)
CONTINUE <number> (258)
BREAK <number> (259) 29
RETURN <number> (260) 51 54 57 59
FUN <number> (261) 16
INT_VAL <number> (262) 11 30 34 35 36 47 54 77 78 79
STRING_VAL <string> (263) 60
INT_TYPE <number> (264) 10 11 18 19
STRING_TYPE <number> (265)
ASSIGN <number> (266) 30 33 34 35 36
SUM <number> (267) 40
SUBSTRACT <number> (268) 41
PRODUCT <number> (269) 42
DIVIDE <number> (270) 43
AND <number> (271)
OR <number> (272)
NOT <number> (273)
EQUALS <number> (274) 80
NOT_EQUALS <number> (275) 81
GREATER <number> (276) 84
GREATER_EQUALS <number> (277) 85
LESS <number> (278) 82
LESS_EQUALS <number> (279) 83
IF_CLAUSE <number> (280) 70
WHILE_CLAUSE <number> (281) 75
ELSE_CLAUSE <number> (282) 65
HEADER_END <number> (283)
SQUARE_BRACKET_OPEN <number> (284) 11 34 35 36
SQUARE_BRACKET_CLOSE <number> (285) 11 34 35 36
CURLY_BRACKET_OPEN <number> (286) 16 65 70 75
CURLY_BRACKET_CLOSE <number> (287) 16 65 70 75
COMMA <number> (288) 19 38
PARENTESIS_OPEN <number> (289) 16 44 46 59 60 61 70 75
PARENTESIS_CLOSE <number> (290) 16 44 46 59 60 61 70 75
END_OF_INSTRUCTION <number> (291) 3 4 7 8 16 21 22 23 65 70 75
OPEN_CONTEXT_TAG <number> (292)
CLOSE_CONTEXT_TAG <number> (293)
QUOTE <number> (294) 60
ID <string> (295) 10 11 16 18 19 30 31 32 33 34 35 36 46 48 51 59 76
    77 79
PRINT <number> (296) 60 61
PLUSPLUS <number> (297) 31
MINUSMINUS <number> (298) 32


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
begin (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
root <number> (48)
    on left: 3 4 6 7 8 9, on right: 2 3 4 6 7 8
$@2 (49)
    on left: 5, on right: 6
declaration <number> (50)
    on left: 10 11, on right: 3 26
function <number> (51)
    on left: 16, on right: 6
$@3 (52)
    on left: 12, on right: 16
$@4 (53)
    on left: 13, on right: 16
$@5 (54)
    on left: 14, on right: 16
$@6 (55)
    on left: 15, on right: 16
params <number> (56)
    on left: 18 19 20, on right: 16 18 19
$@7 (57)
    on left: 17, on right: 18
codeSet <number> (58)
    on left: 21 22 23 24, on right: 16 21 22 23 65 70 75
instruction <number> (59)
    on left: 25 26 27 28 29, on right: 21
assignation <number> (60)
    on left: 30 31 32 33 34 35 36, on right: 4 25
functionCallParams <number> (61)
    on left: 37 38 39, on right: 38 46 59
aritmeticOperation (62)
    on left: 40 41 42 43 44 46 47 48, on right: 33 37 38 40 41 42 43
    44 57 61
$@8 (63)
    on left: 45, on right: 46
return <number> (64)
    on left: 51 54 57 59, on right: 27
$@9 (65)
    on left: 49, on right: 51
$@10 (66)
    on left: 50, on right: 51
$@11 (67)
    on left: 52, on right: 54
$@12 (68)
    on left: 53, on right: 54
$@13 (69)
    on left: 55, on right: 57
$@14 (70)
    on left: 56, on right: 57
$@15 (71)
    on left: 58, on right: 59
print <number> (72)
    on left: 60 61, on right: 8 28
else (73)
    on left: 65 66, on right: 70
$@16 (74)
    on left: 62, on right: 65
$@17 (75)
    on left: 63, on right: 65
$@18 (76)
    on left: 64, on right: 65
controlStructure <number> (77)
    on left: 70 75, on right: 22
$@19 (78)
    on left: 67, on right: 70
$@20 (79)
    on left: 68, on right: 70
$@21 (80)
    on left: 69, on right: 70
$@22 (81)
    on left: 71, on right: 75
$@23 (82)
    on left: 72, on right: 75
$@24 (83)
    on left: 73, on right: 75
$@25 (84)
    on left: 74, on right: 75
logicalOperation <number> (85)
    on left: 76 77 78 79, on right: 70 75
logicalOperator <number> (86)
    on left: 80 81 82 83 84 85, on right: 76 77 78 79


State 0

    0 $accept: . begin $end

    $default  reduce using rule 1 ($@1)

    begin  go to state 1
    $@1    go to state 2


State 1

    0 $accept: begin . $end

    $end  shift, and go to state 3


State 2

    2 begin: $@1 . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 8
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 3

    0 $accept: begin $end .

    $default  accept


State 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  shift, and go to state 13


State 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 14
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 6

   30 assignation: ID . ASSIGN INT_VAL
   31            | ID . PLUSPLUS
   32            | ID . MINUSMINUS
   33            | ID . ASSIGN aritmeticOperation
   34            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   35            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   36            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               shift, and go to state 15
    SQUARE_BRACKET_OPEN  shift, and go to state 16
    PLUSPLUS             shift, and go to state 17
    MINUSMINUS           shift, and go to state 18


State 7

   60 print: PRINT . PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   61      | PRINT . PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

    PARENTESIS_OPEN  shift, and go to state 19


State 8

    2 begin: $@1 root .

    $default  reduce using rule 2 (begin)


State 9

    6 root: $@2 . function root

    FUN  shift, and go to state 20

    function  go to state 21


State 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 22


State 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 23


State 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 24


State 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 25

    $default  reduce using rule 10 (declaration)


State 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce using rule 7 (root)


State 15

   30 assignation: ID ASSIGN . INT_VAL
   33            | ID ASSIGN . aritmeticOperation
   36            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL          shift, and go to state 26
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 28

    aritmeticOperation  go to state 29


State 16

   34 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   35            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  shift, and go to state 30


State 17

   31 assignation: ID PLUSPLUS .

    $default  reduce using rule 31 (assignation)


State 18

   32 assignation: ID MINUSMINUS .

    $default  reduce using rule 32 (assignation)


State 19

   60 print: PRINT PARENTESIS_OPEN . QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   61      | PRINT PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    QUOTE            shift, and go to state 32
    ID               shift, and go to state 33

    aritmeticOperation  go to state 34


State 20

   16 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  shift, and go to state 35


State 21

    6 root: $@2 function . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 36
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 37
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 38
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 39
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  shift, and go to state 40


State 26

   30 assignation: ID ASSIGN INT_VAL .
   47 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce using rule 30 (assignation)
    END_OF_INSTRUCTION  [reduce using rule 47 (aritmeticOperation)]
    $default            reduce using rule 47 (aritmeticOperation)


State 27

   44 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 41


State 28

   36 assignation: ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   46 aritmeticOperation: ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE
   48                   | ID .

    SQUARE_BRACKET_OPEN  shift, and go to state 42
    PARENTESIS_OPEN      shift, and go to state 43

    $default  reduce using rule 48 (aritmeticOperation)


State 29

   33 assignation: ID ASSIGN aritmeticOperation .
   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47

    $default  reduce using rule 33 (assignation)


State 30

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   35            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  shift, and go to state 48


State 31

   47 aritmeticOperation: INT_VAL .

    $default  reduce using rule 47 (aritmeticOperation)


State 32

   60 print: PRINT PARENTESIS_OPEN QUOTE . STRING_VAL QUOTE PARENTESIS_CLOSE

    STRING_VAL  shift, and go to state 49


State 33

   46 aritmeticOperation: ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE
   48                   | ID .

    PARENTESIS_OPEN  shift, and go to state 43

    $default  reduce using rule 48 (aritmeticOperation)


State 34

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   61 print: PRINT PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               shift, and go to state 44
    SUBSTRACT         shift, and go to state 45
    PRODUCT           shift, and go to state 46
    DIVIDE            shift, and go to state 47
    PARENTESIS_CLOSE  shift, and go to state 50


State 35

   16 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 12 ($@3)

    $@3  go to state 51


State 36

    6 root: $@2 function root .

    $default  reduce using rule 6 (root)


State 37

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce using rule 3 (root)


State 38

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce using rule 4 (root)


State 39

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce using rule 8 (root)


State 40

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 52


State 41

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   44                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               shift, and go to state 44
    SUBSTRACT         shift, and go to state 45
    PRODUCT           shift, and go to state 46
    DIVIDE            shift, and go to state 47
    PARENTESIS_CLOSE  shift, and go to state 53


State 42

   36 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  shift, and go to state 54


State 43

   46 aritmeticOperation: ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce using rule 45 ($@8)

    $@8  go to state 55


State 44

   40 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 56


State 45

   41 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 57


State 46

   42 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 58


State 47

   43 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 59


State 48

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   35            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  shift, and go to state 60


State 49

   60 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL . QUOTE PARENTESIS_CLOSE

    QUOTE  shift, and go to state 61


State 50

   61 print: PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce using rule 61 (print)


State 51

   16 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  shift, and go to state 62


State 52

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 11 (declaration)


State 53

   44 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce using rule 44 (aritmeticOperation)


State 54

   36 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 63


State 55

   46 aritmeticOperation: ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 39 (functionCallParams)

    functionCallParams  go to state 64
    aritmeticOperation  go to state 65


State 56

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation SUM aritmeticOperation .
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  shift, and go to state 46
    DIVIDE   shift, and go to state 47

    $default  reduce using rule 40 (aritmeticOperation)


State 57

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  shift, and go to state 46
    DIVIDE   shift, and go to state 47

    $default  reduce using rule 41 (aritmeticOperation)


State 58

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation PRODUCT aritmeticOperation .
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce using rule 42 (aritmeticOperation)


State 59

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   43                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce using rule 43 (aritmeticOperation)


State 60

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   35            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  shift, and go to state 66
    ID       shift, and go to state 67


State 61

   60 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 68


State 62

   16 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 13 ($@4)

    $@4  go to state 69


State 63

   36 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 36 (assignation)


State 64

   46 aritmeticOperation: ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 70


State 65

   37 functionCallParams: aritmeticOperation .
   38                   | aritmeticOperation . COMMA functionCallParams
   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47
    COMMA      shift, and go to state 71

    $default  reduce using rule 37 (functionCallParams)


State 66

   35 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce using rule 35 (assignation)


State 67

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce using rule 34 (assignation)


State 68

   60 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE .

    $default  reduce using rule 60 (print)


State 69

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 20 (params)

    params  go to state 74


State 70

   46 aritmeticOperation: ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce using rule 46 (aritmeticOperation)


State 71

   38 functionCallParams: aritmeticOperation COMMA . functionCallParams

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 39 (functionCallParams)

    functionCallParams  go to state 75
    aritmeticOperation  go to state 65


State 72

   18 params: INT_TYPE . ID $@7 params

    ID  shift, and go to state 76


State 73

   19 params: COMMA . INT_TYPE ID params

    INT_TYPE  shift, and go to state 77


State 74

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 14 ($@5)

    $@5  go to state 78


State 75

   38 functionCallParams: aritmeticOperation COMMA functionCallParams .

    $default  reduce using rule 38 (functionCallParams)


State 76

   18 params: INT_TYPE ID . $@7 params

    $default  reduce using rule 17 ($@7)

    $@7  go to state 79


State 77

   19 params: COMMA INT_TYPE . ID params

    ID  shift, and go to state 80


State 78

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  shift, and go to state 81


State 79

   18 params: INT_TYPE ID $@7 . params

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 20 (params)

    params  go to state 82


State 80

   19 params: COMMA INT_TYPE ID . params

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 20 (params)

    params  go to state 83


State 81

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 15 ($@6)

    $@6  go to state 84


State 82

   18 params: INT_TYPE ID $@7 params .

    $default  reduce using rule 18 (params)


State 83

   19 params: COMMA INT_TYPE ID params .

    $default  reduce using rule 19 (params)


State 84

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  shift, and go to state 85


State 85

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  shift, and go to state 86


State 86

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 92
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 87

   29 instruction: BREAK .

    $default  reduce using rule 29 (instruction)


State 88

   51 return: RETURN . ID $@9 $@10
   54       | RETURN . INT_VAL $@11 $@12
   57       | RETURN . aritmeticOperation $@13 $@14
   59       | RETURN . ID PARENTESIS_OPEN $@15 functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 99
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 100

    aritmeticOperation  go to state 101


State 89

   70 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    PARENTESIS_OPEN  shift, and go to state 102


State 90

   23 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 103
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 91

   26 instruction: declaration .

    $default  reduce using rule 26 (instruction)


State 92

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  shift, and go to state 104


State 93

   21 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  shift, and go to state 105


State 94

   25 instruction: assignation .

    $default  reduce using rule 25 (instruction)


State 95

   27 instruction: return .

    $default  reduce using rule 27 (instruction)


State 96

   28 instruction: print .

    $default  reduce using rule 28 (instruction)


State 97

   22 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  shift, and go to state 106


State 98

   75 controlStructure: $@22 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  shift, and go to state 107


State 99

   47 aritmeticOperation: INT_VAL .
   54 return: RETURN INT_VAL . $@11 $@12

    END_OF_INSTRUCTION  reduce using rule 47 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce using rule 52 ($@11)]
    $default            reduce using rule 47 (aritmeticOperation)

    $@11  go to state 108


State 100

   46 aritmeticOperation: ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE
   48                   | ID .
   51 return: RETURN ID . $@9 $@10
   59       | RETURN ID . PARENTESIS_OPEN $@15 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  shift, and go to state 109

    END_OF_INSTRUCTION  reduce using rule 48 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce using rule 49 ($@9)]
    $default            reduce using rule 48 (aritmeticOperation)

    $@9  go to state 110


State 101

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   57 return: RETURN aritmeticOperation . $@13 $@14

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47

    $default  reduce using rule 55 ($@13)

    $@13  go to state 111


State 102

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    INT_VAL  shift, and go to state 112
    ID       shift, and go to state 113

    logicalOperation  go to state 114


State 103

   23 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 23 (codeSet)


State 104

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  shift, and go to state 115


State 105

   21 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 116
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 106

   22 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 117
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 107

   75 controlStructure: $@22 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  shift, and go to state 118


State 108

   54 return: RETURN INT_VAL $@11 . $@12

    $default  reduce using rule 53 ($@12)

    $@12  go to state 119


State 109

   46 aritmeticOperation: ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE
   59 return: RETURN ID PARENTESIS_OPEN . $@15 functionCallParams PARENTESIS_CLOSE

    INT_VAL           reduce using rule 45 ($@8)
    INT_VAL           [reduce using rule 58 ($@15)]
    PARENTESIS_OPEN   reduce using rule 45 ($@8)
    PARENTESIS_OPEN   [reduce using rule 58 ($@15)]
    PARENTESIS_CLOSE  reduce using rule 45 ($@8)
    PARENTESIS_CLOSE  [reduce using rule 58 ($@15)]
    ID                reduce using rule 45 ($@8)
    ID                [reduce using rule 58 ($@15)]
    $default          reduce using rule 45 ($@8)

    $@8   go to state 55
    $@15  go to state 120


State 110

   51 return: RETURN ID $@9 . $@10

    $default  reduce using rule 50 ($@10)

    $@10  go to state 121


State 111

   57 return: RETURN aritmeticOperation $@13 . $@14

    $default  reduce using rule 56 ($@14)

    $@14  go to state 122


State 112

   78 logicalOperation: INT_VAL . logicalOperator INT_VAL
   79                 | INT_VAL . logicalOperator ID

    EQUALS          shift, and go to state 123
    NOT_EQUALS      shift, and go to state 124
    GREATER         shift, and go to state 125
    GREATER_EQUALS  shift, and go to state 126
    LESS            shift, and go to state 127
    LESS_EQUALS     shift, and go to state 128

    logicalOperator  go to state 129


State 113

   76 logicalOperation: ID . logicalOperator ID
   77                 | ID . logicalOperator INT_VAL

    EQUALS          shift, and go to state 123
    NOT_EQUALS      shift, and go to state 124
    GREATER         shift, and go to state 125
    GREATER_EQUALS  shift, and go to state 126
    LESS            shift, and go to state 127
    LESS_EQUALS     shift, and go to state 128

    logicalOperator  go to state 130


State 114

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    PARENTESIS_CLOSE  shift, and go to state 131


State 115

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce using rule 16 (function)


State 116

   21 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 21 (codeSet)


State 117

   22 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 22 (codeSet)


State 118

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    INT_VAL  shift, and go to state 112
    ID       shift, and go to state 113

    logicalOperation  go to state 132


State 119

   54 return: RETURN INT_VAL $@11 $@12 .

    $default  reduce using rule 54 (return)


State 120

   59 return: RETURN ID PARENTESIS_OPEN $@15 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 39 (functionCallParams)

    functionCallParams  go to state 133
    aritmeticOperation  go to state 65


State 121

   51 return: RETURN ID $@9 $@10 .

    $default  reduce using rule 51 (return)


State 122

   57 return: RETURN aritmeticOperation $@13 $@14 .

    $default  reduce using rule 57 (return)


State 123

   80 logicalOperator: EQUALS .

    $default  reduce using rule 80 (logicalOperator)


State 124

   81 logicalOperator: NOT_EQUALS .

    $default  reduce using rule 81 (logicalOperator)


State 125

   84 logicalOperator: GREATER .

    $default  reduce using rule 84 (logicalOperator)


State 126

   85 logicalOperator: GREATER_EQUALS .

    $default  reduce using rule 85 (logicalOperator)


State 127

   82 logicalOperator: LESS .

    $default  reduce using rule 82 (logicalOperator)


State 128

   83 logicalOperator: LESS_EQUALS .

    $default  reduce using rule 83 (logicalOperator)


State 129

   78 logicalOperation: INT_VAL logicalOperator . INT_VAL
   79                 | INT_VAL logicalOperator . ID

    INT_VAL  shift, and go to state 134
    ID       shift, and go to state 135


State 130

   76 logicalOperation: ID logicalOperator . ID
   77                 | ID logicalOperator . INT_VAL

    INT_VAL  shift, and go to state 136
    ID       shift, and go to state 137


State 131

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    $default  reduce using rule 67 ($@19)

    $@19  go to state 138


State 132

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    $default  reduce using rule 72 ($@23)

    $@23  go to state 139


State 133

   59 return: RETURN ID PARENTESIS_OPEN $@15 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 140


State 134

   78 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce using rule 78 (logicalOperation)


State 135

   79 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce using rule 79 (logicalOperation)


State 136

   77 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce using rule 77 (logicalOperation)


State 137

   76 logicalOperation: ID logicalOperator ID .

    $default  reduce using rule 76 (logicalOperation)


State 138

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    CURLY_BRACKET_OPEN  shift, and go to state 141


State 139

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 142


State 140

   59 return: RETURN ID PARENTESIS_OPEN $@15 functionCallParams PARENTESIS_CLOSE .

    $default  reduce using rule 59 (return)


State 141

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    END_OF_INSTRUCTION  shift, and go to state 143


State 142

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 144


State 143

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@20 codeSet CURLY_BRACKET_CLOSE $@21 else

    $default  reduce using rule 68 ($@20)

    $@20  go to state 145


State 144

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  shift, and go to state 146


State 145

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 . codeSet CURLY_BRACKET_CLOSE $@21 else

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 147
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 146

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@24 codeSet $@25 CURLY_BRACKET_CLOSE

    $default  reduce using rule 73 ($@24)

    $@24  go to state 148


State 147

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet . CURLY_BRACKET_CLOSE $@21 else

    CURLY_BRACKET_CLOSE  shift, and go to state 149


State 148

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 . codeSet $@25 CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 150
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 149

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE . $@21 else

    $default  reduce using rule 69 ($@21)

    $@21  go to state 151


State 150

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet . $@25 CURLY_BRACKET_CLOSE

    $default  reduce using rule 74 ($@25)

    $@25  go to state 152


State 151

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 . else

    END_OF_INSTRUCTION  reduce using rule 66 (else)
    $default            reduce using rule 62 ($@16)

    else  go to state 153
    $@16  go to state 154


State 152

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 155


State 153

   70 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE $@21 else .

    $default  reduce using rule 70 (controlStructure)


State 154

   65 else: $@16 . ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  shift, and go to state 156


State 155

   75 controlStructure: $@22 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@23 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@24 codeSet $@25 CURLY_BRACKET_CLOSE .

    $default  reduce using rule 75 (controlStructure)


State 156

   65 else: $@16 ELSE_CLAUSE . $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE

    $default  reduce using rule 63 ($@17)

    $@17  go to state 157


State 157

   65 else: $@16 ELSE_CLAUSE $@17 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 158


State 158

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  shift, and go to state 159


State 159

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@18 codeSet CURLY_BRACKET_CLOSE

    $default  reduce using rule 64 ($@18)

    $@18  go to state 160


State 160

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 . codeSet CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 87
    RETURN              shift, and go to state 88
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 89
    END_OF_INSTRUCTION  shift, and go to state 90
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 71 ($@22)
    $default      reduce using rule 24 (codeSet)

    declaration       go to state 91
    codeSet           go to state 161
    instruction       go to state 93
    assignation       go to state 94
    return            go to state 95
    print             go to state 96
    controlStructure  go to state 97
    $@22              go to state 98


State 161

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 162


State 162

   65 else: $@16 ELSE_CLAUSE $@17 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@18 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce using rule 65 (else)
