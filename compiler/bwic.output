Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   49 return: RETURN ID
   50       | RETURN INT_VAL


Estado 22 conflictos: 1 reducción/reducción
Estado 24 conflictos: 1 reducción/reducción
Estado 91 conflictos: 1 reducción/reducción
Estado 92 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | %empty

    9 declaration: INT_TYPE ID
   10            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   11 $@3: %empty

   12 $@4: %empty

   13 $@5: %empty

   14 $@6: %empty

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   16 params: INT_TYPE ID params
   17       | COMMA INT_TYPE ID params
   18       | %empty

   19 codeSet: instruction END_OF_INSTRUCTION codeSet
   20        | controlStructure END_OF_INSTRUCTION codeSet
   21        | END_OF_INSTRUCTION codeSet
   22        | %empty

   23 instruction: assignation
   24            | declaration
   25            | return
   26            | print
   27            | BREAK

   28 assignation: ID ASSIGN INT_VAL
   29            | ID ASSIGN ID
   30            | ID PLUSPLUS
   31            | ID MINUSMINUS

   32 $@7: %empty

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   34            | ID ASSIGN aritmeticOperation
   35            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   36            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   37            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   38 functionCallParams: INT_VAL
   39                   | ID
   40                   | INT_VAL COMMA functionCallParams
   41                   | ID COMMA functionCallParams

   42 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   43                   | aritmeticOperation SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation PRODUCT aritmeticOperation
   45                   | aritmeticOperation DIVIDE aritmeticOperation
   46                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   47                   | INT_VAL
   48                   | ID

   49 return: RETURN ID
   50       | RETURN INT_VAL
   51       | RETURN aritmeticOperation

   52 $@8: %empty

   53 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

   54 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   55 printableElement: ID
   56                 | QUOTE text QUOTE
   57                 | printableElement SUM printableElement

   58 text: STRING_VAL
   59     | ' '

   60 $@9: %empty

   61 $@10: %empty

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE
   63     | %empty

   64 $@11: %empty

   65 $@12: %empty

   66 $@13: %empty

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

   68 $@14: %empty

   69 $@15: %empty

   70 $@16: %empty

   71 $@17: %empty

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

   73 logicalOperation: ID logicalOperator ID
   74                 | ID logicalOperator INT_VAL
   75                 | INT_VAL logicalOperator INT_VAL
   76                 | INT_VAL logicalOperator ID

   77 logicalOperator: EQUALS
   78                | NOT_EQUALS
   79                | LESS
   80                | LESS_EQUALS
   81                | GREATER
   82                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 59
error (256)
CONTINUE (258)
BREAK (259) 27
RETURN (260) 49 50 51 53
FUN (261) 15
INT_VAL (262) 10 28 35 36 37 38 40 47 50 74 75 76
STRING_VAL (263) 58
INT_TYPE (264) 9 10 16 17
STRING_TYPE (265)
ASSIGN (266) 28 29 33 34 35 36 37
SUM (267) 42 57
SUBSTRACT (268) 43
PRODUCT (269) 44
DIVIDE (270) 45
AND (271)
OR (272)
NOT (273)
EQUALS (274) 77
NOT_EQUALS (275) 78
GREATER (276) 81
GREATER_EQUALS (277) 82
LESS (278) 79
LESS_EQUALS (279) 80
IF_CLAUSE (280) 67
WHILE_CLAUSE (281) 72
ELSE_CLAUSE (282) 62
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 10 35 36 37
SQUARE_BRACKET_CLOSE (285) 10 35 36 37
CURLY_BRACKET_OPEN (286) 15 62 67 72
CURLY_BRACKET_CLOSE (287) 15 62 67 72
COMMA (288) 17 40 41
PARENTESIS_OPEN (289) 15 33 46 53 54 67 72
PARENTESIS_CLOSE (290) 15 33 46 53 54 67 72
END_OF_INSTRUCTION (291) 3 4 7 15 19 20 21 62 67 72
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 56
ID (295) 9 10 15 16 17 28 29 30 31 33 34 35 36 37 39 41 48 49 53 55
    73 74 76
PRINT (296) 54
PLUSPLUS (297) 30
MINUSMINUS (298) 31


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8, en la derecha: 2 3 4 6 7
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 9 10, en la derecha: 3 24
function (51)
    en la izquierda: 15, en la derecha: 6
$@3 (52)
    en la izquierda: 11, en la derecha: 15
$@4 (53)
    en la izquierda: 12, en la derecha: 15
$@5 (54)
    en la izquierda: 13, en la derecha: 15
$@6 (55)
    en la izquierda: 14, en la derecha: 15
params (56)
    en la izquierda: 16 17 18, en la derecha: 15 16 17
codeSet (57)
    en la izquierda: 19 20 21 22, en la derecha: 15 19 20 21 62 67
    72
instruction (58)
    en la izquierda: 23 24 25 26 27, en la derecha: 19
assignation (59)
    en la izquierda: 28 29 30 31 33 34 35 36 37, en la derecha: 4 23
$@7 (60)
    en la izquierda: 32, en la derecha: 33
functionCallParams (61)
    en la izquierda: 38 39 40 41, en la derecha: 33 40 41 53
aritmeticOperation (62)
    en la izquierda: 42 43 44 45 46 47 48, en la derecha: 34 42 43
    44 45 46 51
return (63)
    en la izquierda: 49 50 51 53, en la derecha: 25
$@8 (64)
    en la izquierda: 52, en la derecha: 53
print (65)
    en la izquierda: 54, en la derecha: 26
printableElement (66)
    en la izquierda: 55 56 57, en la derecha: 54 57
text (67)
    en la izquierda: 58 59, en la derecha: 56
else (68)
    en la izquierda: 62 63, en la derecha: 67
$@9 (69)
    en la izquierda: 60, en la derecha: 62
$@10 (70)
    en la izquierda: 61, en la derecha: 62
controlStructure (71)
    en la izquierda: 67 72, en la derecha: 20
$@11 (72)
    en la izquierda: 64, en la derecha: 67
$@12 (73)
    en la izquierda: 65, en la derecha: 67
$@13 (74)
    en la izquierda: 66, en la derecha: 67
$@14 (75)
    en la izquierda: 68, en la derecha: 72
$@15 (76)
    en la izquierda: 69, en la derecha: 72
$@16 (77)
    en la izquierda: 70, en la derecha: 72
$@17 (78)
    en la izquierda: 71, en la derecha: 72
logicalOperation (79)
    en la izquierda: 73 74 75 76, en la derecha: 67 72
logicalOperator (80)
    en la izquierda: 77 78 79 80 81 82, en la derecha: 73 74 75 76


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 7
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

    9 declaration: INT_TYPE . ID
   10            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 11


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 12
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 6

   28 assignation: ID . ASSIGN INT_VAL
   29            | ID . ASSIGN ID
   30            | ID . PLUSPLUS
   31            | ID . MINUSMINUS
   33            | ID . ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   34            | ID . ASSIGN aritmeticOperation
   35            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   36            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   37            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               desplazar e ir al estado 13
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 14
    PLUSPLUS             desplazar e ir al estado 15
    MINUSMINUS           desplazar e ir al estado 16


Estado 7

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 8

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 17

    function  ir al estado 18


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 19


Estado 10

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 20


Estado 11

    9 declaration: INT_TYPE ID .
   10            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 21

    $default  reduce usando la regla 9 (declaration)


Estado 12

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 13

   28 assignation: ID ASSIGN . INT_VAL
   29            | ID ASSIGN . ID
   33            | ID ASSIGN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   34            | ID ASSIGN . aritmeticOperation
   37            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL          desplazar e ir al estado 22
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 24

    aritmeticOperation  ir al estado 25


Estado 14

   35 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   36            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  desplazar e ir al estado 26


Estado 15

   30 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 30 (assignation)


Estado 16

   31 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 31 (assignation)


Estado 17

   15 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 27


Estado 18

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 28
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 19

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 29
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 20

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 30
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 21

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 31


Estado 22

   28 assignation: ID ASSIGN INT_VAL .
   47 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 47 (aritmeticOperation)]
    $default            reduce usando la regla 47 (aritmeticOperation)


Estado 23

   46 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 32
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 34


Estado 24

   29 assignation: ID ASSIGN ID .
   33            | ID ASSIGN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   37            | ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   48 aritmeticOperation: ID .

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 35
    PARENTESIS_OPEN      desplazar e ir al estado 36

    END_OF_INSTRUCTION  reduce usando la regla 29 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 48 (aritmeticOperation)]
    $default            reduce usando la regla 48 (aritmeticOperation)


Estado 25

   34 assignation: ID ASSIGN aritmeticOperation .
   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 37
    SUBSTRACT  desplazar e ir al estado 38
    PRODUCT    desplazar e ir al estado 39
    DIVIDE     desplazar e ir al estado 40

    $default  reduce usando la regla 34 (assignation)


Estado 26

   35 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   36            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 41


Estado 27

   15 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@3)

    $@3  ir al estado 42


Estado 28

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 29

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 30

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 31

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 43


Estado 32

   47 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 47 (aritmeticOperation)


Estado 33

   48 aritmeticOperation: ID .

    $default  reduce usando la regla 48 (aritmeticOperation)


Estado 34

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation
   46                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 37
    SUBSTRACT         desplazar e ir al estado 38
    PRODUCT           desplazar e ir al estado 39
    DIVIDE            desplazar e ir al estado 40
    PARENTESIS_CLOSE  desplazar e ir al estado 44


Estado 35

   37 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 45


Estado 36

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 32 ($@7)

    $@7  ir al estado 46


Estado 37

   42 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 32
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 47


Estado 38

   43 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 32
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 48


Estado 39

   44 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 32
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 49


Estado 40

   45 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 32
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 50


Estado 41

   35 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   36            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  desplazar e ir al estado 51


Estado 42

   15 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 52


Estado 43

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 10 (declaration)


Estado 44

   46 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 46 (aritmeticOperation)


Estado 45

   37 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 53


Estado 46

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 54
    ID       desplazar e ir al estado 55

    functionCallParams  ir al estado 56


Estado 47

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation SUM aritmeticOperation .
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 39
    DIVIDE   desplazar e ir al estado 40

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 48

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 39
    DIVIDE   desplazar e ir al estado 40

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 49

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation PRODUCT aritmeticOperation .
   45                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 50

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation
   45                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 51

   35 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   36            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  desplazar e ir al estado 57
    ID       desplazar e ir al estado 58


Estado 52

   15 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@4)

    $@4  ir al estado 59


Estado 53

   37 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 37 (assignation)


Estado 54

   38 functionCallParams: INT_VAL .
   40                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 60

    $default  reduce usando la regla 38 (functionCallParams)


Estado 55

   39 functionCallParams: ID .
   41                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 61

    $default  reduce usando la regla 39 (functionCallParams)


Estado 56

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 62


Estado 57

   36 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce usando la regla 36 (assignation)


Estado 58

   35 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce usando la regla 35 (assignation)


Estado 59

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 63
    COMMA     desplazar e ir al estado 64

    $default  reduce usando la regla 18 (params)

    params  ir al estado 65


Estado 60

   40 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 54
    ID       desplazar e ir al estado 55

    functionCallParams  ir al estado 66


Estado 61

   41 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 54
    ID       desplazar e ir al estado 55

    functionCallParams  ir al estado 67


Estado 62

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 33 (assignation)


Estado 63

   16 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 68


Estado 64

   17 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 69


Estado 65

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@5)

    $@5  ir al estado 70


Estado 66

   40 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 40 (functionCallParams)


Estado 67

   41 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 41 (functionCallParams)


Estado 68

   16 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 63
    COMMA     desplazar e ir al estado 64

    $default  reduce usando la regla 18 (params)

    params  ir al estado 71


Estado 69

   17 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 72


Estado 70

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 73


Estado 71

   16 params: INT_TYPE ID params .

    $default  reduce usando la regla 16 (params)


Estado 72

   17 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 63
    COMMA     desplazar e ir al estado 64

    $default  reduce usando la regla 18 (params)

    params  ir al estado 74


Estado 73

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@6)

    $@6  ir al estado 75


Estado 74

   17 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 17 (params)


Estado 75

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 76


Estado 76

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 77


Estado 77

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 84
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 78

   27 instruction: BREAK .

    $default  reduce usando la regla 27 (instruction)


Estado 79

   49 return: RETURN . ID
   50       | RETURN . INT_VAL
   51       | RETURN . aritmeticOperation
   53       | RETURN . ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 91
    PARENTESIS_OPEN  desplazar e ir al estado 23
    ID               desplazar e ir al estado 92

    aritmeticOperation  ir al estado 93


Estado 80

   67 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    PARENTESIS_OPEN  desplazar e ir al estado 94


Estado 81

   21 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 95
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 82

   54 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 96


Estado 83

   24 instruction: declaration .

    $default  reduce usando la regla 24 (instruction)


Estado 84

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 97


Estado 85

   19 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 98


Estado 86

   23 instruction: assignation .

    $default  reduce usando la regla 23 (instruction)


Estado 87

   25 instruction: return .

    $default  reduce usando la regla 25 (instruction)


Estado 88

   26 instruction: print .

    $default  reduce usando la regla 26 (instruction)


Estado 89

   20 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 99


Estado 90

   72 controlStructure: $@14 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 100


Estado 91

   47 aritmeticOperation: INT_VAL .
   50 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 47 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 50 (return)]
    $default            reduce usando la regla 47 (aritmeticOperation)


Estado 92

   48 aritmeticOperation: ID .
   49 return: RETURN ID .
   53       | RETURN ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 101

    END_OF_INSTRUCTION  reduce usando la regla 48 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 49 (return)]
    $default            reduce usando la regla 48 (aritmeticOperation)


Estado 93

   42 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation . DIVIDE aritmeticOperation
   51 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 37
    SUBSTRACT  desplazar e ir al estado 38
    PRODUCT    desplazar e ir al estado 39
    DIVIDE     desplazar e ir al estado 40

    $default  reduce usando la regla 51 (return)


Estado 94

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    INT_VAL  desplazar e ir al estado 102
    ID       desplazar e ir al estado 103

    logicalOperation  ir al estado 104


Estado 95

   21 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 21 (codeSet)


Estado 96

   54 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 105
    ID     desplazar e ir al estado 106

    printableElement  ir al estado 107


Estado 97

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 108


Estado 98

   19 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 109
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 99

   20 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 110
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 100

   72 controlStructure: $@14 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 111


Estado 101

   53 return: RETURN ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 52 ($@8)

    $@8  ir al estado 112


Estado 102

   75 logicalOperation: INT_VAL . logicalOperator INT_VAL
   76                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 113
    NOT_EQUALS      desplazar e ir al estado 114
    GREATER         desplazar e ir al estado 115
    GREATER_EQUALS  desplazar e ir al estado 116
    LESS            desplazar e ir al estado 117
    LESS_EQUALS     desplazar e ir al estado 118

    logicalOperator  ir al estado 119


Estado 103

   73 logicalOperation: ID . logicalOperator ID
   74                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 113
    NOT_EQUALS      desplazar e ir al estado 114
    GREATER         desplazar e ir al estado 115
    GREATER_EQUALS  desplazar e ir al estado 116
    LESS            desplazar e ir al estado 117
    LESS_EQUALS     desplazar e ir al estado 118

    logicalOperator  ir al estado 120


Estado 104

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    PARENTESIS_CLOSE  desplazar e ir al estado 121


Estado 105

   56 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 122
    ' '         desplazar e ir al estado 123

    text  ir al estado 124


Estado 106

   55 printableElement: ID .

    $default  reduce usando la regla 55 (printableElement)


Estado 107

   54 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   57 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 125
    PARENTESIS_CLOSE  desplazar e ir al estado 126


Estado 108

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 15 (function)


Estado 109

   19 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 110

   20 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 111

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 102
    ID       desplazar e ir al estado 103

    logicalOperation  ir al estado 127


Estado 112

   53 return: RETURN ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 54
    ID       desplazar e ir al estado 55

    functionCallParams  ir al estado 128


Estado 113

   77 logicalOperator: EQUALS .

    $default  reduce usando la regla 77 (logicalOperator)


Estado 114

   78 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 78 (logicalOperator)


Estado 115

   81 logicalOperator: GREATER .

    $default  reduce usando la regla 81 (logicalOperator)


Estado 116

   82 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 82 (logicalOperator)


Estado 117

   79 logicalOperator: LESS .

    $default  reduce usando la regla 79 (logicalOperator)


Estado 118

   80 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 80 (logicalOperator)


Estado 119

   75 logicalOperation: INT_VAL logicalOperator . INT_VAL
   76                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 129
    ID       desplazar e ir al estado 130


Estado 120

   73 logicalOperation: ID logicalOperator . ID
   74                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 131
    ID       desplazar e ir al estado 132


Estado 121

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    $default  reduce usando la regla 64 ($@11)

    $@11  ir al estado 133


Estado 122

   58 text: STRING_VAL .

    $default  reduce usando la regla 58 (text)


Estado 123

   59 text: ' ' .

    $default  reduce usando la regla 59 (text)


Estado 124

   56 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 134


Estado 125

   57 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 105
    ID     desplazar e ir al estado 106

    printableElement  ir al estado 135


Estado 126

   54 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 54 (print)


Estado 127

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 136


Estado 128

   53 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 137


Estado 129

   75 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 75 (logicalOperation)


Estado 130

   76 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 76 (logicalOperation)


Estado 131

   74 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 74 (logicalOperation)


Estado 132

   73 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 73 (logicalOperation)


Estado 133

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 138


Estado 134

   56 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 56 (printableElement)


Estado 135

   57 printableElement: printableElement . SUM printableElement
   57                 | printableElement SUM printableElement .

    $default  reduce usando la regla 57 (printableElement)


Estado 136

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 69 ($@15)

    $@15  ir al estado 139


Estado 137

   53 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 53 (return)


Estado 138

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    END_OF_INSTRUCTION  desplazar e ir al estado 140


Estado 139

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 141


Estado 140

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    $default  reduce usando la regla 65 ($@12)

    $@12  ir al estado 142


Estado 141

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 143


Estado 142

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 . codeSet CURLY_BRACKET_CLOSE $@13 else

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 144
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 143

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 70 ($@16)

    $@16  ir al estado 145


Estado 144

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet . CURLY_BRACKET_CLOSE $@13 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 146


Estado 145

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 . codeSet $@17 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 147
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 146

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE . $@13 else

    $default  reduce usando la regla 66 ($@13)

    $@13  ir al estado 148


Estado 147

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet . $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 71 ($@17)

    $@17  ir al estado 149


Estado 148

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 . else

    END_OF_INSTRUCTION  reduce usando la regla 63 (else)
    $default            reduce usando la regla 60 ($@9)

    else  ir al estado 150
    $@9   ir al estado 151


Estado 149

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 152


Estado 150

   67 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else .

    $default  reduce usando la regla 67 (controlStructure)


Estado 151

   62 else: $@9 . ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 153


Estado 152

   72 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 72 (controlStructure)


Estado 153

   62 else: $@9 ELSE_CLAUSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 154


Estado 154

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 155


Estado 155

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@10 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 61 ($@10)

    $@10  ir al estado 156


Estado 156

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 78
    RETURN              desplazar e ir al estado 79
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 80
    END_OF_INSTRUCTION  desplazar e ir al estado 81
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 82

    WHILE_CLAUSE  reduce usando la regla 68 ($@14)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 83
    codeSet           ir al estado 157
    instruction       ir al estado 85
    assignation       ir al estado 86
    return            ir al estado 87
    print             ir al estado 88
    controlStructure  ir al estado 89
    $@14              ir al estado 90


Estado 157

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 158


Estado 158

   62 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 62 (else)
