No terminales inútiles en la gramática

   aritmeticOperationSubstract
   aritmeticOperationSum


Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   SQUARE_BRACKET_OPEN
   SQUARE_BRACKET_CLOSE
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


Reglas inútiles en la gramática

   77 aritmeticOperationSubstract: aritmeticOperation
   78                            | ID
   79                            | INT_VAL

   80 aritmeticOperationSum: aritmeticOperation
   81                      | INT_VAL
   82                      | ID


La regla es inútil debido a los conflictos

   44 return: RETURN ID
   45       | RETURN INT_VAL

   65 structuresWord: IF_CLAUSE


Estado 20 conflictos: 1 reducción/reducción
Estado 22 conflictos: 1 reducción/reducción
Estado 66 conflictos: 1 desplazamiento/reducción
Estado 79 conflictos: 1 reducción/reducción
Estado 80 conflictos: 1 reducción/reducción
Estado 92 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root
    5     | function root
    6     | END_OF_INSTRUCTION root
    7     | %empty

    8 declaration: INT_TYPE ID

    9 $@2: %empty

   10 $@3: %empty

   11 $@4: %empty

   12 $@5: %empty

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   14 params: INT_TYPE ID params
   15       | COMMA INT_TYPE ID params
   16       | %empty

   17 codeSet: instruction END_OF_INSTRUCTION codeSet
   18        | controlStructure codeSet
   19        | END_OF_INSTRUCTION codeSet
   20        | %empty

   21 instruction: assignation
   22            | declaration
   23            | ID ASSIGN aritmeticOperation
   24            | return
   25            | print
   26            | BREAK

   27 assignation: ID ASSIGN INT_VAL
   28            | ID ASSIGN ID

   29 $@6: %empty

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN aritmeticOperation

   32 functionCallParams: INT_VAL
   33                   | ID
   34                   | INT_VAL COMMA functionCallParams
   35                   | ID COMMA functionCallParams

   36 aritmeticOperation: aritmeticOperation SUM aritmeticOperator
   37                   | aritmeticOperation SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation PRODUCT aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation
   40                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   41                   | aritmeticOperator

   42 aritmeticOperator: ID
   43                  | INT_VAL

   44 return: RETURN ID
   45       | RETURN INT_VAL
   46       | RETURN aritmeticOperation

   47 $@7: %empty

   48 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

   49 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   50 printableElement: ID
   51                 | QUOTE text QUOTE
   52                 | printableElement SUM printableElement

   53 text: STRING_VAL
   54     | ' '

   55 $@8: %empty

   56 $@9: %empty

   57 $@10: %empty

   58 $@11: %empty

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

   60 $@12: %empty

   61 $@13: %empty

   62 $@14: %empty

   63 $@15: %empty

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

   65 structuresWord: IF_CLAUSE
   66               | WHILE_CLAUSE

   67 logicalOperation: ID logicalOperator ID
   68                 | ID logicalOperator INT_VAL
   69                 | INT_VAL logicalOperator INT_VAL
   70                 | INT_VAL logicalOperator ID

   71 logicalOperator: EQUALS
   72                | NOT_EQUALS
   73                | GREATER
   74                | LESS
   75                | GREATER_EQUALS
   76                | LESS_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 54
error (256)
CONTINUE (258)
BREAK (259) 26
RETURN (260) 44 45 46 48
FUN (261) 13
INT_VAL (262) 27 32 34 43 45 68 69 70
STRING_VAL (263) 53
INT_TYPE (264) 8 14 15
STRING_TYPE (265)
ASSIGN (266) 23 27 28 30 31
SUM (267) 36 52
SUBSTRACT (268) 37
PRODUCT (269) 38
DIVIDE (270) 39
AND (271)
OR (272)
NOT (273)
EQUALS (274) 71
NOT_EQUALS (275) 72
GREATER (276) 73
GREATER_EQUALS (277) 75
LESS (278) 74
LESS_EQUALS (279) 76
IF_CLAUSE (280) 59 65
WHILE_CLAUSE (281) 66
ELSE_CLAUSE (282) 59
HEADER_END (283)
SQUARE_BRACKET_OPEN (284)
SQUARE_BRACKET_CLOSE (285)
CURLY_BRACKET_OPEN (286) 13 59 64
CURLY_BRACKET_CLOSE (287) 13 59 64
COMMA (288) 15 34 35
PARENTESIS_OPEN (289) 13 30 40 48 49 59 64
PARENTESIS_CLOSE (290) 13 30 40 48 49 59 64
END_OF_INSTRUCTION (291) 3 4 6 13 17 19 59 64
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 51
ID (295) 8 13 14 15 23 27 28 30 31 33 35 42 44 48 50 67 68 70
PRINT (296) 49


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
begin (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
root (46)
    en la izquierda: 3 4 5 6 7, en la derecha: 2 3 4 5 6
declaration (47)
    en la izquierda: 8, en la derecha: 3 22
function (48)
    en la izquierda: 13, en la derecha: 5
$@2 (49)
    en la izquierda: 9, en la derecha: 13
$@3 (50)
    en la izquierda: 10, en la derecha: 13
$@4 (51)
    en la izquierda: 11, en la derecha: 13
$@5 (52)
    en la izquierda: 12, en la derecha: 13
params (53)
    en la izquierda: 14 15 16, en la derecha: 13 14 15
codeSet (54)
    en la izquierda: 17 18 19 20, en la derecha: 13 17 18 19 59 64
instruction (55)
    en la izquierda: 21 22 23 24 25 26, en la derecha: 17
assignation (56)
    en la izquierda: 27 28 30 31, en la derecha: 4 21
$@6 (57)
    en la izquierda: 29, en la derecha: 30
functionCallParams (58)
    en la izquierda: 32 33 34 35, en la derecha: 30 34 35 48
aritmeticOperation (59)
    en la izquierda: 36 37 38 39 40 41, en la derecha: 23 31 36 37
    38 39 40 46
aritmeticOperator (60)
    en la izquierda: 42 43, en la derecha: 36 37 41
return (61)
    en la izquierda: 44 45 46 48, en la derecha: 24
$@7 (62)
    en la izquierda: 47, en la derecha: 48
print (63)
    en la izquierda: 49, en la derecha: 25
printableElement (64)
    en la izquierda: 50 51 52, en la derecha: 49 52
text (65)
    en la izquierda: 53 54, en la derecha: 51
controlStructure (66)
    en la izquierda: 59 64, en la derecha: 18
$@8 (67)
    en la izquierda: 55, en la derecha: 59
$@9 (68)
    en la izquierda: 56, en la derecha: 59
$@10 (69)
    en la izquierda: 57, en la derecha: 59
$@11 (70)
    en la izquierda: 58, en la derecha: 59
$@12 (71)
    en la izquierda: 60, en la derecha: 64
$@13 (72)
    en la izquierda: 61, en la derecha: 64
$@14 (73)
    en la izquierda: 62, en la derecha: 64
$@15 (74)
    en la izquierda: 63, en la derecha: 64
structuresWord (75)
    en la izquierda: 65 66, en la derecha: 64
logicalOperation (76)
    en la izquierda: 67 68 69 70, en la derecha: 59 64
logicalOperator (77)
    en la izquierda: 71 72 73 74 75 76, en la derecha: 67 68 69 70


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 8
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   13 function: FUN . ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 12


Estado 5

    8 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 13


Estado 6

    6 root: END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 14
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 7

   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   30            | ID . ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 15


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 16


Estado 10

    5 root: function . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 17
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 18


Estado 12

   13 function: FUN ID . $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 9 ($@2)

    $@2  ir al estado 19


Estado 13

    8 declaration: INT_TYPE ID .

    $default  reduce usando la regla 8 (declaration)


Estado 14

    6 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 6 (root)


Estado 15

   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   30            | ID ASSIGN . ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 20
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 22

    aritmeticOperation  ir al estado 23
    aritmeticOperator   ir al estado 24


Estado 16

    3 root: declaration END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 25
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 17

    5 root: function root .

    $default  reduce usando la regla 5 (root)


Estado 18

    4 root: assignation END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 26
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 19

   13 function: FUN ID $@2 . PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 27


Estado 20

   27 assignation: ID ASSIGN INT_VAL .
   43 aritmeticOperator: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 27 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 43 (aritmeticOperator)]
    $default            reduce usando la regla 43 (aritmeticOperator)


Estado 21

   40 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 28
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 29

    aritmeticOperation  ir al estado 30
    aritmeticOperator   ir al estado 24


Estado 22

   28 assignation: ID ASSIGN ID .
   30            | ID ASSIGN ID . PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   42 aritmeticOperator: ID .

    PARENTESIS_OPEN  desplazar e ir al estado 31

    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 42 (aritmeticOperator)]
    $default            reduce usando la regla 42 (aritmeticOperator)


Estado 23

   31 assignation: ID ASSIGN aritmeticOperation .
   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 32
    SUBSTRACT  desplazar e ir al estado 33
    PRODUCT    desplazar e ir al estado 34
    DIVIDE     desplazar e ir al estado 35

    $default  reduce usando la regla 31 (assignation)


Estado 24

   41 aritmeticOperation: aritmeticOperator .

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 25

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 26

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 27

   13 function: FUN ID $@2 PARENTESIS_OPEN . $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 10 ($@3)

    $@3  ir al estado 36


Estado 28

   43 aritmeticOperator: INT_VAL .

    $default  reduce usando la regla 43 (aritmeticOperator)


Estado 29

   42 aritmeticOperator: ID .

    $default  reduce usando la regla 42 (aritmeticOperator)


Estado 30

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   40                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 32
    SUBSTRACT         desplazar e ir al estado 33
    PRODUCT           desplazar e ir al estado 34
    DIVIDE            desplazar e ir al estado 35
    PARENTESIS_CLOSE  desplazar e ir al estado 37


Estado 31

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@6 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 29 ($@6)

    $@6  ir al estado 38


Estado 32

   36 aritmeticOperation: aritmeticOperation SUM . aritmeticOperator

    INT_VAL  desplazar e ir al estado 28
    ID       desplazar e ir al estado 29

    aritmeticOperator  ir al estado 39


Estado 33

   37 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperator

    INT_VAL  desplazar e ir al estado 28
    ID       desplazar e ir al estado 29

    aritmeticOperator  ir al estado 40


Estado 34

   38 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 28
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 29

    aritmeticOperation  ir al estado 41
    aritmeticOperator   ir al estado 24


Estado 35

   39 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 28
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 29

    aritmeticOperation  ir al estado 42
    aritmeticOperator   ir al estado 24


Estado 36

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 . params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 43
    COMMA     desplazar e ir al estado 44

    $default  reduce usando la regla 16 (params)

    params  ir al estado 45


Estado 37

   40 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 38

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 46
    ID       desplazar e ir al estado 47

    functionCallParams  ir al estado 48


Estado 39

   36 aritmeticOperation: aritmeticOperation SUM aritmeticOperator .

    $default  reduce usando la regla 36 (aritmeticOperation)


Estado 40

   37 aritmeticOperation: aritmeticOperation SUBSTRACT aritmeticOperator .

    $default  reduce usando la regla 37 (aritmeticOperation)


Estado 41

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   38                   | aritmeticOperation PRODUCT aritmeticOperation .
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 38 (aritmeticOperation)


Estado 42

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 39 (aritmeticOperation)


Estado 43

   14 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 49


Estado 44

   15 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 50


Estado 45

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params . $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@4)

    $@4  ir al estado 51


Estado 46

   32 functionCallParams: INT_VAL .
   34                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 52

    $default  reduce usando la regla 32 (functionCallParams)


Estado 47

   33 functionCallParams: ID .
   35                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 53

    $default  reduce usando la regla 33 (functionCallParams)


Estado 48

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 54


Estado 49

   14 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 43
    COMMA     desplazar e ir al estado 44

    $default  reduce usando la regla 16 (params)

    params  ir al estado 55


Estado 50

   15 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 56


Estado 51

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 . PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 57


Estado 52

   34 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 46
    ID       desplazar e ir al estado 47

    functionCallParams  ir al estado 58


Estado 53

   35 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 46
    ID       desplazar e ir al estado 47

    functionCallParams  ir al estado 59


Estado 54

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 30 (assignation)


Estado 55

   14 params: INT_TYPE ID params .

    $default  reduce usando la regla 14 (params)


Estado 56

   15 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 43
    COMMA     desplazar e ir al estado 44

    $default  reduce usando la regla 16 (params)

    params  ir al estado 60


Estado 57

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE . $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@5)

    $@5  ir al estado 61


Estado 58

   34 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 34 (functionCallParams)


Estado 59

   35 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 35 (functionCallParams)


Estado 60

   15 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 15 (params)


Estado 61

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 62


Estado 62

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 63


Estado 63

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 72
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 64

   26 instruction: BREAK .

    $default  reduce usando la regla 26 (instruction)


Estado 65

   44 return: RETURN . ID
   45       | RETURN . INT_VAL
   46       | RETURN . aritmeticOperation
   48       | RETURN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 79
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 80

    aritmeticOperation  ir al estado 81
    aritmeticOperator   ir al estado 24


Estado 66

   59 controlStructure: IF_CLAUSE . PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE
   65 structuresWord: IF_CLAUSE .

    PARENTESIS_OPEN  desplazar e ir al estado 82

    PARENTESIS_OPEN  [reduce usando la regla 65 (structuresWord)]


Estado 67

   66 structuresWord: WHILE_CLAUSE .

    $default  reduce usando la regla 66 (structuresWord)


Estado 68

   19 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 83
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 69

   23 instruction: ID . ASSIGN aritmeticOperation
   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   30            | ID . ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 84


Estado 70

   49 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 85


Estado 71

   22 instruction: declaration .

    $default  reduce usando la regla 22 (instruction)


Estado 72

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 86


Estado 73

   17 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 87


Estado 74

   21 instruction: assignation .

    $default  reduce usando la regla 21 (instruction)


Estado 75

   24 instruction: return .

    $default  reduce usando la regla 24 (instruction)


Estado 76

   25 instruction: print .

    $default  reduce usando la regla 25 (instruction)


Estado 77

   18 codeSet: controlStructure . codeSet

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 88
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 78

   64 controlStructure: structuresWord . PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 89


Estado 79

   43 aritmeticOperator: INT_VAL .
   45 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 43 (aritmeticOperator)
    END_OF_INSTRUCTION  [reduce usando la regla 45 (return)]
    $default            reduce usando la regla 43 (aritmeticOperator)


Estado 80

   42 aritmeticOperator: ID .
   44 return: RETURN ID .
   48       | RETURN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 90

    END_OF_INSTRUCTION  reduce usando la regla 42 (aritmeticOperator)
    END_OF_INSTRUCTION  [reduce usando la regla 44 (return)]
    $default            reduce usando la regla 42 (aritmeticOperator)


Estado 81

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   46 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 32
    SUBSTRACT  desplazar e ir al estado 33
    PRODUCT    desplazar e ir al estado 34
    DIVIDE     desplazar e ir al estado 35

    $default  reduce usando la regla 46 (return)


Estado 82

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN . $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 55 ($@8)

    $@8  ir al estado 91


Estado 83

   19 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 84

   23 instruction: ID ASSIGN . aritmeticOperation
   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   30            | ID ASSIGN . ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 20
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 22

    aritmeticOperation  ir al estado 92
    aritmeticOperator   ir al estado 24


Estado 85

   49 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 93
    ID     desplazar e ir al estado 94

    printableElement  ir al estado 95


Estado 86

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 96


Estado 87

   17 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 97
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 88

   18 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 18 (codeSet)


Estado 89

   64 controlStructure: structuresWord PARENTESIS_OPEN . $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 60 ($@12)

    $@12  ir al estado 98


Estado 90

   48 return: RETURN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 47 ($@7)

    $@7  ir al estado 99


Estado 91

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 . logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 100
    ID       desplazar e ir al estado 101

    logicalOperation  ir al estado 102


Estado 92

   23 instruction: ID ASSIGN aritmeticOperation .
   31 assignation: ID ASSIGN aritmeticOperation .
   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperator
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperator
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 32
    SUBSTRACT  desplazar e ir al estado 33
    PRODUCT    desplazar e ir al estado 34
    DIVIDE     desplazar e ir al estado 35

    END_OF_INSTRUCTION  reduce usando la regla 23 (instruction)
    END_OF_INSTRUCTION  [reduce usando la regla 31 (assignation)]
    $default            reduce usando la regla 23 (instruction)


Estado 93

   51 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 103
    ' '         desplazar e ir al estado 104

    text  ir al estado 105


Estado 94

   50 printableElement: ID .

    $default  reduce usando la regla 50 (printableElement)


Estado 95

   49 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   52 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 106
    PARENTESIS_CLOSE  desplazar e ir al estado 107


Estado 96

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 13 (function)


Estado 97

   17 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 17 (codeSet)


Estado 98

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 . logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 100
    ID       desplazar e ir al estado 101

    logicalOperation  ir al estado 108


Estado 99

   48 return: RETURN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 46
    ID       desplazar e ir al estado 47

    functionCallParams  ir al estado 109


Estado 100

   69 logicalOperation: INT_VAL . logicalOperator INT_VAL
   70                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 110
    NOT_EQUALS      desplazar e ir al estado 111
    GREATER         desplazar e ir al estado 112
    GREATER_EQUALS  desplazar e ir al estado 113
    LESS            desplazar e ir al estado 114
    LESS_EQUALS     desplazar e ir al estado 115

    logicalOperator  ir al estado 116


Estado 101

   67 logicalOperation: ID . logicalOperator ID
   68                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 110
    NOT_EQUALS      desplazar e ir al estado 111
    GREATER         desplazar e ir al estado 112
    GREATER_EQUALS  desplazar e ir al estado 113
    LESS            desplazar e ir al estado 114
    LESS_EQUALS     desplazar e ir al estado 115

    logicalOperator  ir al estado 117


Estado 102

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation . $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 56 ($@9)

    $@9  ir al estado 118


Estado 103

   53 text: STRING_VAL .

    $default  reduce usando la regla 53 (text)


Estado 104

   54 text: ' ' .

    $default  reduce usando la regla 54 (text)


Estado 105

   51 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 119


Estado 106

   52 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 93
    ID     desplazar e ir al estado 94

    printableElement  ir al estado 120


Estado 107

   49 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 49 (print)


Estado 108

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation . $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 61 ($@13)

    $@13  ir al estado 121


Estado 109

   48 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 122


Estado 110

   71 logicalOperator: EQUALS .

    $default  reduce usando la regla 71 (logicalOperator)


Estado 111

   72 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 72 (logicalOperator)


Estado 112

   73 logicalOperator: GREATER .

    $default  reduce usando la regla 73 (logicalOperator)


Estado 113

   75 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 75 (logicalOperator)


Estado 114

   74 logicalOperator: LESS .

    $default  reduce usando la regla 74 (logicalOperator)


Estado 115

   76 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 76 (logicalOperator)


Estado 116

   69 logicalOperation: INT_VAL logicalOperator . INT_VAL
   70                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 123
    ID       desplazar e ir al estado 124


Estado 117

   67 logicalOperation: ID logicalOperator . ID
   68                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 125
    ID       desplazar e ir al estado 126


Estado 118

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 127


Estado 119

   51 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 51 (printableElement)


Estado 120

   52 printableElement: printableElement . SUM printableElement
   52                 | printableElement SUM printableElement .

    $default  reduce usando la regla 52 (printableElement)


Estado 121

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 128


Estado 122

   48 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 48 (return)


Estado 123

   69 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 69 (logicalOperation)


Estado 124

   70 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 70 (logicalOperation)


Estado 125

   68 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 68 (logicalOperation)


Estado 126

   67 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 67 (logicalOperation)


Estado 127

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 129


Estado 128

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 130


Estado 129

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 57 ($@10)

    $@10  ir al estado 131


Estado 130

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 62 ($@14)

    $@14  ir al estado 132


Estado 131

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 . END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 133


Estado 132

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 . END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 134


Estado 133

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION . codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 135
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 134

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION . codeSet $@15 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 136
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 135

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet . $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 58 ($@11)

    $@11  ir al estado 137


Estado 136

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet . $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 63 ($@15)

    $@15  ir al estado 138


Estado 137

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 . CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 139


Estado 138

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 140


Estado 139

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE . ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 141


Estado 140

   64 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 64 (controlStructure)


Estado 141

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE . CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 142


Estado 142

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 64
    RETURN              desplazar e ir al estado 65
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 66
    WHILE_CLAUSE        desplazar e ir al estado 67
    END_OF_INSTRUCTION  desplazar e ir al estado 68
    ID                  desplazar e ir al estado 69
    PRINT               desplazar e ir al estado 70

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 71
    codeSet           ir al estado 143
    instruction       ir al estado 73
    assignation       ir al estado 74
    return            ir al estado 75
    print             ir al estado 76
    controlStructure  ir al estado 77
    structuresWord    ir al estado 78


Estado 143

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 144


Estado 144

   59 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 59 (controlStructure)
