Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   SQUARE_BRACKET_OPEN
   SQUARE_BRACKET_CLOSE
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   43 return: RETURN INT_VAL


Estado 18 conflictos: 1 reducción/reducción
Estado 76 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | %empty

    9 declaration: INT_TYPE ID

   10 $@3: %empty

   11 $@4: %empty

   12 $@5: %empty

   13 $@6: %empty

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   15 params: INT_TYPE ID params
   16       | COMMA INT_TYPE ID params
   17       | %empty

   18 codeSet: instruction END_OF_INSTRUCTION codeSet
   19        | controlStructure codeSet
   20        | END_OF_INSTRUCTION codeSet
   21        | %empty

   22 instruction: assignation
   23            | declaration
   24            | return
   25            | print
   26            | BREAK

   27 assignation: ID ASSIGN INT_VAL
   28            | ID ASSIGN ID

   29 $@7: %empty

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN aritmeticOperation

   32 functionCallParams: INT_VAL
   33                   | ID
   34                   | INT_VAL COMMA functionCallParams
   35                   | ID COMMA functionCallParams

   36 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   37                   | aritmeticOperation SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation PRODUCT aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation
   40                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   41                   | INT_VAL

   42 return: RETURN ID
   43       | RETURN INT_VAL
   44       | RETURN aritmeticOperation

   45 $@8: %empty

   46 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

   47 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   48 printableElement: ID
   49                 | QUOTE text QUOTE
   50                 | printableElement SUM printableElement

   51 text: STRING_VAL
   52     | ' '

   53 $@9: %empty

   54 $@10: %empty

   55 $@11: %empty

   56 $@12: %empty

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

   58 $@13: %empty

   59 $@14: %empty

   60 $@15: %empty

   61 $@16: %empty

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

   63 logicalOperation: ID logicalOperator ID
   64                 | ID logicalOperator INT_VAL
   65                 | INT_VAL logicalOperator INT_VAL
   66                 | INT_VAL logicalOperator ID

   67 logicalOperator: EQUALS
   68                | NOT_EQUALS
   69                | LESS
   70                | LESS_EQUALS
   71                | GREATER
   72                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 52
error (256)
CONTINUE (258)
BREAK (259) 26
RETURN (260) 42 43 44 46
FUN (261) 14
INT_VAL (262) 27 32 34 41 43 64 65 66
STRING_VAL (263) 51
INT_TYPE (264) 9 15 16
STRING_TYPE (265)
ASSIGN (266) 27 28 30 31
SUM (267) 36 50
SUBSTRACT (268) 37
PRODUCT (269) 38
DIVIDE (270) 39
AND (271)
OR (272)
NOT (273)
EQUALS (274) 67
NOT_EQUALS (275) 68
GREATER (276) 71
GREATER_EQUALS (277) 72
LESS (278) 69
LESS_EQUALS (279) 70
IF_CLAUSE (280) 57
WHILE_CLAUSE (281) 62
ELSE_CLAUSE (282) 57
HEADER_END (283)
SQUARE_BRACKET_OPEN (284)
SQUARE_BRACKET_CLOSE (285)
CURLY_BRACKET_OPEN (286) 14 57 62
CURLY_BRACKET_CLOSE (287) 14 57 62
COMMA (288) 16 34 35
PARENTESIS_OPEN (289) 14 30 40 46 47 57 62
PARENTESIS_CLOSE (290) 14 30 40 46 47 57 62
END_OF_INSTRUCTION (291) 3 4 7 14 18 20 57 62
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 49
ID (295) 9 14 15 16 27 28 30 31 33 35 42 46 48 63 64 66
PRINT (296) 47


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
begin (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
root (46)
    en la izquierda: 3 4 6 7 8, en la derecha: 2 3 4 6 7
$@2 (47)
    en la izquierda: 5, en la derecha: 6
declaration (48)
    en la izquierda: 9, en la derecha: 3 23
function (49)
    en la izquierda: 14, en la derecha: 6
$@3 (50)
    en la izquierda: 10, en la derecha: 14
$@4 (51)
    en la izquierda: 11, en la derecha: 14
$@5 (52)
    en la izquierda: 12, en la derecha: 14
$@6 (53)
    en la izquierda: 13, en la derecha: 14
params (54)
    en la izquierda: 15 16 17, en la derecha: 14 15 16
codeSet (55)
    en la izquierda: 18 19 20 21, en la derecha: 14 18 19 20 57 62
instruction (56)
    en la izquierda: 22 23 24 25 26, en la derecha: 18
assignation (57)
    en la izquierda: 27 28 30 31, en la derecha: 4 22
$@7 (58)
    en la izquierda: 29, en la derecha: 30
functionCallParams (59)
    en la izquierda: 32 33 34 35, en la derecha: 30 34 35 46
aritmeticOperation (60)
    en la izquierda: 36 37 38 39 40 41, en la derecha: 31 36 37 38
    39 40 44
return (61)
    en la izquierda: 42 43 44 46, en la derecha: 24
$@8 (62)
    en la izquierda: 45, en la derecha: 46
print (63)
    en la izquierda: 47, en la derecha: 25
printableElement (64)
    en la izquierda: 48 49 50, en la derecha: 47 50
text (65)
    en la izquierda: 51 52, en la derecha: 49
controlStructure (66)
    en la izquierda: 57 62, en la derecha: 19
$@9 (67)
    en la izquierda: 53, en la derecha: 57
$@10 (68)
    en la izquierda: 54, en la derecha: 57
$@11 (69)
    en la izquierda: 55, en la derecha: 57
$@12 (70)
    en la izquierda: 56, en la derecha: 57
$@13 (71)
    en la izquierda: 58, en la derecha: 62
$@14 (72)
    en la izquierda: 59, en la derecha: 62
$@15 (73)
    en la izquierda: 60, en la derecha: 62
$@16 (74)
    en la izquierda: 61, en la derecha: 62
logicalOperation (75)
    en la izquierda: 63 64 65 66, en la derecha: 57 62
logicalOperator (76)
    en la izquierda: 67 68 69 70 71 72, en la derecha: 63 64 65 66


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 7
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

    9 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 11


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 12
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 6

   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   30            | ID . ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   31            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 13


Estado 7

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 8

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 14

    function  ir al estado 15


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 16


Estado 10

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 17


Estado 11

    9 declaration: INT_TYPE ID .

    $default  reduce usando la regla 9 (declaration)


Estado 12

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 13

   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   30            | ID ASSIGN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 18
    PARENTESIS_OPEN  desplazar e ir al estado 19
    ID               desplazar e ir al estado 20

    aritmeticOperation  ir al estado 21


Estado 14

   14 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 22


Estado 15

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 23
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 16

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 24
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 17

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 25
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 18

   27 assignation: ID ASSIGN INT_VAL .
   41 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 27 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 41 (aritmeticOperation)]
    $default            reduce usando la regla 41 (aritmeticOperation)


Estado 19

   40 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 27


Estado 20

   28 assignation: ID ASSIGN ID .
   30            | ID ASSIGN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 28

    $default  reduce usando la regla 28 (assignation)


Estado 21

   31 assignation: ID ASSIGN aritmeticOperation .
   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 29
    SUBSTRACT  desplazar e ir al estado 30
    PRODUCT    desplazar e ir al estado 31
    DIVIDE     desplazar e ir al estado 32

    $default  reduce usando la regla 31 (assignation)


Estado 22

   14 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 10 ($@3)

    $@3  ir al estado 33


Estado 23

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 24

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 25

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 26

   41 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 27

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   40                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 29
    SUBSTRACT         desplazar e ir al estado 30
    PRODUCT           desplazar e ir al estado 31
    DIVIDE            desplazar e ir al estado 32
    PARENTESIS_CLOSE  desplazar e ir al estado 34


Estado 28

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 29 ($@7)

    $@7  ir al estado 35


Estado 29

   36 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 36


Estado 30

   37 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 37


Estado 31

   38 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 38


Estado 32

   39 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 39


Estado 33

   14 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 40


Estado 34

   40 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 35

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 43


Estado 36

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   36                   | aritmeticOperation SUM aritmeticOperation .
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 31
    DIVIDE   desplazar e ir al estado 32

    $default  reduce usando la regla 36 (aritmeticOperation)


Estado 37

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   37                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 31
    DIVIDE   desplazar e ir al estado 32

    $default  reduce usando la regla 37 (aritmeticOperation)


Estado 38

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   38                   | aritmeticOperation PRODUCT aritmeticOperation .
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 38 (aritmeticOperation)


Estado 39

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 39 (aritmeticOperation)


Estado 40

   14 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@4)

    $@4  ir al estado 44


Estado 41

   32 functionCallParams: INT_VAL .
   34                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 45

    $default  reduce usando la regla 32 (functionCallParams)


Estado 42

   33 functionCallParams: ID .
   35                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 46

    $default  reduce usando la regla 33 (functionCallParams)


Estado 43

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 47


Estado 44

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 50


Estado 45

   34 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 51


Estado 46

   35 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 52


Estado 47

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 30 (assignation)


Estado 48

   15 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 53


Estado 49

   16 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 54


Estado 50

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@5)

    $@5  ir al estado 55


Estado 51

   34 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 34 (functionCallParams)


Estado 52

   35 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 35 (functionCallParams)


Estado 53

   15 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 56


Estado 54

   16 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 57


Estado 55

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 58


Estado 56

   15 params: INT_TYPE ID params .

    $default  reduce usando la regla 15 (params)


Estado 57

   16 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 59


Estado 58

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@6)

    $@6  ir al estado 60


Estado 59

   16 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 16 (params)


Estado 60

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 61


Estado 61

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 62


Estado 62

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 69
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 63

   26 instruction: BREAK .

    $default  reduce usando la regla 26 (instruction)


Estado 64

   42 return: RETURN . ID
   43       | RETURN . INT_VAL
   44       | RETURN . aritmeticOperation
   46       | RETURN . ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 76
    PARENTESIS_OPEN  desplazar e ir al estado 19
    ID               desplazar e ir al estado 77

    aritmeticOperation  ir al estado 78


Estado 65

   57 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 79


Estado 66

   20 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 80
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 67

   47 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 81


Estado 68

   23 instruction: declaration .

    $default  reduce usando la regla 23 (instruction)


Estado 69

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 82


Estado 70

   18 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 83


Estado 71

   22 instruction: assignation .

    $default  reduce usando la regla 22 (instruction)


Estado 72

   24 instruction: return .

    $default  reduce usando la regla 24 (instruction)


Estado 73

   25 instruction: print .

    $default  reduce usando la regla 25 (instruction)


Estado 74

   19 codeSet: controlStructure . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 84
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 75

   62 controlStructure: $@13 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 85


Estado 76

   41 aritmeticOperation: INT_VAL .
   43 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 41 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 43 (return)]
    $default            reduce usando la regla 41 (aritmeticOperation)


Estado 77

   42 return: RETURN ID .
   46       | RETURN ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 86

    $default  reduce usando la regla 42 (return)


Estado 78

   36 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   44 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 29
    SUBSTRACT  desplazar e ir al estado 30
    PRODUCT    desplazar e ir al estado 31
    DIVIDE     desplazar e ir al estado 32

    $default  reduce usando la regla 44 (return)


Estado 79

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 87
    ID       desplazar e ir al estado 88

    logicalOperation  ir al estado 89


Estado 80

   20 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 81

   47 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 90
    ID     desplazar e ir al estado 91

    printableElement  ir al estado 92


Estado 82

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 93


Estado 83

   18 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 94
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 84

   19 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 85

   62 controlStructure: $@13 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 95


Estado 86

   46 return: RETURN ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 45 ($@8)

    $@8  ir al estado 96


Estado 87

   65 logicalOperation: INT_VAL . logicalOperator INT_VAL
   66                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 97
    NOT_EQUALS      desplazar e ir al estado 98
    GREATER         desplazar e ir al estado 99
    GREATER_EQUALS  desplazar e ir al estado 100
    LESS            desplazar e ir al estado 101
    LESS_EQUALS     desplazar e ir al estado 102

    logicalOperator  ir al estado 103


Estado 88

   63 logicalOperation: ID . logicalOperator ID
   64                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 97
    NOT_EQUALS      desplazar e ir al estado 98
    GREATER         desplazar e ir al estado 99
    GREATER_EQUALS  desplazar e ir al estado 100
    LESS            desplazar e ir al estado 101
    LESS_EQUALS     desplazar e ir al estado 102

    logicalOperator  ir al estado 104


Estado 89

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 105


Estado 90

   49 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 106
    ' '         desplazar e ir al estado 107

    text  ir al estado 108


Estado 91

   48 printableElement: ID .

    $default  reduce usando la regla 48 (printableElement)


Estado 92

   47 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   50 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 109
    PARENTESIS_CLOSE  desplazar e ir al estado 110


Estado 93

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 14 (function)


Estado 94

   18 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 18 (codeSet)


Estado 95

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 87
    ID       desplazar e ir al estado 88

    logicalOperation  ir al estado 111


Estado 96

   46 return: RETURN ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 112


Estado 97

   67 logicalOperator: EQUALS .

    $default  reduce usando la regla 67 (logicalOperator)


Estado 98

   68 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 68 (logicalOperator)


Estado 99

   71 logicalOperator: GREATER .

    $default  reduce usando la regla 71 (logicalOperator)


Estado 100

   72 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 72 (logicalOperator)


Estado 101

   69 logicalOperator: LESS .

    $default  reduce usando la regla 69 (logicalOperator)


Estado 102

   70 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 70 (logicalOperator)


Estado 103

   65 logicalOperation: INT_VAL logicalOperator . INT_VAL
   66                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 113
    ID       desplazar e ir al estado 114


Estado 104

   63 logicalOperation: ID logicalOperator . ID
   64                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 115
    ID       desplazar e ir al estado 116


Estado 105

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 53 ($@9)

    $@9  ir al estado 117


Estado 106

   51 text: STRING_VAL .

    $default  reduce usando la regla 51 (text)


Estado 107

   52 text: ' ' .

    $default  reduce usando la regla 52 (text)


Estado 108

   49 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 118


Estado 109

   50 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 90
    ID     desplazar e ir al estado 91

    printableElement  ir al estado 119


Estado 110

   47 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 47 (print)


Estado 111

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 120


Estado 112

   46 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 121


Estado 113

   65 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 65 (logicalOperation)


Estado 114

   66 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 66 (logicalOperation)


Estado 115

   64 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 64 (logicalOperation)


Estado 116

   63 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 63 (logicalOperation)


Estado 117

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 . CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 122


Estado 118

   49 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 49 (printableElement)


Estado 119

   50 printableElement: printableElement . SUM printableElement
   50                 | printableElement SUM printableElement .

    $default  reduce usando la regla 50 (printableElement)


Estado 120

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 59 ($@14)

    $@14  ir al estado 123


Estado 121

   46 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 46 (return)


Estado 122

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN . $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 54 ($@10)

    $@10  ir al estado 124


Estado 123

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 . CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 125


Estado 124

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 126


Estado 125

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN . $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 60 ($@15)

    $@15  ir al estado 127


Estado 126

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 128
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 127

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 . END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 129


Estado 128

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 130


Estado 129

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION . codeSet $@16 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 131
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 130

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 55 ($@11)

    $@11  ir al estado 132


Estado 131

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet . $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 61 ($@16)

    $@16  ir al estado 133


Estado 132

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 . ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 134


Estado 133

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 135


Estado 134

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE . CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 136


Estado 135

   62 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 62 (controlStructure)


Estado 136

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN . $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 56 ($@12)

    $@12  ir al estado 137


Estado 137

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 67

    WHILE_CLAUSE  reduce usando la regla 58 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 68
    codeSet           ir al estado 138
    instruction       ir al estado 70
    assignation       ir al estado 71
    return            ir al estado 72
    print             ir al estado 73
    controlStructure  ir al estado 74
    $@13              ir al estado 75


Estado 138

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 139


Estado 139

   57 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 57 (controlStructure)
