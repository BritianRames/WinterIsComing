No terminales inútiles en la gramática

   printableElement
   text


Terminales no usados en la gramática

   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG
   ' '


Reglas inútiles en la gramática

   90 printableElement: ID
   91                 | QUOTE text QUOTE
   92                 | printableElement SUM printableElement
   93                 | INT_VAL

   94 text: STRING_VAL
   95     | ' '


La regla es inútil debido a los conflictos

   53 $@10: %empty

   56 $@12: %empty

   62 $@16: %empty


Estado 26 conflictos: 1 reducción/reducción
Estado 65 conflictos: 1 reducción/reducción
Estado 106 conflictos: 1 reducción/reducción
Estado 107 conflictos: 1 reducción/reducción
Estado 116 conflictos: 4 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   17 $@7: %empty

   18 params: INT_TYPE ID $@7 params
   19       | COMMA INT_TYPE ID params

   20 $@8: %empty

   21 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@8 params
   22       | COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params
   23       | %empty

   24 codeSet: instruction END_OF_INSTRUCTION codeSet
   25        | controlStructure END_OF_INSTRUCTION codeSet
   26        | END_OF_INSTRUCTION codeSet
   27        | %empty

   28 instruction: assignation
   29            | declaration
   30            | return
   31            | print
   32            | CONTINUE
   33            | BREAK

   34 assignation: ID ASSIGN INT_VAL
   35            | ID PLUSPLUS
   36            | ID MINUSMINUS
   37            | ID ASSIGN aritmeticOperation
   38            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   39            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

   40 functionCallParams: aritmeticOperation
   41                   | aritmeticOperation COMMA functionCallParams
   42                   | %empty

   43 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   44                   | aritmeticOperation SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation PRODUCT aritmeticOperation
   46                   | aritmeticOperation DIVIDE aritmeticOperation
   47                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   48 $@9: %empty

   49 aritmeticOperation: ID PARENTESIS_OPEN $@9 functionCallParams PARENTESIS_CLOSE
   50                   | INT_VAL
   51                   | ID
   52                   | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   53 $@10: %empty

   54 $@11: %empty

   55 return: RETURN ID $@10 $@11

   56 $@12: %empty

   57 $@13: %empty

   58 return: RETURN INT_VAL $@12 $@13

   59 $@14: %empty

   60 $@15: %empty

   61 return: RETURN aritmeticOperation $@14 $@15

   62 $@16: %empty

   63 return: RETURN ID PARENTESIS_OPEN $@16 functionCallParams PARENTESIS_CLOSE

   64 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   65      | PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   66 $@17: %empty

   67 $@18: %empty

   68 $@19: %empty

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE
   70     | %empty

   71 $@20: %empty

   72 $@21: %empty

   73 $@22: %empty

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

   75 $@23: %empty

   76 $@24: %empty

   77 $@25: %empty

   78 $@26: %empty

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

   80 logicalOperation: ID logicalOperator ID
   81                 | ID logicalOperator INT_VAL
   82                 | INT_VAL logicalOperator INT_VAL
   83                 | INT_VAL logicalOperator ID

   84 logicalOperator: EQUALS
   85                | NOT_EQUALS
   86                | LESS
   87                | LESS_EQUALS
   88                | GREATER
   89                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32)
error (256)
CONTINUE (258) 32
BREAK (259) 33
RETURN (260) 55 58 61 63
FUN (261) 16
INT_VAL (262) 11 34 38 39 50 52 58 81 82 83
STRING_VAL (263) 64
INT_TYPE (264) 10 11 18 19 21 22
STRING_TYPE (265)
ASSIGN (266) 34 37 38 39
SUM (267) 43
SUBSTRACT (268) 44
PRODUCT (269) 45
DIVIDE (270) 46
AND (271)
OR (272)
NOT (273)
EQUALS (274) 84
NOT_EQUALS (275) 85
GREATER (276) 88
GREATER_EQUALS (277) 89
LESS (278) 86
LESS_EQUALS (279) 87
IF_CLAUSE (280) 74
WHILE_CLAUSE (281) 79
ELSE_CLAUSE (282) 69
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 11 21 22 38 39 52
SQUARE_BRACKET_CLOSE (285) 11 21 22 38 39 52
CURLY_BRACKET_OPEN (286) 16 69 74 79
CURLY_BRACKET_CLOSE (287) 16 69 74 79
COMMA (288) 19 22 41
PARENTESIS_OPEN (289) 16 47 49 63 64 65 74 79
PARENTESIS_CLOSE (290) 16 47 49 63 64 65 74 79
END_OF_INSTRUCTION (291) 3 4 7 8 16 24 25 26 69 74 79
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 64
ID (295) 10 11 16 18 19 21 22 34 35 36 37 38 39 49 51 52 55 63 80 81
    83
PRINT (296) 64 65
PLUSPLUS (297) 35
MINUSMINUS (298) 36


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8 9, en la derecha: 2 3 4 6 7 8
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 10 11, en la derecha: 3 29
function (51)
    en la izquierda: 16, en la derecha: 6
$@3 (52)
    en la izquierda: 12, en la derecha: 16
$@4 (53)
    en la izquierda: 13, en la derecha: 16
$@5 (54)
    en la izquierda: 14, en la derecha: 16
$@6 (55)
    en la izquierda: 15, en la derecha: 16
params (56)
    en la izquierda: 18 19 21 22 23, en la derecha: 16 18 19 21 22
$@7 (57)
    en la izquierda: 17, en la derecha: 18
$@8 (58)
    en la izquierda: 20, en la derecha: 21
codeSet (59)
    en la izquierda: 24 25 26 27, en la derecha: 16 24 25 26 69 74
    79
instruction (60)
    en la izquierda: 28 29 30 31 32 33, en la derecha: 24
assignation (61)
    en la izquierda: 34 35 36 37 38 39, en la derecha: 4 28
functionCallParams (62)
    en la izquierda: 40 41 42, en la derecha: 41 49 63
aritmeticOperation (63)
    en la izquierda: 43 44 45 46 47 49 50 51 52, en la derecha: 37
    39 40 41 43 44 45 46 47 61 65
$@9 (64)
    en la izquierda: 48, en la derecha: 49
return (65)
    en la izquierda: 55 58 61 63, en la derecha: 30
$@10 (66)
    en la izquierda: 53, en la derecha: 55
$@11 (67)
    en la izquierda: 54, en la derecha: 55
$@12 (68)
    en la izquierda: 56, en la derecha: 58
$@13 (69)
    en la izquierda: 57, en la derecha: 58
$@14 (70)
    en la izquierda: 59, en la derecha: 61
$@15 (71)
    en la izquierda: 60, en la derecha: 61
$@16 (72)
    en la izquierda: 62, en la derecha: 63
print (73)
    en la izquierda: 64 65, en la derecha: 8 31
else (74)
    en la izquierda: 69 70, en la derecha: 74
$@17 (75)
    en la izquierda: 66, en la derecha: 69
$@18 (76)
    en la izquierda: 67, en la derecha: 69
$@19 (77)
    en la izquierda: 68, en la derecha: 69
controlStructure (78)
    en la izquierda: 74 79, en la derecha: 25
$@20 (79)
    en la izquierda: 71, en la derecha: 74
$@21 (80)
    en la izquierda: 72, en la derecha: 74
$@22 (81)
    en la izquierda: 73, en la derecha: 74
$@23 (82)
    en la izquierda: 75, en la derecha: 79
$@24 (83)
    en la izquierda: 76, en la derecha: 79
$@25 (84)
    en la izquierda: 77, en la derecha: 79
$@26 (85)
    en la izquierda: 78, en la derecha: 79
logicalOperation (86)
    en la izquierda: 80 81 82 83, en la derecha: 74 79
logicalOperator (87)
    en la izquierda: 84 85 86 87 88 89, en la derecha: 80 81 82 83


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 8
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 13


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 14
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 6

   34 assignation: ID . ASSIGN INT_VAL
   35            | ID . PLUSPLUS
   36            | ID . MINUSMINUS
   37            | ID . ASSIGN aritmeticOperation
   38            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   39            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    ASSIGN               desplazar e ir al estado 15
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 16
    PLUSPLUS             desplazar e ir al estado 17
    MINUSMINUS           desplazar e ir al estado 18


Estado 7

   64 print: PRINT . PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   65      | PRINT . PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 19


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 20

    function  ir al estado 21


Estado 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 22


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 23


Estado 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 24


Estado 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 25

    $default  reduce usando la regla 10 (declaration)


Estado 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 15

   34 assignation: ID ASSIGN . INT_VAL
   37            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 29


Estado 16

   38 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   39            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    INT_VAL  desplazar e ir al estado 30


Estado 17

   35 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 35 (assignation)


Estado 18

   36 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 36 (assignation)


Estado 19

   64 print: PRINT PARENTESIS_OPEN . QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   65      | PRINT PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    QUOTE            desplazar e ir al estado 32
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 33


Estado 20

   16 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 34


Estado 21

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 35
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 36
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 37
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 38
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 39


Estado 26

   34 assignation: ID ASSIGN INT_VAL .
   50 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 34 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 50 (aritmeticOperation)]
    $default            reduce usando la regla 50 (aritmeticOperation)


Estado 27

   47 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 40


Estado 28

   49 aritmeticOperation: ID . PARENTESIS_OPEN $@9 functionCallParams PARENTESIS_CLOSE
   51                   | ID .
   52                   | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 41
    PARENTESIS_OPEN      desplazar e ir al estado 42

    $default  reduce usando la regla 51 (aritmeticOperation)


Estado 29

   37 assignation: ID ASSIGN aritmeticOperation .
   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 37 (assignation)


Estado 30

   38 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   39            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 47


Estado 31

   50 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 50 (aritmeticOperation)


Estado 32

   64 print: PRINT PARENTESIS_OPEN QUOTE . STRING_VAL QUOTE PARENTESIS_CLOSE

    STRING_VAL  desplazar e ir al estado 48


Estado 33

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   65 print: PRINT PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 43
    SUBSTRACT         desplazar e ir al estado 44
    PRODUCT           desplazar e ir al estado 45
    DIVIDE            desplazar e ir al estado 46
    PARENTESIS_CLOSE  desplazar e ir al estado 49


Estado 34

   16 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@3)

    $@3  ir al estado 50


Estado 35

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 36

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 37

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 38

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce usando la regla 8 (root)


Estado 39

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 51


Estado 40

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   47                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 43
    SUBSTRACT         desplazar e ir al estado 44
    PRODUCT           desplazar e ir al estado 45
    DIVIDE            desplazar e ir al estado 46
    PARENTESIS_CLOSE  desplazar e ir al estado 52


Estado 41

   52 aritmeticOperation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 53


Estado 42

   49 aritmeticOperation: ID PARENTESIS_OPEN . $@9 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 48 ($@9)

    $@9  ir al estado 54


Estado 43

   43 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 55


Estado 44

   44 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 56


Estado 45

   45 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 57


Estado 46

   46 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 58


Estado 47

   38 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL
   39            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 59


Estado 48

   64 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL . QUOTE PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 60


Estado 49

   65 print: PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 65 (print)


Estado 50

   16 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 61


Estado 51

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 11 (declaration)


Estado 52

   47 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 47 (aritmeticOperation)


Estado 53

   52 aritmeticOperation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 62


Estado 54

   49 aritmeticOperation: ID PARENTESIS_OPEN $@9 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 42 (functionCallParams)

    functionCallParams  ir al estado 63
    aritmeticOperation  ir al estado 64


Estado 55

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation SUM aritmeticOperation .
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 45
    DIVIDE   desplazar e ir al estado 46

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 56

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 45
    DIVIDE   desplazar e ir al estado 46

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 57

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation PRODUCT aritmeticOperation .
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 58

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   46                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 46 (aritmeticOperation)


Estado 59

   38 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL
   39            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 65
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 66


Estado 60

   64 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 67


Estado 61

   16 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@4)

    $@4  ir al estado 68


Estado 62

   52 aritmeticOperation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 52 (aritmeticOperation)


Estado 63

   49 aritmeticOperation: ID PARENTESIS_OPEN $@9 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 69


Estado 64

   40 functionCallParams: aritmeticOperation .
   41                   | aritmeticOperation . COMMA functionCallParams
   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46
    COMMA      desplazar e ir al estado 70

    $default  reduce usando la regla 40 (functionCallParams)


Estado 65

   38 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .
   50 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 38 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 50 (aritmeticOperation)]
    $default            reduce usando la regla 50 (aritmeticOperation)


Estado 66

   39 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation .
   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 39 (assignation)


Estado 67

   64 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE .

    $default  reduce usando la regla 64 (print)


Estado 68

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 23 (params)

    params  ir al estado 73


Estado 69

   49 aritmeticOperation: ID PARENTESIS_OPEN $@9 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 49 (aritmeticOperation)


Estado 70

   41 functionCallParams: aritmeticOperation COMMA . functionCallParams

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 42 (functionCallParams)

    functionCallParams  ir al estado 74
    aritmeticOperation  ir al estado 64


Estado 71

   18 params: INT_TYPE . ID $@7 params
   21       | INT_TYPE . ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@8 params

    ID  desplazar e ir al estado 75


Estado 72

   19 params: COMMA . INT_TYPE ID params
   22       | COMMA . INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    INT_TYPE  desplazar e ir al estado 76


Estado 73

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@5)

    $@5  ir al estado 77


Estado 74

   41 functionCallParams: aritmeticOperation COMMA functionCallParams .

    $default  reduce usando la regla 41 (functionCallParams)


Estado 75

   18 params: INT_TYPE ID . $@7 params
   21       | INT_TYPE ID . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@8 params

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 78

    $default  reduce usando la regla 17 ($@7)

    $@7  ir al estado 79


Estado 76

   19 params: COMMA INT_TYPE . ID params
   22       | COMMA INT_TYPE . ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    ID  desplazar e ir al estado 80


Estado 77

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 81


Estado 78

   21 params: INT_TYPE ID SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE $@8 params

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 82


Estado 79

   18 params: INT_TYPE ID $@7 . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 23 (params)

    params  ir al estado 83


Estado 80

   19 params: COMMA INT_TYPE ID . params
   22       | COMMA INT_TYPE ID . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    INT_TYPE             desplazar e ir al estado 71
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 84
    COMMA                desplazar e ir al estado 72

    $default  reduce usando la regla 23 (params)

    params  ir al estado 85


Estado 81

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 15 ($@6)

    $@6  ir al estado 86


Estado 82

   21 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE . $@8 params

    $default  reduce usando la regla 20 ($@8)

    $@8  ir al estado 87


Estado 83

   18 params: INT_TYPE ID $@7 params .

    $default  reduce usando la regla 18 (params)


Estado 84

   22 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE params

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 88


Estado 85

   19 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 19 (params)


Estado 86

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 89


Estado 87

   21 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@8 . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 23 (params)

    params  ir al estado 90


Estado 88

   22 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 23 (params)

    params  ir al estado 91


Estado 89

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 92


Estado 90

   21 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@8 params .

    $default  reduce usando la regla 21 (params)


Estado 91

   22 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params .

    $default  reduce usando la regla 22 (params)


Estado 92

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 99
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 93

   32 instruction: CONTINUE .

    $default  reduce usando la regla 32 (instruction)


Estado 94

   33 instruction: BREAK .

    $default  reduce usando la regla 33 (instruction)


Estado 95

   55 return: RETURN . ID $@10 $@11
   58       | RETURN . INT_VAL $@12 $@13
   61       | RETURN . aritmeticOperation $@14 $@15
   63       | RETURN . ID PARENTESIS_OPEN $@16 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 106
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 107

    aritmeticOperation  ir al estado 108


Estado 96

   74 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    PARENTESIS_OPEN  desplazar e ir al estado 109


Estado 97

   26 codeSet: END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 110
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 98

   29 instruction: declaration .

    $default  reduce usando la regla 29 (instruction)


Estado 99

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 111


Estado 100

   24 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 112


Estado 101

   28 instruction: assignation .

    $default  reduce usando la regla 28 (instruction)


Estado 102

   30 instruction: return .

    $default  reduce usando la regla 30 (instruction)


Estado 103

   31 instruction: print .

    $default  reduce usando la regla 31 (instruction)


Estado 104

   25 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 113


Estado 105

   79 controlStructure: $@23 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 114


Estado 106

   50 aritmeticOperation: INT_VAL .
   58 return: RETURN INT_VAL . $@12 $@13

    END_OF_INSTRUCTION  reduce usando la regla 50 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 56 ($@12)]
    $default            reduce usando la regla 50 (aritmeticOperation)

    $@12  ir al estado 115


Estado 107

   49 aritmeticOperation: ID . PARENTESIS_OPEN $@9 functionCallParams PARENTESIS_CLOSE
   51                   | ID .
   52                   | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   55 return: RETURN ID . $@10 $@11
   63       | RETURN ID . PARENTESIS_OPEN $@16 functionCallParams PARENTESIS_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 41
    PARENTESIS_OPEN      desplazar e ir al estado 116

    END_OF_INSTRUCTION  reduce usando la regla 51 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 53 ($@10)]
    $default            reduce usando la regla 51 (aritmeticOperation)

    $@10  ir al estado 117


Estado 108

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   61 return: RETURN aritmeticOperation . $@14 $@15

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 59 ($@14)

    $@14  ir al estado 118


Estado 109

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    INT_VAL  desplazar e ir al estado 119
    ID       desplazar e ir al estado 120

    logicalOperation  ir al estado 121


Estado 110

   26 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 26 (codeSet)


Estado 111

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 122


Estado 112

   24 codeSet: instruction END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 123
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 113

   25 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 124
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 114

   79 controlStructure: $@23 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 125


Estado 115

   58 return: RETURN INT_VAL $@12 . $@13

    $default  reduce usando la regla 57 ($@13)

    $@13  ir al estado 126


Estado 116

   49 aritmeticOperation: ID PARENTESIS_OPEN . $@9 functionCallParams PARENTESIS_CLOSE
   63 return: RETURN ID PARENTESIS_OPEN . $@16 functionCallParams PARENTESIS_CLOSE

    INT_VAL           reduce usando la regla 48 ($@9)
    INT_VAL           [reduce usando la regla 62 ($@16)]
    PARENTESIS_OPEN   reduce usando la regla 48 ($@9)
    PARENTESIS_OPEN   [reduce usando la regla 62 ($@16)]
    PARENTESIS_CLOSE  reduce usando la regla 48 ($@9)
    PARENTESIS_CLOSE  [reduce usando la regla 62 ($@16)]
    ID                reduce usando la regla 48 ($@9)
    ID                [reduce usando la regla 62 ($@16)]
    $default          reduce usando la regla 48 ($@9)

    $@9   ir al estado 54
    $@16  ir al estado 127


Estado 117

   55 return: RETURN ID $@10 . $@11

    $default  reduce usando la regla 54 ($@11)

    $@11  ir al estado 128


Estado 118

   61 return: RETURN aritmeticOperation $@14 . $@15

    $default  reduce usando la regla 60 ($@15)

    $@15  ir al estado 129


Estado 119

   82 logicalOperation: INT_VAL . logicalOperator INT_VAL
   83                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 130
    NOT_EQUALS      desplazar e ir al estado 131
    GREATER         desplazar e ir al estado 132
    GREATER_EQUALS  desplazar e ir al estado 133
    LESS            desplazar e ir al estado 134
    LESS_EQUALS     desplazar e ir al estado 135

    logicalOperator  ir al estado 136


Estado 120

   80 logicalOperation: ID . logicalOperator ID
   81                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 130
    NOT_EQUALS      desplazar e ir al estado 131
    GREATER         desplazar e ir al estado 132
    GREATER_EQUALS  desplazar e ir al estado 133
    LESS            desplazar e ir al estado 134
    LESS_EQUALS     desplazar e ir al estado 135

    logicalOperator  ir al estado 137


Estado 121

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    PARENTESIS_CLOSE  desplazar e ir al estado 138


Estado 122

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 16 (function)


Estado 123

   24 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 24 (codeSet)


Estado 124

   25 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 25 (codeSet)


Estado 125

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 119
    ID       desplazar e ir al estado 120

    logicalOperation  ir al estado 139


Estado 126

   58 return: RETURN INT_VAL $@12 $@13 .

    $default  reduce usando la regla 58 (return)


Estado 127

   63 return: RETURN ID PARENTESIS_OPEN $@16 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 42 (functionCallParams)

    functionCallParams  ir al estado 140
    aritmeticOperation  ir al estado 64


Estado 128

   55 return: RETURN ID $@10 $@11 .

    $default  reduce usando la regla 55 (return)


Estado 129

   61 return: RETURN aritmeticOperation $@14 $@15 .

    $default  reduce usando la regla 61 (return)


Estado 130

   84 logicalOperator: EQUALS .

    $default  reduce usando la regla 84 (logicalOperator)


Estado 131

   85 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 85 (logicalOperator)


Estado 132

   88 logicalOperator: GREATER .

    $default  reduce usando la regla 88 (logicalOperator)


Estado 133

   89 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 89 (logicalOperator)


Estado 134

   86 logicalOperator: LESS .

    $default  reduce usando la regla 86 (logicalOperator)


Estado 135

   87 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 87 (logicalOperator)


Estado 136

   82 logicalOperation: INT_VAL logicalOperator . INT_VAL
   83                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 141
    ID       desplazar e ir al estado 142


Estado 137

   80 logicalOperation: ID logicalOperator . ID
   81                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 143
    ID       desplazar e ir al estado 144


Estado 138

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    $default  reduce usando la regla 71 ($@20)

    $@20  ir al estado 145


Estado 139

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 76 ($@24)

    $@24  ir al estado 146


Estado 140

   63 return: RETURN ID PARENTESIS_OPEN $@16 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 147


Estado 141

   82 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 82 (logicalOperation)


Estado 142

   83 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 83 (logicalOperation)


Estado 143

   81 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 81 (logicalOperation)


Estado 144

   80 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 80 (logicalOperation)


Estado 145

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 148


Estado 146

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 149


Estado 147

   63 return: RETURN ID PARENTESIS_OPEN $@16 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 63 (return)


Estado 148

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    END_OF_INSTRUCTION  desplazar e ir al estado 150


Estado 149

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 151


Estado 150

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@21 codeSet CURLY_BRACKET_CLOSE $@22 else

    $default  reduce usando la regla 72 ($@21)

    $@21  ir al estado 152


Estado 151

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 153


Estado 152

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 . codeSet CURLY_BRACKET_CLOSE $@22 else

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 154
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 153

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@25 codeSet $@26 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 77 ($@25)

    $@25  ir al estado 155


Estado 154

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet . CURLY_BRACKET_CLOSE $@22 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 156


Estado 155

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 . codeSet $@26 CURLY_BRACKET_CLOSE

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 157
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 156

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE . $@22 else

    $default  reduce usando la regla 73 ($@22)

    $@22  ir al estado 158


Estado 157

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet . $@26 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 78 ($@26)

    $@26  ir al estado 159


Estado 158

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 . else

    END_OF_INSTRUCTION  reduce usando la regla 70 (else)
    $default            reduce usando la regla 66 ($@17)

    else  ir al estado 160
    $@17  ir al estado 161


Estado 159

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 162


Estado 160

   74 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@20 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@21 codeSet CURLY_BRACKET_CLOSE $@22 else .

    $default  reduce usando la regla 74 (controlStructure)


Estado 161

   69 else: $@17 . ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 163


Estado 162

   79 controlStructure: $@23 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@24 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@25 codeSet $@26 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 79 (controlStructure)


Estado 163

   69 else: $@17 ELSE_CLAUSE . $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 67 ($@18)

    $@18  ir al estado 164


Estado 164

   69 else: $@17 ELSE_CLAUSE $@18 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 165


Estado 165

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 166


Estado 166

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@19 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 68 ($@19)

    $@19  ir al estado 167


Estado 167

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 . codeSet CURLY_BRACKET_CLOSE

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 75 ($@23)
    $default      reduce usando la regla 27 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 168
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@23              ir al estado 105


Estado 168

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 169


Estado 169

   69 else: $@17 ELSE_CLAUSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 69 (else)
