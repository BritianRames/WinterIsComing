No terminales inútiles en la gramática

   aritmeticOperationSum


Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   SQUARE_BRACKET_OPEN
   SQUARE_BRACKET_CLOSE
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   44 return: RETURN INT_VAL


Estado 18 conflictos: 1 reducción/reducción
Estado 77 conflictos: 1 reducción/reducción
Estado 92 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | %empty

    9 declaration: INT_TYPE ID

   10 $@3: %empty

   11 $@4: %empty

   12 $@5: %empty

   13 $@6: %empty

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   15 params: INT_TYPE ID params
   16       | COMMA INT_TYPE ID params
   17       | %empty

   18 codeSet: instruction END_OF_INSTRUCTION codeSet
   19        | controlStructure codeSet
   20        | END_OF_INSTRUCTION codeSet
   21        | %empty

   22 instruction: assignation
   23            | declaration
   24            | ID ASSIGN aritmeticOperation
   25            | return
   26            | print
   27            | BREAK

   28 assignation: ID ASSIGN INT_VAL
   29            | ID ASSIGN ID

   30 $@7: %empty

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN aritmeticOperation

   33 functionCallParams: INT_VAL
   34                   | ID
   35                   | INT_VAL COMMA functionCallParams
   36                   | ID COMMA functionCallParams

   37 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   38                   | aritmeticOperation SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation PRODUCT aritmeticOperation
   40                   | aritmeticOperation DIVIDE aritmeticOperation
   41                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   42                   | INT_VAL

   43 return: RETURN ID
   44       | RETURN INT_VAL
   45       | RETURN aritmeticOperation

   46 $@8: %empty

   47 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

   48 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   49 printableElement: ID
   50                 | QUOTE text QUOTE
   51                 | printableElement SUM printableElement

   52 text: STRING_VAL
   53     | ' '

   54 $@9: %empty

   55 $@10: %empty

   56 $@11: %empty

   57 $@12: %empty

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

   59 $@13: %empty

   60 $@14: %empty

   61 $@15: %empty

   62 $@16: %empty

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

   64 logicalOperation: ID logicalOperator ID
   65                 | ID logicalOperator INT_VAL
   66                 | INT_VAL logicalOperator INT_VAL
   67                 | INT_VAL logicalOperator ID

   68 logicalOperator: EQUALS
   69                | NOT_EQUALS
   70                | LESS
   71                | LESS_EQUALS
   72                | GREATER
   73                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 53
error (256)
CONTINUE (258)
BREAK (259) 27
RETURN (260) 43 44 45 47
FUN (261) 14
INT_VAL (262) 28 33 35 42 44 65 66 67
STRING_VAL (263) 52
INT_TYPE (264) 9 15 16
STRING_TYPE (265)
ASSIGN (266) 24 28 29 31 32
SUM (267) 37 51
SUBSTRACT (268) 38
PRODUCT (269) 39
DIVIDE (270) 40
AND (271)
OR (272)
NOT (273)
EQUALS (274) 68
NOT_EQUALS (275) 69
GREATER (276) 72
GREATER_EQUALS (277) 73
LESS (278) 70
LESS_EQUALS (279) 71
IF_CLAUSE (280) 58
WHILE_CLAUSE (281) 63
ELSE_CLAUSE (282) 58
HEADER_END (283)
SQUARE_BRACKET_OPEN (284)
SQUARE_BRACKET_CLOSE (285)
CURLY_BRACKET_OPEN (286) 14 58 63
CURLY_BRACKET_CLOSE (287) 14 58 63
COMMA (288) 16 35 36
PARENTESIS_OPEN (289) 14 31 41 47 48 58 63
PARENTESIS_CLOSE (290) 14 31 41 47 48 58 63
END_OF_INSTRUCTION (291) 3 4 7 14 18 20 58 63
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 50
ID (295) 9 14 15 16 24 28 29 31 32 34 36 43 47 49 64 65 67
PRINT (296) 48


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
begin (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
root (46)
    en la izquierda: 3 4 6 7 8, en la derecha: 2 3 4 6 7
$@2 (47)
    en la izquierda: 5, en la derecha: 6
declaration (48)
    en la izquierda: 9, en la derecha: 3 23
function (49)
    en la izquierda: 14, en la derecha: 6
$@3 (50)
    en la izquierda: 10, en la derecha: 14
$@4 (51)
    en la izquierda: 11, en la derecha: 14
$@5 (52)
    en la izquierda: 12, en la derecha: 14
$@6 (53)
    en la izquierda: 13, en la derecha: 14
params (54)
    en la izquierda: 15 16 17, en la derecha: 14 15 16
codeSet (55)
    en la izquierda: 18 19 20 21, en la derecha: 14 18 19 20 58 63
instruction (56)
    en la izquierda: 22 23 24 25 26 27, en la derecha: 18
assignation (57)
    en la izquierda: 28 29 31 32, en la derecha: 4 22
$@7 (58)
    en la izquierda: 30, en la derecha: 31
functionCallParams (59)
    en la izquierda: 33 34 35 36, en la derecha: 31 35 36 47
aritmeticOperation (60)
    en la izquierda: 37 38 39 40 41 42, en la derecha: 24 32 37 38
    39 40 41 45
return (61)
    en la izquierda: 43 44 45 47, en la derecha: 25
$@8 (62)
    en la izquierda: 46, en la derecha: 47
print (63)
    en la izquierda: 48, en la derecha: 26
printableElement (64)
    en la izquierda: 49 50 51, en la derecha: 48 51
text (65)
    en la izquierda: 52 53, en la derecha: 50
controlStructure (66)
    en la izquierda: 58 63, en la derecha: 19
$@9 (67)
    en la izquierda: 54, en la derecha: 58
$@10 (68)
    en la izquierda: 55, en la derecha: 58
$@11 (69)
    en la izquierda: 56, en la derecha: 58
$@12 (70)
    en la izquierda: 57, en la derecha: 58
$@13 (71)
    en la izquierda: 59, en la derecha: 63
$@14 (72)
    en la izquierda: 60, en la derecha: 63
$@15 (73)
    en la izquierda: 61, en la derecha: 63
$@16 (74)
    en la izquierda: 62, en la derecha: 63
logicalOperation (75)
    en la izquierda: 64 65 66 67, en la derecha: 58 63
logicalOperator (76)
    en la izquierda: 68 69 70 71 72 73, en la derecha: 64 65 66 67


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 7
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

    9 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 11


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 12
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 6

   28 assignation: ID . ASSIGN INT_VAL
   29            | ID . ASSIGN ID
   31            | ID . ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 13


Estado 7

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 8

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 14

    function  ir al estado 15


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 16


Estado 10

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 17


Estado 11

    9 declaration: INT_TYPE ID .

    $default  reduce usando la regla 9 (declaration)


Estado 12

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 13

   28 assignation: ID ASSIGN . INT_VAL
   29            | ID ASSIGN . ID
   31            | ID ASSIGN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 18
    PARENTESIS_OPEN  desplazar e ir al estado 19
    ID               desplazar e ir al estado 20

    aritmeticOperation  ir al estado 21


Estado 14

   14 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 22


Estado 15

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 23
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 16

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 24
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 17

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 25
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 18

   28 assignation: ID ASSIGN INT_VAL .
   42 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 42 (aritmeticOperation)]
    $default            reduce usando la regla 42 (aritmeticOperation)


Estado 19

   41 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 27


Estado 20

   29 assignation: ID ASSIGN ID .
   31            | ID ASSIGN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 28

    $default  reduce usando la regla 29 (assignation)


Estado 21

   32 assignation: ID ASSIGN aritmeticOperation .
   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 29
    SUBSTRACT  desplazar e ir al estado 30
    PRODUCT    desplazar e ir al estado 31
    DIVIDE     desplazar e ir al estado 32

    $default  reduce usando la regla 32 (assignation)


Estado 22

   14 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 10 ($@3)

    $@3  ir al estado 33


Estado 23

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 24

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 25

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 26

   42 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 27

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation
   41                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 29
    SUBSTRACT         desplazar e ir al estado 30
    PRODUCT           desplazar e ir al estado 31
    DIVIDE            desplazar e ir al estado 32
    PARENTESIS_CLOSE  desplazar e ir al estado 34


Estado 28

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 30 ($@7)

    $@7  ir al estado 35


Estado 29

   37 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 36


Estado 30

   38 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 37


Estado 31

   39 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 38


Estado 32

   40 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 19

    aritmeticOperation  ir al estado 39


Estado 33

   14 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 40


Estado 34

   41 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 35

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 43


Estado 36

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   37                   | aritmeticOperation SUM aritmeticOperation .
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 31
    DIVIDE   desplazar e ir al estado 32

    $default  reduce usando la regla 37 (aritmeticOperation)


Estado 37

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   38                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 31
    DIVIDE   desplazar e ir al estado 32

    $default  reduce usando la regla 38 (aritmeticOperation)


Estado 38

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation PRODUCT aritmeticOperation .
   40                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 39 (aritmeticOperation)


Estado 39

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation
   40                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 40

   14 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@4)

    $@4  ir al estado 44


Estado 41

   33 functionCallParams: INT_VAL .
   35                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 45

    $default  reduce usando la regla 33 (functionCallParams)


Estado 42

   34 functionCallParams: ID .
   36                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 46

    $default  reduce usando la regla 34 (functionCallParams)


Estado 43

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 47


Estado 44

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 50


Estado 45

   35 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 51


Estado 46

   36 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 52


Estado 47

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 31 (assignation)


Estado 48

   15 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 53


Estado 49

   16 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 54


Estado 50

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@5)

    $@5  ir al estado 55


Estado 51

   35 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 35 (functionCallParams)


Estado 52

   36 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 36 (functionCallParams)


Estado 53

   15 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 56


Estado 54

   16 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 57


Estado 55

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 58


Estado 56

   15 params: INT_TYPE ID params .

    $default  reduce usando la regla 15 (params)


Estado 57

   16 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 17 (params)

    params  ir al estado 59


Estado 58

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@6)

    $@6  ir al estado 60


Estado 59

   16 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 16 (params)


Estado 60

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 61


Estado 61

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 62


Estado 62

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 70
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 63

   27 instruction: BREAK .

    $default  reduce usando la regla 27 (instruction)


Estado 64

   43 return: RETURN . ID
   44       | RETURN . INT_VAL
   45       | RETURN . aritmeticOperation
   47       | RETURN . ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 77
    PARENTESIS_OPEN  desplazar e ir al estado 19
    ID               desplazar e ir al estado 78

    aritmeticOperation  ir al estado 79


Estado 65

   58 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 80


Estado 66

   20 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 81
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 67

   24 instruction: ID . ASSIGN aritmeticOperation
   28 assignation: ID . ASSIGN INT_VAL
   29            | ID . ASSIGN ID
   31            | ID . ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 82


Estado 68

   48 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 83


Estado 69

   23 instruction: declaration .

    $default  reduce usando la regla 23 (instruction)


Estado 70

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 84


Estado 71

   18 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 85


Estado 72

   22 instruction: assignation .

    $default  reduce usando la regla 22 (instruction)


Estado 73

   25 instruction: return .

    $default  reduce usando la regla 25 (instruction)


Estado 74

   26 instruction: print .

    $default  reduce usando la regla 26 (instruction)


Estado 75

   19 codeSet: controlStructure . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 86
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 76

   63 controlStructure: $@13 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 87


Estado 77

   42 aritmeticOperation: INT_VAL .
   44 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 42 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 44 (return)]
    $default            reduce usando la regla 42 (aritmeticOperation)


Estado 78

   43 return: RETURN ID .
   47       | RETURN ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 88

    $default  reduce usando la regla 43 (return)


Estado 79

   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation
   45 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 29
    SUBSTRACT  desplazar e ir al estado 30
    PRODUCT    desplazar e ir al estado 31
    DIVIDE     desplazar e ir al estado 32

    $default  reduce usando la regla 45 (return)


Estado 80

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 89
    ID       desplazar e ir al estado 90

    logicalOperation  ir al estado 91


Estado 81

   20 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 82

   24 instruction: ID ASSIGN . aritmeticOperation
   28 assignation: ID ASSIGN . INT_VAL
   29            | ID ASSIGN . ID
   31            | ID ASSIGN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 18
    PARENTESIS_OPEN  desplazar e ir al estado 19
    ID               desplazar e ir al estado 20

    aritmeticOperation  ir al estado 92


Estado 83

   48 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 93
    ID     desplazar e ir al estado 94

    printableElement  ir al estado 95


Estado 84

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 96


Estado 85

   18 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 97
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 86

   19 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 87

   63 controlStructure: $@13 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 98


Estado 88

   47 return: RETURN ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 46 ($@8)

    $@8  ir al estado 99


Estado 89

   66 logicalOperation: INT_VAL . logicalOperator INT_VAL
   67                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 100
    NOT_EQUALS      desplazar e ir al estado 101
    GREATER         desplazar e ir al estado 102
    GREATER_EQUALS  desplazar e ir al estado 103
    LESS            desplazar e ir al estado 104
    LESS_EQUALS     desplazar e ir al estado 105

    logicalOperator  ir al estado 106


Estado 90

   64 logicalOperation: ID . logicalOperator ID
   65                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 100
    NOT_EQUALS      desplazar e ir al estado 101
    GREATER         desplazar e ir al estado 102
    GREATER_EQUALS  desplazar e ir al estado 103
    LESS            desplazar e ir al estado 104
    LESS_EQUALS     desplazar e ir al estado 105

    logicalOperator  ir al estado 107


Estado 91

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 108


Estado 92

   24 instruction: ID ASSIGN aritmeticOperation .
   32 assignation: ID ASSIGN aritmeticOperation .
   37 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 29
    SUBSTRACT  desplazar e ir al estado 30
    PRODUCT    desplazar e ir al estado 31
    DIVIDE     desplazar e ir al estado 32

    END_OF_INSTRUCTION  reduce usando la regla 24 (instruction)
    END_OF_INSTRUCTION  [reduce usando la regla 32 (assignation)]
    $default            reduce usando la regla 24 (instruction)


Estado 93

   50 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 109
    ' '         desplazar e ir al estado 110

    text  ir al estado 111


Estado 94

   49 printableElement: ID .

    $default  reduce usando la regla 49 (printableElement)


Estado 95

   48 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   51 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 112
    PARENTESIS_CLOSE  desplazar e ir al estado 113


Estado 96

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 14 (function)


Estado 97

   18 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 18 (codeSet)


Estado 98

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 89
    ID       desplazar e ir al estado 90

    logicalOperation  ir al estado 114


Estado 99

   47 return: RETURN ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 41
    ID       desplazar e ir al estado 42

    functionCallParams  ir al estado 115


Estado 100

   68 logicalOperator: EQUALS .

    $default  reduce usando la regla 68 (logicalOperator)


Estado 101

   69 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 69 (logicalOperator)


Estado 102

   72 logicalOperator: GREATER .

    $default  reduce usando la regla 72 (logicalOperator)


Estado 103

   73 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 73 (logicalOperator)


Estado 104

   70 logicalOperator: LESS .

    $default  reduce usando la regla 70 (logicalOperator)


Estado 105

   71 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 71 (logicalOperator)


Estado 106

   66 logicalOperation: INT_VAL logicalOperator . INT_VAL
   67                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 116
    ID       desplazar e ir al estado 117


Estado 107

   64 logicalOperation: ID logicalOperator . ID
   65                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 118
    ID       desplazar e ir al estado 119


Estado 108

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 54 ($@9)

    $@9  ir al estado 120


Estado 109

   52 text: STRING_VAL .

    $default  reduce usando la regla 52 (text)


Estado 110

   53 text: ' ' .

    $default  reduce usando la regla 53 (text)


Estado 111

   50 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 121


Estado 112

   51 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 93
    ID     desplazar e ir al estado 94

    printableElement  ir al estado 122


Estado 113

   48 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 48 (print)


Estado 114

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 123


Estado 115

   47 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 124


Estado 116

   66 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 66 (logicalOperation)


Estado 117

   67 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 67 (logicalOperation)


Estado 118

   65 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 65 (logicalOperation)


Estado 119

   64 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 64 (logicalOperation)


Estado 120

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 . CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 125


Estado 121

   50 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 50 (printableElement)


Estado 122

   51 printableElement: printableElement . SUM printableElement
   51                 | printableElement SUM printableElement .

    $default  reduce usando la regla 51 (printableElement)


Estado 123

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 60 ($@14)

    $@14  ir al estado 126


Estado 124

   47 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 47 (return)


Estado 125

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN . $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 55 ($@10)

    $@10  ir al estado 127


Estado 126

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 . CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 128


Estado 127

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 129


Estado 128

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN . $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 61 ($@15)

    $@15  ir al estado 130


Estado 129

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 131
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 130

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 . END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 132


Estado 131

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 133


Estado 132

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION . codeSet $@16 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 134
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 133

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 56 ($@11)

    $@11  ir al estado 135


Estado 134

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet . $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 62 ($@16)

    $@16  ir al estado 136


Estado 135

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 . ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 137


Estado 136

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 138


Estado 137

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE . CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 139


Estado 138

   63 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 63 (controlStructure)


Estado 139

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN . $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 57 ($@12)

    $@12  ir al estado 140


Estado 140

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 63
    RETURN              desplazar e ir al estado 64
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 65
    END_OF_INSTRUCTION  desplazar e ir al estado 66
    ID                  desplazar e ir al estado 67
    PRINT               desplazar e ir al estado 68

    WHILE_CLAUSE  reduce usando la regla 59 ($@13)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 69
    codeSet           ir al estado 141
    instruction       ir al estado 71
    assignation       ir al estado 72
    return            ir al estado 73
    print             ir al estado 74
    controlStructure  ir al estado 75
    $@13              ir al estado 76


Estado 141

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 142


Estado 142

   58 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 58 (controlStructure)
