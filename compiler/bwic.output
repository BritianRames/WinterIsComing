Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   50 return: RETURN ID
   51       | RETURN INT_VAL


Estado 15 conflictos: 2 desplazamiento/reducción
Estado 106 conflictos: 1 reducción/reducción
Estado 107 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   17 params: INT_TYPE ID params
   18       | COMMA INT_TYPE ID params
   19       | %empty

   20 codeSet: instruction END_OF_INSTRUCTION codeSet
   21        | controlStructure END_OF_INSTRUCTION codeSet
   22        | END_OF_INSTRUCTION codeSet
   23        | %empty

   24 instruction: assignation
   25            | declaration
   26            | return
   27            | print
   28            | BREAK

   29 assignation: ID ASSIGN INT_VAL
   30            | ID ASSIGN ID
   31            | ID PLUSPLUS
   32            | ID MINUSMINUS
   33            | ID ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE

   34 $@7: %empty

   35 assignation: ID ASSIGN $@7 aritmeticOperation
   36            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   37            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   38            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   39 functionCallParams: INT_VAL
   40                   | ID
   41                   | INT_VAL COMMA functionCallParams
   42                   | ID COMMA functionCallParams

   43 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   44                   | aritmeticOperation SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation PRODUCT aritmeticOperation
   46                   | aritmeticOperation DIVIDE aritmeticOperation
   47                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   48                   | INT_VAL
   49                   | ID

   50 return: RETURN ID
   51       | RETURN INT_VAL
   52       | RETURN aritmeticOperation

   53 $@8: %empty

   54 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

   55 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   56 printableElement: ID
   57                 | QUOTE text QUOTE
   58                 | printableElement SUM printableElement
   59                 | INT_VAL

   60 text: STRING_VAL
   61     | ' '

   62 $@9: %empty

   63 $@10: %empty

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE
   65     | %empty

   66 $@11: %empty

   67 $@12: %empty

   68 $@13: %empty

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

   70 $@14: %empty

   71 $@15: %empty

   72 $@16: %empty

   73 $@17: %empty

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

   75 logicalOperation: ID logicalOperator ID
   76                 | ID logicalOperator INT_VAL
   77                 | INT_VAL logicalOperator INT_VAL
   78                 | INT_VAL logicalOperator ID

   79 logicalOperator: EQUALS
   80                | NOT_EQUALS
   81                | LESS
   82                | LESS_EQUALS
   83                | GREATER
   84                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 61
error (256)
CONTINUE (258)
BREAK (259) 28
RETURN (260) 50 51 52 54
FUN (261) 16
INT_VAL (262) 11 29 36 37 38 39 41 48 51 59 76 77 78
STRING_VAL (263) 60
INT_TYPE (264) 10 11 17 18
STRING_TYPE (265)
ASSIGN (266) 29 30 33 35 36 37 38
SUM (267) 43 58
SUBSTRACT (268) 44
PRODUCT (269) 45
DIVIDE (270) 46
AND (271)
OR (272)
NOT (273)
EQUALS (274) 79
NOT_EQUALS (275) 80
GREATER (276) 83
GREATER_EQUALS (277) 84
LESS (278) 81
LESS_EQUALS (279) 82
IF_CLAUSE (280) 69
WHILE_CLAUSE (281) 74
ELSE_CLAUSE (282) 64
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 11 36 37 38
SQUARE_BRACKET_CLOSE (285) 11 36 37 38
CURLY_BRACKET_OPEN (286) 16 64 69 74
CURLY_BRACKET_CLOSE (287) 16 64 69 74
COMMA (288) 18 41 42
PARENTESIS_OPEN (289) 16 33 47 54 55 69 74
PARENTESIS_CLOSE (290) 16 33 47 54 55 69 74
END_OF_INSTRUCTION (291) 3 4 7 8 16 20 21 22 64 69 74
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 57
ID (295) 10 11 16 17 18 29 30 31 32 33 35 36 37 38 40 42 49 50 54 56
    75 76 78
PRINT (296) 55
PLUSPLUS (297) 31
MINUSMINUS (298) 32


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8 9, en la derecha: 2 3 4 6 7 8
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 10 11, en la derecha: 3 25
function (51)
    en la izquierda: 16, en la derecha: 6
$@3 (52)
    en la izquierda: 12, en la derecha: 16
$@4 (53)
    en la izquierda: 13, en la derecha: 16
$@5 (54)
    en la izquierda: 14, en la derecha: 16
$@6 (55)
    en la izquierda: 15, en la derecha: 16
params (56)
    en la izquierda: 17 18 19, en la derecha: 16 17 18
codeSet (57)
    en la izquierda: 20 21 22 23, en la derecha: 16 20 21 22 64 69
    74
instruction (58)
    en la izquierda: 24 25 26 27 28, en la derecha: 20
assignation (59)
    en la izquierda: 29 30 31 32 33 35 36 37 38, en la derecha: 4 24
$@7 (60)
    en la izquierda: 34, en la derecha: 35
functionCallParams (61)
    en la izquierda: 39 40 41 42, en la derecha: 33 41 42 54
aritmeticOperation (62)
    en la izquierda: 43 44 45 46 47 48 49, en la derecha: 35 43 44
    45 46 47 52
return (63)
    en la izquierda: 50 51 52 54, en la derecha: 26
$@8 (64)
    en la izquierda: 53, en la derecha: 54
print (65)
    en la izquierda: 55, en la derecha: 8 27
printableElement (66)
    en la izquierda: 56 57 58 59, en la derecha: 55 58
text (67)
    en la izquierda: 60 61, en la derecha: 57
else (68)
    en la izquierda: 64 65, en la derecha: 69
$@9 (69)
    en la izquierda: 62, en la derecha: 64
$@10 (70)
    en la izquierda: 63, en la derecha: 64
controlStructure (71)
    en la izquierda: 69 74, en la derecha: 21
$@11 (72)
    en la izquierda: 66, en la derecha: 69
$@12 (73)
    en la izquierda: 67, en la derecha: 69
$@13 (74)
    en la izquierda: 68, en la derecha: 69
$@14 (75)
    en la izquierda: 70, en la derecha: 74
$@15 (76)
    en la izquierda: 71, en la derecha: 74
$@16 (77)
    en la izquierda: 72, en la derecha: 74
$@17 (78)
    en la izquierda: 73, en la derecha: 74
logicalOperation (79)
    en la izquierda: 75 76 77 78, en la derecha: 69 74
logicalOperator (80)
    en la izquierda: 79 80 81 82 83 84, en la derecha: 75 76 77 78


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 8
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 13


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 14
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 6

   29 assignation: ID . ASSIGN INT_VAL
   30            | ID . ASSIGN ID
   31            | ID . PLUSPLUS
   32            | ID . MINUSMINUS
   33            | ID . ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   35            | ID . ASSIGN $@7 aritmeticOperation
   36            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   37            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   38            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               desplazar e ir al estado 15
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 16
    PLUSPLUS             desplazar e ir al estado 17
    MINUSMINUS           desplazar e ir al estado 18


Estado 7

   55 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 19


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 20

    function  ir al estado 21


Estado 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 22


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 23


Estado 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 24


Estado 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 25

    $default  reduce usando la regla 10 (declaration)


Estado 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 15

   29 assignation: ID ASSIGN . INT_VAL
   30            | ID ASSIGN . ID
   33            | ID ASSIGN . ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   35            | ID ASSIGN . $@7 aritmeticOperation
   38            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 26
    ID       desplazar e ir al estado 27

    INT_VAL   [reduce usando la regla 34 ($@7)]
    ID        [reduce usando la regla 34 ($@7)]
    $default  reduce usando la regla 34 ($@7)

    $@7  ir al estado 28


Estado 16

   36 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   37            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  desplazar e ir al estado 29


Estado 17

   31 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 31 (assignation)


Estado 18

   32 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 32 (assignation)


Estado 19

   55 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 30
    QUOTE    desplazar e ir al estado 31
    ID       desplazar e ir al estado 32

    printableElement  ir al estado 33


Estado 20

   16 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 34


Estado 21

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 35
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 36
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 37
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 38
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 39


Estado 26

   29 assignation: ID ASSIGN INT_VAL .

    $default  reduce usando la regla 29 (assignation)


Estado 27

   30 assignation: ID ASSIGN ID .
   33            | ID ASSIGN ID . PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   38            | ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 40
    PARENTESIS_OPEN      desplazar e ir al estado 41

    $default  reduce usando la regla 30 (assignation)


Estado 28

   35 assignation: ID ASSIGN $@7 . aritmeticOperation

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 45


Estado 29

   36 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   37            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 46


Estado 30

   59 printableElement: INT_VAL .

    $default  reduce usando la regla 59 (printableElement)


Estado 31

   57 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 47
    ' '         desplazar e ir al estado 48

    text  ir al estado 49


Estado 32

   56 printableElement: ID .

    $default  reduce usando la regla 56 (printableElement)


Estado 33

   55 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   58 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 50
    PARENTESIS_CLOSE  desplazar e ir al estado 51


Estado 34

   16 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@3)

    $@3  ir al estado 52


Estado 35

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 36

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 37

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 38

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce usando la regla 8 (root)


Estado 39

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 53


Estado 40

   38 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 54


Estado 41

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 55
    ID       desplazar e ir al estado 56

    functionCallParams  ir al estado 57


Estado 42

   48 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 48 (aritmeticOperation)


Estado 43

   47 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 58


Estado 44

   49 aritmeticOperation: ID .

    $default  reduce usando la regla 49 (aritmeticOperation)


Estado 45

   35 assignation: ID ASSIGN $@7 aritmeticOperation .
   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 59
    SUBSTRACT  desplazar e ir al estado 60
    PRODUCT    desplazar e ir al estado 61
    DIVIDE     desplazar e ir al estado 62

    $default  reduce usando la regla 35 (assignation)


Estado 46

   36 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   37            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  desplazar e ir al estado 63


Estado 47

   60 text: STRING_VAL .

    $default  reduce usando la regla 60 (text)


Estado 48

   61 text: ' ' .

    $default  reduce usando la regla 61 (text)


Estado 49

   57 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 64


Estado 50

   58 printableElement: printableElement SUM . printableElement

    INT_VAL  desplazar e ir al estado 30
    QUOTE    desplazar e ir al estado 31
    ID       desplazar e ir al estado 32

    printableElement  ir al estado 65


Estado 51

   55 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 55 (print)


Estado 52

   16 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 66


Estado 53

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 11 (declaration)


Estado 54

   38 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 67


Estado 55

   39 functionCallParams: INT_VAL .
   41                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 68

    $default  reduce usando la regla 39 (functionCallParams)


Estado 56

   40 functionCallParams: ID .
   42                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 69

    $default  reduce usando la regla 40 (functionCallParams)


Estado 57

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 70


Estado 58

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   47                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 59
    SUBSTRACT         desplazar e ir al estado 60
    PRODUCT           desplazar e ir al estado 61
    DIVIDE            desplazar e ir al estado 62
    PARENTESIS_CLOSE  desplazar e ir al estado 71


Estado 59

   43 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 72


Estado 60

   44 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 73


Estado 61

   45 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 74


Estado 62

   46 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 42
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 44

    aritmeticOperation  ir al estado 75


Estado 63

   36 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   37            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  desplazar e ir al estado 76
    ID       desplazar e ir al estado 77


Estado 64

   57 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 57 (printableElement)


Estado 65

   58 printableElement: printableElement . SUM printableElement
   58                 | printableElement SUM printableElement .

    $default  reduce usando la regla 58 (printableElement)


Estado 66

   16 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@4)

    $@4  ir al estado 78


Estado 67

   38 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 38 (assignation)


Estado 68

   41 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 55
    ID       desplazar e ir al estado 56

    functionCallParams  ir al estado 79


Estado 69

   42 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 55
    ID       desplazar e ir al estado 56

    functionCallParams  ir al estado 80


Estado 70

   33 assignation: ID ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 33 (assignation)


Estado 71

   47 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 47 (aritmeticOperation)


Estado 72

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   43                   | aritmeticOperation SUM aritmeticOperation .
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 61
    DIVIDE   desplazar e ir al estado 62

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 73

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   44                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 61
    DIVIDE   desplazar e ir al estado 62

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 74

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   45                   | aritmeticOperation PRODUCT aritmeticOperation .
   46                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 75

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   46                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 46 (aritmeticOperation)


Estado 76

   37 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce usando la regla 37 (assignation)


Estado 77

   36 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce usando la regla 36 (assignation)


Estado 78

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 81
    COMMA     desplazar e ir al estado 82

    $default  reduce usando la regla 19 (params)

    params  ir al estado 83


Estado 79

   41 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 41 (functionCallParams)


Estado 80

   42 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 42 (functionCallParams)


Estado 81

   17 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 84


Estado 82

   18 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 85


Estado 83

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 86


Estado 84

   17 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 81
    COMMA     desplazar e ir al estado 82

    $default  reduce usando la regla 19 (params)

    params  ir al estado 87


Estado 85

   18 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 88


Estado 86

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE . $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@5)

    $@5  ir al estado 89


Estado 87

   17 params: INT_TYPE ID params .

    $default  reduce usando la regla 17 (params)


Estado 88

   18 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 81
    COMMA     desplazar e ir al estado 82

    $default  reduce usando la regla 19 (params)

    params  ir al estado 90


Estado 89

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 91


Estado 90

   18 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 18 (params)


Estado 91

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 92


Estado 92

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 15 ($@6)

    $@6  ir al estado 93


Estado 93

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 99
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 94

   28 instruction: BREAK .

    $default  reduce usando la regla 28 (instruction)


Estado 95

   50 return: RETURN . ID
   51       | RETURN . INT_VAL
   52       | RETURN . aritmeticOperation
   54       | RETURN . ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 106
    PARENTESIS_OPEN  desplazar e ir al estado 43
    ID               desplazar e ir al estado 107

    aritmeticOperation  ir al estado 108


Estado 96

   69 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    PARENTESIS_OPEN  desplazar e ir al estado 109


Estado 97

   22 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 110
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 98

   25 instruction: declaration .

    $default  reduce usando la regla 25 (instruction)


Estado 99

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 111


Estado 100

   20 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 112


Estado 101

   24 instruction: assignation .

    $default  reduce usando la regla 24 (instruction)


Estado 102

   26 instruction: return .

    $default  reduce usando la regla 26 (instruction)


Estado 103

   27 instruction: print .

    $default  reduce usando la regla 27 (instruction)


Estado 104

   21 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 113


Estado 105

   74 controlStructure: $@14 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 114


Estado 106

   48 aritmeticOperation: INT_VAL .
   51 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 48 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 51 (return)]
    $default            reduce usando la regla 48 (aritmeticOperation)


Estado 107

   49 aritmeticOperation: ID .
   50 return: RETURN ID .
   54       | RETURN ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 115

    END_OF_INSTRUCTION  reduce usando la regla 49 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 50 (return)]
    $default            reduce usando la regla 49 (aritmeticOperation)


Estado 108

   43 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation . DIVIDE aritmeticOperation
   52 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 59
    SUBSTRACT  desplazar e ir al estado 60
    PRODUCT    desplazar e ir al estado 61
    DIVIDE     desplazar e ir al estado 62

    $default  reduce usando la regla 52 (return)


Estado 109

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    INT_VAL  desplazar e ir al estado 116
    ID       desplazar e ir al estado 117

    logicalOperation  ir al estado 118


Estado 110

   22 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 22 (codeSet)


Estado 111

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 119


Estado 112

   20 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 120
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 113

   21 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 121
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 114

   74 controlStructure: $@14 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 122


Estado 115

   54 return: RETURN ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 53 ($@8)

    $@8  ir al estado 123


Estado 116

   77 logicalOperation: INT_VAL . logicalOperator INT_VAL
   78                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 124
    NOT_EQUALS      desplazar e ir al estado 125
    GREATER         desplazar e ir al estado 126
    GREATER_EQUALS  desplazar e ir al estado 127
    LESS            desplazar e ir al estado 128
    LESS_EQUALS     desplazar e ir al estado 129

    logicalOperator  ir al estado 130


Estado 117

   75 logicalOperation: ID . logicalOperator ID
   76                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 124
    NOT_EQUALS      desplazar e ir al estado 125
    GREATER         desplazar e ir al estado 126
    GREATER_EQUALS  desplazar e ir al estado 127
    LESS            desplazar e ir al estado 128
    LESS_EQUALS     desplazar e ir al estado 129

    logicalOperator  ir al estado 131


Estado 118

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    PARENTESIS_CLOSE  desplazar e ir al estado 132


Estado 119

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@6 codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 16 (function)


Estado 120

   20 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 121

   21 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 21 (codeSet)


Estado 122

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 116
    ID       desplazar e ir al estado 117

    logicalOperation  ir al estado 133


Estado 123

   54 return: RETURN ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 55
    ID       desplazar e ir al estado 56

    functionCallParams  ir al estado 134


Estado 124

   79 logicalOperator: EQUALS .

    $default  reduce usando la regla 79 (logicalOperator)


Estado 125

   80 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 80 (logicalOperator)


Estado 126

   83 logicalOperator: GREATER .

    $default  reduce usando la regla 83 (logicalOperator)


Estado 127

   84 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 84 (logicalOperator)


Estado 128

   81 logicalOperator: LESS .

    $default  reduce usando la regla 81 (logicalOperator)


Estado 129

   82 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 82 (logicalOperator)


Estado 130

   77 logicalOperation: INT_VAL logicalOperator . INT_VAL
   78                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 135
    ID       desplazar e ir al estado 136


Estado 131

   75 logicalOperation: ID logicalOperator . ID
   76                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 137
    ID       desplazar e ir al estado 138


Estado 132

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    $default  reduce usando la regla 66 ($@11)

    $@11  ir al estado 139


Estado 133

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 140


Estado 134

   54 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 141


Estado 135

   77 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 77 (logicalOperation)


Estado 136

   78 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 78 (logicalOperation)


Estado 137

   76 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 76 (logicalOperation)


Estado 138

   75 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 75 (logicalOperation)


Estado 139

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 142


Estado 140

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 71 ($@15)

    $@15  ir al estado 143


Estado 141

   54 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 54 (return)


Estado 142

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    END_OF_INSTRUCTION  desplazar e ir al estado 144


Estado 143

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 145


Estado 144

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@12 codeSet CURLY_BRACKET_CLOSE $@13 else

    $default  reduce usando la regla 67 ($@12)

    $@12  ir al estado 146


Estado 145

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 147


Estado 146

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 . codeSet CURLY_BRACKET_CLOSE $@13 else

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 148
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 147

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@16 codeSet $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 72 ($@16)

    $@16  ir al estado 149


Estado 148

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet . CURLY_BRACKET_CLOSE $@13 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 150


Estado 149

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 . codeSet $@17 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 151
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 150

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE . $@13 else

    $default  reduce usando la regla 68 ($@13)

    $@13  ir al estado 152


Estado 151

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet . $@17 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 73 ($@17)

    $@17  ir al estado 153


Estado 152

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 . else

    END_OF_INSTRUCTION  reduce usando la regla 65 (else)
    $default            reduce usando la regla 62 ($@9)

    else  ir al estado 154
    $@9   ir al estado 155


Estado 153

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 156


Estado 154

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@11 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@12 codeSet CURLY_BRACKET_CLOSE $@13 else .

    $default  reduce usando la regla 69 (controlStructure)


Estado 155

   64 else: $@9 . ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 157


Estado 156

   74 controlStructure: $@14 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@15 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@16 codeSet $@17 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 74 (controlStructure)


Estado 157

   64 else: $@9 ELSE_CLAUSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 158


Estado 158

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 159


Estado 159

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@10 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 63 ($@10)

    $@10  ir al estado 160


Estado 160

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 70 ($@14)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 161
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@14              ir al estado 105


Estado 161

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 162


Estado 162

   64 else: $@9 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@10 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 64 (else)
