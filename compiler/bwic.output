No terminales inútiles en la gramática

   printableElement
   text


Terminales no usados en la gramática

   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG
   ' '


Reglas inútiles en la gramática

   91 printableElement: ID
   92                 | QUOTE text QUOTE
   93                 | printableElement SUM printableElement
   94                 | INT_VAL

   95 text: STRING_VAL
   96     | ' '


La regla es inútil debido a los conflictos

   54 $@11: %empty

   57 $@13: %empty

   63 $@17: %empty


Estado 26 conflictos: 1 reducción/reducción
Estado 65 conflictos: 1 reducción/reducción
Estado 106 conflictos: 1 reducción/reducción
Estado 107 conflictos: 1 reducción/reducción
Estado 116 conflictos: 4 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 $@7: %empty

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   18 $@8: %empty

   19 params: INT_TYPE ID $@8 params
   20       | COMMA INT_TYPE ID params

   21 $@9: %empty

   22 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@9 params
   23       | COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params
   24       | %empty

   25 codeSet: instruction END_OF_INSTRUCTION codeSet
   26        | controlStructure END_OF_INSTRUCTION codeSet
   27        | END_OF_INSTRUCTION codeSet
   28        | %empty

   29 instruction: assignation
   30            | declaration
   31            | return
   32            | print
   33            | CONTINUE
   34            | BREAK

   35 assignation: ID ASSIGN INT_VAL
   36            | ID PLUSPLUS
   37            | ID MINUSMINUS
   38            | ID ASSIGN aritmeticOperation
   39            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   40            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

   41 functionCallParams: aritmeticOperation
   42                   | aritmeticOperation COMMA functionCallParams
   43                   | %empty

   44 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   45                   | aritmeticOperation SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation PRODUCT aritmeticOperation
   47                   | aritmeticOperation DIVIDE aritmeticOperation
   48                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   49 $@10: %empty

   50 aritmeticOperation: ID PARENTESIS_OPEN $@10 functionCallParams PARENTESIS_CLOSE
   51                   | INT_VAL
   52                   | ID
   53                   | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   54 $@11: %empty

   55 $@12: %empty

   56 return: RETURN ID $@11 $@12

   57 $@13: %empty

   58 $@14: %empty

   59 return: RETURN INT_VAL $@13 $@14

   60 $@15: %empty

   61 $@16: %empty

   62 return: RETURN aritmeticOperation $@15 $@16

   63 $@17: %empty

   64 return: RETURN ID PARENTESIS_OPEN $@17 functionCallParams PARENTESIS_CLOSE

   65 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   66      | PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   67 $@18: %empty

   68 $@19: %empty

   69 $@20: %empty

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE
   71     | %empty

   72 $@21: %empty

   73 $@22: %empty

   74 $@23: %empty

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

   76 $@24: %empty

   77 $@25: %empty

   78 $@26: %empty

   79 $@27: %empty

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

   81 logicalOperation: ID logicalOperator ID
   82                 | ID logicalOperator INT_VAL
   83                 | INT_VAL logicalOperator INT_VAL
   84                 | INT_VAL logicalOperator ID

   85 logicalOperator: EQUALS
   86                | NOT_EQUALS
   87                | LESS
   88                | LESS_EQUALS
   89                | GREATER
   90                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32)
error (256)
CONTINUE (258) 33
BREAK (259) 34
RETURN (260) 56 59 62 64
FUN (261) 17
INT_VAL (262) 11 35 39 40 51 53 59 82 83 84
STRING_VAL (263) 65
INT_TYPE (264) 10 11 19 20 22 23
STRING_TYPE (265)
ASSIGN (266) 35 38 39 40
SUM (267) 44
SUBSTRACT (268) 45
PRODUCT (269) 46
DIVIDE (270) 47
AND (271)
OR (272)
NOT (273)
EQUALS (274) 85
NOT_EQUALS (275) 86
GREATER (276) 89
GREATER_EQUALS (277) 90
LESS (278) 87
LESS_EQUALS (279) 88
IF_CLAUSE (280) 75
WHILE_CLAUSE (281) 80
ELSE_CLAUSE (282) 70
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 11 22 23 39 40 53
SQUARE_BRACKET_CLOSE (285) 11 22 23 39 40 53
CURLY_BRACKET_OPEN (286) 17 70 75 80
CURLY_BRACKET_CLOSE (287) 17 70 75 80
COMMA (288) 20 23 42
PARENTESIS_OPEN (289) 17 48 50 64 65 66 75 80
PARENTESIS_CLOSE (290) 17 48 50 64 65 66 75 80
END_OF_INSTRUCTION (291) 3 4 7 8 17 25 26 27 70 75 80
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 65
ID (295) 10 11 17 19 20 22 23 35 36 37 38 39 40 50 52 53 56 64 81 82
    84
PRINT (296) 65 66
PLUSPLUS (297) 36
MINUSMINUS (298) 37


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8 9, en la derecha: 2 3 4 6 7 8
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 10 11, en la derecha: 3 30
function (51)
    en la izquierda: 17, en la derecha: 6
$@3 (52)
    en la izquierda: 12, en la derecha: 17
$@4 (53)
    en la izquierda: 13, en la derecha: 17
$@5 (54)
    en la izquierda: 14, en la derecha: 17
$@6 (55)
    en la izquierda: 15, en la derecha: 17
$@7 (56)
    en la izquierda: 16, en la derecha: 17
params (57)
    en la izquierda: 19 20 22 23 24, en la derecha: 17 19 20 22 23
$@8 (58)
    en la izquierda: 18, en la derecha: 19
$@9 (59)
    en la izquierda: 21, en la derecha: 22
codeSet (60)
    en la izquierda: 25 26 27 28, en la derecha: 17 25 26 27 70 75
    80
instruction (61)
    en la izquierda: 29 30 31 32 33 34, en la derecha: 25
assignation (62)
    en la izquierda: 35 36 37 38 39 40, en la derecha: 4 29
functionCallParams (63)
    en la izquierda: 41 42 43, en la derecha: 42 50 64
aritmeticOperation (64)
    en la izquierda: 44 45 46 47 48 50 51 52 53, en la derecha: 38
    40 41 42 44 45 46 47 48 62 66
$@10 (65)
    en la izquierda: 49, en la derecha: 50
return (66)
    en la izquierda: 56 59 62 64, en la derecha: 31
$@11 (67)
    en la izquierda: 54, en la derecha: 56
$@12 (68)
    en la izquierda: 55, en la derecha: 56
$@13 (69)
    en la izquierda: 57, en la derecha: 59
$@14 (70)
    en la izquierda: 58, en la derecha: 59
$@15 (71)
    en la izquierda: 60, en la derecha: 62
$@16 (72)
    en la izquierda: 61, en la derecha: 62
$@17 (73)
    en la izquierda: 63, en la derecha: 64
print (74)
    en la izquierda: 65 66, en la derecha: 8 32
else (75)
    en la izquierda: 70 71, en la derecha: 75
$@18 (76)
    en la izquierda: 67, en la derecha: 70
$@19 (77)
    en la izquierda: 68, en la derecha: 70
$@20 (78)
    en la izquierda: 69, en la derecha: 70
controlStructure (79)
    en la izquierda: 75 80, en la derecha: 26
$@21 (80)
    en la izquierda: 72, en la derecha: 75
$@22 (81)
    en la izquierda: 73, en la derecha: 75
$@23 (82)
    en la izquierda: 74, en la derecha: 75
$@24 (83)
    en la izquierda: 76, en la derecha: 80
$@25 (84)
    en la izquierda: 77, en la derecha: 80
$@26 (85)
    en la izquierda: 78, en la derecha: 80
$@27 (86)
    en la izquierda: 79, en la derecha: 80
logicalOperation (87)
    en la izquierda: 81 82 83 84, en la derecha: 75 80
logicalOperator (88)
    en la izquierda: 85 86 87 88 89 90, en la derecha: 81 82 83 84


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 8
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 13


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 14
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 6

   35 assignation: ID . ASSIGN INT_VAL
   36            | ID . PLUSPLUS
   37            | ID . MINUSMINUS
   38            | ID . ASSIGN aritmeticOperation
   39            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   40            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    ASSIGN               desplazar e ir al estado 15
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 16
    PLUSPLUS             desplazar e ir al estado 17
    MINUSMINUS           desplazar e ir al estado 18


Estado 7

   65 print: PRINT . PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   66      | PRINT . PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 19


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 20

    function  ir al estado 21


Estado 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 22


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 23


Estado 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 24


Estado 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 25

    $default  reduce usando la regla 10 (declaration)


Estado 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 15

   35 assignation: ID ASSIGN . INT_VAL
   38            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 29


Estado 16

   39 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   40            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    INT_VAL  desplazar e ir al estado 30


Estado 17

   36 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 36 (assignation)


Estado 18

   37 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 37 (assignation)


Estado 19

   65 print: PRINT PARENTESIS_OPEN . QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   66      | PRINT PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    QUOTE            desplazar e ir al estado 32
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 33


Estado 20

   17 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 34


Estado 21

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 35
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 36
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 37
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 38
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 39


Estado 26

   35 assignation: ID ASSIGN INT_VAL .
   51 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 35 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 51 (aritmeticOperation)]
    $default            reduce usando la regla 51 (aritmeticOperation)


Estado 27

   48 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 40


Estado 28

   50 aritmeticOperation: ID . PARENTESIS_OPEN $@10 functionCallParams PARENTESIS_CLOSE
   52                   | ID .
   53                   | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 41
    PARENTESIS_OPEN      desplazar e ir al estado 42

    $default  reduce usando la regla 52 (aritmeticOperation)


Estado 29

   38 assignation: ID ASSIGN aritmeticOperation .
   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 38 (assignation)


Estado 30

   39 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   40            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 47


Estado 31

   51 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 51 (aritmeticOperation)


Estado 32

   65 print: PRINT PARENTESIS_OPEN QUOTE . STRING_VAL QUOTE PARENTESIS_CLOSE

    STRING_VAL  desplazar e ir al estado 48


Estado 33

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation
   66 print: PRINT PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 43
    SUBSTRACT         desplazar e ir al estado 44
    PRODUCT           desplazar e ir al estado 45
    DIVIDE            desplazar e ir al estado 46
    PARENTESIS_CLOSE  desplazar e ir al estado 49


Estado 34

   17 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@3)

    $@3  ir al estado 50


Estado 35

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 36

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 37

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 38

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce usando la regla 8 (root)


Estado 39

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 51


Estado 40

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation
   48                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 43
    SUBSTRACT         desplazar e ir al estado 44
    PRODUCT           desplazar e ir al estado 45
    DIVIDE            desplazar e ir al estado 46
    PARENTESIS_CLOSE  desplazar e ir al estado 52


Estado 41

   53 aritmeticOperation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 53


Estado 42

   50 aritmeticOperation: ID PARENTESIS_OPEN . $@10 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 49 ($@10)

    $@10  ir al estado 54


Estado 43

   44 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 55


Estado 44

   45 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 56


Estado 45

   46 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 57


Estado 46

   47 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 58


Estado 47

   39 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL
   40            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 59


Estado 48

   65 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL . QUOTE PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 60


Estado 49

   66 print: PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 66 (print)


Estado 50

   17 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 61


Estado 51

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 11 (declaration)


Estado 52

   48 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 48 (aritmeticOperation)


Estado 53

   53 aritmeticOperation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 62


Estado 54

   50 aritmeticOperation: ID PARENTESIS_OPEN $@10 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 43 (functionCallParams)

    functionCallParams  ir al estado 63
    aritmeticOperation  ir al estado 64


Estado 55

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   44                   | aritmeticOperation SUM aritmeticOperation .
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 45
    DIVIDE   desplazar e ir al estado 46

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 56

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   45                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 45
    DIVIDE   desplazar e ir al estado 46

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 57

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   46                   | aritmeticOperation PRODUCT aritmeticOperation .
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 46 (aritmeticOperation)


Estado 58

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation
   47                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 47 (aritmeticOperation)


Estado 59

   39 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL
   40            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 65
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 66


Estado 60

   65 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 67


Estado 61

   17 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@4)

    $@4  ir al estado 68


Estado 62

   53 aritmeticOperation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 53 (aritmeticOperation)


Estado 63

   50 aritmeticOperation: ID PARENTESIS_OPEN $@10 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 69


Estado 64

   41 functionCallParams: aritmeticOperation .
   42                   | aritmeticOperation . COMMA functionCallParams
   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46
    COMMA      desplazar e ir al estado 70

    $default  reduce usando la regla 41 (functionCallParams)


Estado 65

   39 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .
   51 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 39 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 51 (aritmeticOperation)]
    $default            reduce usando la regla 51 (aritmeticOperation)


Estado 66

   40 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation .
   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 40 (assignation)


Estado 67

   65 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE .

    $default  reduce usando la regla 65 (print)


Estado 68

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 24 (params)

    params  ir al estado 73


Estado 69

   50 aritmeticOperation: ID PARENTESIS_OPEN $@10 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 50 (aritmeticOperation)


Estado 70

   42 functionCallParams: aritmeticOperation COMMA . functionCallParams

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 43 (functionCallParams)

    functionCallParams  ir al estado 74
    aritmeticOperation  ir al estado 64


Estado 71

   19 params: INT_TYPE . ID $@8 params
   22       | INT_TYPE . ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@9 params

    ID  desplazar e ir al estado 75


Estado 72

   20 params: COMMA . INT_TYPE ID params
   23       | COMMA . INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    INT_TYPE  desplazar e ir al estado 76


Estado 73

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@5)

    $@5  ir al estado 77


Estado 74

   42 functionCallParams: aritmeticOperation COMMA functionCallParams .

    $default  reduce usando la regla 42 (functionCallParams)


Estado 75

   19 params: INT_TYPE ID . $@8 params
   22       | INT_TYPE ID . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@9 params

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 78

    $default  reduce usando la regla 18 ($@8)

    $@8  ir al estado 79


Estado 76

   20 params: COMMA INT_TYPE . ID params
   23       | COMMA INT_TYPE . ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    ID  desplazar e ir al estado 80


Estado 77

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 81


Estado 78

   22 params: INT_TYPE ID SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE $@9 params

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 82


Estado 79

   19 params: INT_TYPE ID $@8 . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 24 (params)

    params  ir al estado 83


Estado 80

   20 params: COMMA INT_TYPE ID . params
   23       | COMMA INT_TYPE ID . SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params

    INT_TYPE             desplazar e ir al estado 71
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 84
    COMMA                desplazar e ir al estado 72

    $default  reduce usando la regla 24 (params)

    params  ir al estado 85


Estado 81

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 15 ($@6)

    $@6  ir al estado 86


Estado 82

   22 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE . $@9 params

    $default  reduce usando la regla 21 ($@9)

    $@9  ir al estado 87


Estado 83

   19 params: INT_TYPE ID $@8 params .

    $default  reduce usando la regla 19 (params)


Estado 84

   23 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN . SQUARE_BRACKET_CLOSE params

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 88


Estado 85

   20 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 20 (params)


Estado 86

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 89


Estado 87

   22 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@9 . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 24 (params)

    params  ir al estado 90


Estado 88

   23 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE . params

    INT_TYPE  desplazar e ir al estado 71
    COMMA     desplazar e ir al estado 72

    $default  reduce usando la regla 24 (params)

    params  ir al estado 91


Estado 89

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 92


Estado 90

   22 params: INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE $@9 params .

    $default  reduce usando la regla 22 (params)


Estado 91

   23 params: COMMA INT_TYPE ID SQUARE_BRACKET_OPEN SQUARE_BRACKET_CLOSE params .

    $default  reduce usando la regla 23 (params)


Estado 92

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 99
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 93

   33 instruction: CONTINUE .

    $default  reduce usando la regla 33 (instruction)


Estado 94

   34 instruction: BREAK .

    $default  reduce usando la regla 34 (instruction)


Estado 95

   56 return: RETURN . ID $@11 $@12
   59       | RETURN . INT_VAL $@13 $@14
   62       | RETURN . aritmeticOperation $@15 $@16
   64       | RETURN . ID PARENTESIS_OPEN $@17 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 106
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 107

    aritmeticOperation  ir al estado 108


Estado 96

   75 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    PARENTESIS_OPEN  desplazar e ir al estado 109


Estado 97

   27 codeSet: END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 110
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 98

   30 instruction: declaration .

    $default  reduce usando la regla 30 (instruction)


Estado 99

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 16 ($@7)

    $@7  ir al estado 111


Estado 100

   25 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 112


Estado 101

   29 instruction: assignation .

    $default  reduce usando la regla 29 (instruction)


Estado 102

   31 instruction: return .

    $default  reduce usando la regla 31 (instruction)


Estado 103

   32 instruction: print .

    $default  reduce usando la regla 32 (instruction)


Estado 104

   26 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 113


Estado 105

   80 controlStructure: $@24 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 114


Estado 106

   51 aritmeticOperation: INT_VAL .
   59 return: RETURN INT_VAL . $@13 $@14

    END_OF_INSTRUCTION  reduce usando la regla 51 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 57 ($@13)]
    $default            reduce usando la regla 51 (aritmeticOperation)

    $@13  ir al estado 115


Estado 107

   50 aritmeticOperation: ID . PARENTESIS_OPEN $@10 functionCallParams PARENTESIS_CLOSE
   52                   | ID .
   53                   | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   56 return: RETURN ID . $@11 $@12
   64       | RETURN ID . PARENTESIS_OPEN $@17 functionCallParams PARENTESIS_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 41
    PARENTESIS_OPEN      desplazar e ir al estado 116

    END_OF_INSTRUCTION  reduce usando la regla 52 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 54 ($@11)]
    $default            reduce usando la regla 52 (aritmeticOperation)

    $@11  ir al estado 117


Estado 108

   44 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   45                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   46                   | aritmeticOperation . PRODUCT aritmeticOperation
   47                   | aritmeticOperation . DIVIDE aritmeticOperation
   62 return: RETURN aritmeticOperation . $@15 $@16

    SUM        desplazar e ir al estado 43
    SUBSTRACT  desplazar e ir al estado 44
    PRODUCT    desplazar e ir al estado 45
    DIVIDE     desplazar e ir al estado 46

    $default  reduce usando la regla 60 ($@15)

    $@15  ir al estado 118


Estado 109

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    INT_VAL  desplazar e ir al estado 119
    ID       desplazar e ir al estado 120

    logicalOperation  ir al estado 121


Estado 110

   27 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 27 (codeSet)


Estado 111

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 122


Estado 112

   25 codeSet: instruction END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 123
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 113

   26 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 124
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 114

   80 controlStructure: $@24 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 125


Estado 115

   59 return: RETURN INT_VAL $@13 . $@14

    $default  reduce usando la regla 58 ($@14)

    $@14  ir al estado 126


Estado 116

   50 aritmeticOperation: ID PARENTESIS_OPEN . $@10 functionCallParams PARENTESIS_CLOSE
   64 return: RETURN ID PARENTESIS_OPEN . $@17 functionCallParams PARENTESIS_CLOSE

    INT_VAL           reduce usando la regla 49 ($@10)
    INT_VAL           [reduce usando la regla 63 ($@17)]
    PARENTESIS_OPEN   reduce usando la regla 49 ($@10)
    PARENTESIS_OPEN   [reduce usando la regla 63 ($@17)]
    PARENTESIS_CLOSE  reduce usando la regla 49 ($@10)
    PARENTESIS_CLOSE  [reduce usando la regla 63 ($@17)]
    ID                reduce usando la regla 49 ($@10)
    ID                [reduce usando la regla 63 ($@17)]
    $default          reduce usando la regla 49 ($@10)

    $@10  ir al estado 54
    $@17  ir al estado 127


Estado 117

   56 return: RETURN ID $@11 . $@12

    $default  reduce usando la regla 55 ($@12)

    $@12  ir al estado 128


Estado 118

   62 return: RETURN aritmeticOperation $@15 . $@16

    $default  reduce usando la regla 61 ($@16)

    $@16  ir al estado 129


Estado 119

   83 logicalOperation: INT_VAL . logicalOperator INT_VAL
   84                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 130
    NOT_EQUALS      desplazar e ir al estado 131
    GREATER         desplazar e ir al estado 132
    GREATER_EQUALS  desplazar e ir al estado 133
    LESS            desplazar e ir al estado 134
    LESS_EQUALS     desplazar e ir al estado 135

    logicalOperator  ir al estado 136


Estado 120

   81 logicalOperation: ID . logicalOperator ID
   82                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 130
    NOT_EQUALS      desplazar e ir al estado 131
    GREATER         desplazar e ir al estado 132
    GREATER_EQUALS  desplazar e ir al estado 133
    LESS            desplazar e ir al estado 134
    LESS_EQUALS     desplazar e ir al estado 135

    logicalOperator  ir al estado 137


Estado 121

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    PARENTESIS_CLOSE  desplazar e ir al estado 138


Estado 122

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 139


Estado 123

   25 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 25 (codeSet)


Estado 124

   26 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 26 (codeSet)


Estado 125

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 119
    ID       desplazar e ir al estado 120

    logicalOperation  ir al estado 140


Estado 126

   59 return: RETURN INT_VAL $@13 $@14 .

    $default  reduce usando la regla 59 (return)


Estado 127

   64 return: RETURN ID PARENTESIS_OPEN $@17 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    $default  reduce usando la regla 43 (functionCallParams)

    functionCallParams  ir al estado 141
    aritmeticOperation  ir al estado 64


Estado 128

   56 return: RETURN ID $@11 $@12 .

    $default  reduce usando la regla 56 (return)


Estado 129

   62 return: RETURN aritmeticOperation $@15 $@16 .

    $default  reduce usando la regla 62 (return)


Estado 130

   85 logicalOperator: EQUALS .

    $default  reduce usando la regla 85 (logicalOperator)


Estado 131

   86 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 86 (logicalOperator)


Estado 132

   89 logicalOperator: GREATER .

    $default  reduce usando la regla 89 (logicalOperator)


Estado 133

   90 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 90 (logicalOperator)


Estado 134

   87 logicalOperator: LESS .

    $default  reduce usando la regla 87 (logicalOperator)


Estado 135

   88 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 88 (logicalOperator)


Estado 136

   83 logicalOperation: INT_VAL logicalOperator . INT_VAL
   84                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 142
    ID       desplazar e ir al estado 143


Estado 137

   81 logicalOperation: ID logicalOperator . ID
   82                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 144
    ID       desplazar e ir al estado 145


Estado 138

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    $default  reduce usando la regla 72 ($@21)

    $@21  ir al estado 146


Estado 139

   17 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet $@7 CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 17 (function)


Estado 140

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 77 ($@25)

    $@25  ir al estado 147


Estado 141

   64 return: RETURN ID PARENTESIS_OPEN $@17 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 148


Estado 142

   83 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 83 (logicalOperation)


Estado 143

   84 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 84 (logicalOperation)


Estado 144

   82 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 82 (logicalOperation)


Estado 145

   81 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 81 (logicalOperation)


Estado 146

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 149


Estado 147

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 150


Estado 148

   64 return: RETURN ID PARENTESIS_OPEN $@17 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 64 (return)


Estado 149

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    END_OF_INSTRUCTION  desplazar e ir al estado 151


Estado 150

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 152


Estado 151

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@22 codeSet CURLY_BRACKET_CLOSE $@23 else

    $default  reduce usando la regla 73 ($@22)

    $@22  ir al estado 153


Estado 152

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 154


Estado 153

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 . codeSet CURLY_BRACKET_CLOSE $@23 else

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 155
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 154

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@26 codeSet $@27 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 78 ($@26)

    $@26  ir al estado 156


Estado 155

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet . CURLY_BRACKET_CLOSE $@23 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 157


Estado 156

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 . codeSet $@27 CURLY_BRACKET_CLOSE

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 158
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 157

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE . $@23 else

    $default  reduce usando la regla 74 ($@23)

    $@23  ir al estado 159


Estado 158

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet . $@27 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 79 ($@27)

    $@27  ir al estado 160


Estado 159

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 . else

    END_OF_INSTRUCTION  reduce usando la regla 71 (else)
    $default            reduce usando la regla 67 ($@18)

    else  ir al estado 161
    $@18  ir al estado 162


Estado 160

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 163


Estado 161

   75 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@21 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@22 codeSet CURLY_BRACKET_CLOSE $@23 else .

    $default  reduce usando la regla 75 (controlStructure)


Estado 162

   70 else: $@18 . ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 164


Estado 163

   80 controlStructure: $@24 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@25 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@26 codeSet $@27 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 80 (controlStructure)


Estado 164

   70 else: $@18 ELSE_CLAUSE . $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 68 ($@19)

    $@19  ir al estado 165


Estado 165

   70 else: $@18 ELSE_CLAUSE $@19 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 166


Estado 166

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 167


Estado 167

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@20 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 69 ($@20)

    $@20  ir al estado 168


Estado 168

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 . codeSet CURLY_BRACKET_CLOSE

    CONTINUE            desplazar e ir al estado 93
    BREAK               desplazar e ir al estado 94
    RETURN              desplazar e ir al estado 95
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 96
    END_OF_INSTRUCTION  desplazar e ir al estado 97
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 76 ($@24)
    $default      reduce usando la regla 28 (codeSet)

    declaration       ir al estado 98
    codeSet           ir al estado 169
    instruction       ir al estado 100
    assignation       ir al estado 101
    return            ir al estado 102
    print             ir al estado 103
    controlStructure  ir al estado 104
    $@24              ir al estado 105


Estado 169

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 170


Estado 170

   70 else: $@18 ELSE_CLAUSE $@19 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@20 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 70 (else)
