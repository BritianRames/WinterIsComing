No terminales inútiles en la gramática

   printableElement
   text


Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG
   ' '


Reglas inútiles en la gramática

   87 printableElement: ID
   88                 | QUOTE text QUOTE
   89                 | printableElement SUM printableElement
   90                 | INT_VAL

   91 text: STRING_VAL
   92     | ' '


La regla es inútil debido a los conflictos

   50 $@8: %empty

   53 $@10: %empty

   59 $@14: %empty


Estado 26 conflictos: 1 reducción/reducción
Estado 101 conflictos: 1 reducción/reducción
Estado 102 conflictos: 1 reducción/reducción
Estado 111 conflictos: 3 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   17 params: INT_TYPE ID params
   18       | COMMA INT_TYPE ID params
   19       | %empty

   20 codeSet: instruction END_OF_INSTRUCTION codeSet
   21        | controlStructure END_OF_INSTRUCTION codeSet
   22        | END_OF_INSTRUCTION codeSet
   23        | %empty

   24 instruction: assignation
   25            | declaration
   26            | return
   27            | print
   28            | BREAK

   29 assignation: ID ASSIGN INT_VAL
   30            | ID PLUSPLUS
   31            | ID MINUSMINUS
   32            | ID ASSIGN aritmeticOperation
   33            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   36 functionCallParams: INT_VAL
   37                   | ID
   38                   | INT_VAL COMMA functionCallParams
   39                   | ID COMMA functionCallParams
   40                   | %empty

   41 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   42                   | aritmeticOperation SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation PRODUCT aritmeticOperation
   44                   | aritmeticOperation DIVIDE aritmeticOperation
   45                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   46 @7: %empty

   47 aritmeticOperation: ID PARENTESIS_OPEN @7 functionCallParams PARENTESIS_CLOSE
   48                   | INT_VAL
   49                   | ID

   50 $@8: %empty

   51 $@9: %empty

   52 return: RETURN ID $@8 $@9

   53 $@10: %empty

   54 $@11: %empty

   55 return: RETURN INT_VAL $@10 $@11

   56 $@12: %empty

   57 $@13: %empty

   58 return: RETURN aritmeticOperation $@12 $@13

   59 $@14: %empty

   60 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

   61 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   62      | PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   63 $@15: %empty

   64 $@16: %empty

   65 $@17: %empty

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE
   67     | %empty

   68 $@18: %empty

   69 $@19: %empty

   70 $@20: %empty

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

   72 $@21: %empty

   73 $@22: %empty

   74 $@23: %empty

   75 $@24: %empty

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

   77 logicalOperation: ID logicalOperator ID
   78                 | ID logicalOperator INT_VAL
   79                 | INT_VAL logicalOperator INT_VAL
   80                 | INT_VAL logicalOperator ID

   81 logicalOperator: EQUALS
   82                | NOT_EQUALS
   83                | LESS
   84                | LESS_EQUALS
   85                | GREATER
   86                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32)
error (256)
CONTINUE (258)
BREAK (259) 28
RETURN (260) 52 55 58 60
FUN (261) 16
INT_VAL (262) 11 29 33 34 35 36 38 48 55 78 79 80
STRING_VAL (263) 61
INT_TYPE (264) 10 11 17 18
STRING_TYPE (265)
ASSIGN (266) 29 32 33 34 35
SUM (267) 41
SUBSTRACT (268) 42
PRODUCT (269) 43
DIVIDE (270) 44
AND (271)
OR (272)
NOT (273)
EQUALS (274) 81
NOT_EQUALS (275) 82
GREATER (276) 85
GREATER_EQUALS (277) 86
LESS (278) 83
LESS_EQUALS (279) 84
IF_CLAUSE (280) 71
WHILE_CLAUSE (281) 76
ELSE_CLAUSE (282) 66
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 11 33 34 35
SQUARE_BRACKET_CLOSE (285) 11 33 34 35
CURLY_BRACKET_OPEN (286) 16 66 71 76
CURLY_BRACKET_CLOSE (287) 16 66 71 76
COMMA (288) 18 38 39
PARENTESIS_OPEN (289) 16 45 47 60 61 62 71 76
PARENTESIS_CLOSE (290) 16 45 47 60 61 62 71 76
END_OF_INSTRUCTION (291) 3 4 7 8 16 20 21 22 66 71 76
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 61
ID (295) 10 11 16 17 18 29 30 31 32 33 34 35 37 39 47 49 52 60 77 78
    80
PRINT (296) 61 62
PLUSPLUS (297) 30
MINUSMINUS (298) 31


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8 9, en la derecha: 2 3 4 6 7 8
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 10 11, en la derecha: 3 25
function (51)
    en la izquierda: 16, en la derecha: 6
$@3 (52)
    en la izquierda: 12, en la derecha: 16
$@4 (53)
    en la izquierda: 13, en la derecha: 16
$@5 (54)
    en la izquierda: 14, en la derecha: 16
$@6 (55)
    en la izquierda: 15, en la derecha: 16
params (56)
    en la izquierda: 17 18 19, en la derecha: 16 17 18
codeSet (57)
    en la izquierda: 20 21 22 23, en la derecha: 16 20 21 22 66 71
    76
instruction (58)
    en la izquierda: 24 25 26 27 28, en la derecha: 20
assignation (59)
    en la izquierda: 29 30 31 32 33 34 35, en la derecha: 4 24
functionCallParams (60)
    en la izquierda: 36 37 38 39 40, en la derecha: 38 39 47 60
aritmeticOperation (61)
    en la izquierda: 41 42 43 44 45 47 48 49, en la derecha: 32 41
    42 43 44 45 58 62
@7 (62)
    en la izquierda: 46, en la derecha: 47
return (63)
    en la izquierda: 52 55 58 60, en la derecha: 26
$@8 (64)
    en la izquierda: 50, en la derecha: 52
$@9 (65)
    en la izquierda: 51, en la derecha: 52
$@10 (66)
    en la izquierda: 53, en la derecha: 55
$@11 (67)
    en la izquierda: 54, en la derecha: 55
$@12 (68)
    en la izquierda: 56, en la derecha: 58
$@13 (69)
    en la izquierda: 57, en la derecha: 58
$@14 (70)
    en la izquierda: 59, en la derecha: 60
print (71)
    en la izquierda: 61 62, en la derecha: 8 27
else (72)
    en la izquierda: 66 67, en la derecha: 71
$@15 (73)
    en la izquierda: 63, en la derecha: 66
$@16 (74)
    en la izquierda: 64, en la derecha: 66
$@17 (75)
    en la izquierda: 65, en la derecha: 66
controlStructure (76)
    en la izquierda: 71 76, en la derecha: 21
$@18 (77)
    en la izquierda: 68, en la derecha: 71
$@19 (78)
    en la izquierda: 69, en la derecha: 71
$@20 (79)
    en la izquierda: 70, en la derecha: 71
$@21 (80)
    en la izquierda: 72, en la derecha: 76
$@22 (81)
    en la izquierda: 73, en la derecha: 76
$@23 (82)
    en la izquierda: 74, en la derecha: 76
$@24 (83)
    en la izquierda: 75, en la derecha: 76
logicalOperation (84)
    en la izquierda: 77 78 79 80, en la derecha: 71 76
logicalOperator (85)
    en la izquierda: 81 82 83 84 85 86, en la derecha: 77 78 79 80


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 8
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 13


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 14
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 6

   29 assignation: ID . ASSIGN INT_VAL
   30            | ID . PLUSPLUS
   31            | ID . MINUSMINUS
   32            | ID . ASSIGN aritmeticOperation
   33            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               desplazar e ir al estado 15
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 16
    PLUSPLUS             desplazar e ir al estado 17
    MINUSMINUS           desplazar e ir al estado 18


Estado 7

   61 print: PRINT . PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   62      | PRINT . PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 19


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 20

    function  ir al estado 21


Estado 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 22


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 23


Estado 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 24


Estado 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 25

    $default  reduce usando la regla 10 (declaration)


Estado 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 15

   29 assignation: ID ASSIGN . INT_VAL
   32            | ID ASSIGN . aritmeticOperation
   35            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 29


Estado 16

   33 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  desplazar e ir al estado 30


Estado 17

   30 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 30 (assignation)


Estado 18

   31 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 31 (assignation)


Estado 19

   61 print: PRINT PARENTESIS_OPEN . QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   62      | PRINT PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    QUOTE            desplazar e ir al estado 32
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 34


Estado 20

   16 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 35


Estado 21

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 36
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 37
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 38
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 39
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 40


Estado 26

   29 assignation: ID ASSIGN INT_VAL .
   48 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 29 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 48 (aritmeticOperation)]
    $default            reduce usando la regla 48 (aritmeticOperation)


Estado 27

   45 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 41


Estado 28

   35 assignation: ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   47 aritmeticOperation: ID . PARENTESIS_OPEN @7 functionCallParams PARENTESIS_CLOSE
   49                   | ID .

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 42
    PARENTESIS_OPEN      desplazar e ir al estado 43

    $default  reduce usando la regla 49 (aritmeticOperation)


Estado 29

   32 assignation: ID ASSIGN aritmeticOperation .
   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 44
    SUBSTRACT  desplazar e ir al estado 45
    PRODUCT    desplazar e ir al estado 46
    DIVIDE     desplazar e ir al estado 47

    $default  reduce usando la regla 32 (assignation)


Estado 30

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 48


Estado 31

   48 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 48 (aritmeticOperation)


Estado 32

   61 print: PRINT PARENTESIS_OPEN QUOTE . STRING_VAL QUOTE PARENTESIS_CLOSE

    STRING_VAL  desplazar e ir al estado 49


Estado 33

   47 aritmeticOperation: ID . PARENTESIS_OPEN @7 functionCallParams PARENTESIS_CLOSE
   49                   | ID .

    PARENTESIS_OPEN  desplazar e ir al estado 43

    $default  reduce usando la regla 49 (aritmeticOperation)


Estado 34

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation
   62 print: PRINT PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 44
    SUBSTRACT         desplazar e ir al estado 45
    PRODUCT           desplazar e ir al estado 46
    DIVIDE            desplazar e ir al estado 47
    PARENTESIS_CLOSE  desplazar e ir al estado 50


Estado 35

   16 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@3)

    $@3  ir al estado 51


Estado 36

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 37

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 38

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 39

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce usando la regla 8 (root)


Estado 40

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 52


Estado 41

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation
   45                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 44
    SUBSTRACT         desplazar e ir al estado 45
    PRODUCT           desplazar e ir al estado 46
    DIVIDE            desplazar e ir al estado 47
    PARENTESIS_CLOSE  desplazar e ir al estado 53


Estado 42

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 54


Estado 43

   47 aritmeticOperation: ID PARENTESIS_OPEN . @7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 46 (@7)

    @7  ir al estado 55


Estado 44

   41 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 56


Estado 45

   42 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 57


Estado 46

   43 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 58


Estado 47

   44 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 31
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 33

    aritmeticOperation  ir al estado 59


Estado 48

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  desplazar e ir al estado 60


Estado 49

   61 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL . QUOTE PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 61


Estado 50

   62 print: PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 62 (print)


Estado 51

   16 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 62


Estado 52

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 11 (declaration)


Estado 53

   45 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 54

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 63


Estado 55

   47 aritmeticOperation: ID PARENTESIS_OPEN @7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 64
    ID       desplazar e ir al estado 65

    $default  reduce usando la regla 40 (functionCallParams)

    functionCallParams  ir al estado 66


Estado 56

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation SUM aritmeticOperation .
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 46
    DIVIDE   desplazar e ir al estado 47

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 57

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 46
    DIVIDE   desplazar e ir al estado 47

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 58

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation PRODUCT aritmeticOperation .
   44                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 59

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation
   44                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 60

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  desplazar e ir al estado 67
    ID       desplazar e ir al estado 68


Estado 61

   61 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 69


Estado 62

   16 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@4)

    $@4  ir al estado 70


Estado 63

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 35 (assignation)


Estado 64

   36 functionCallParams: INT_VAL .
   38                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 71

    $default  reduce usando la regla 36 (functionCallParams)


Estado 65

   37 functionCallParams: ID .
   39                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 72

    $default  reduce usando la regla 37 (functionCallParams)


Estado 66

   47 aritmeticOperation: ID PARENTESIS_OPEN @7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 73


Estado 67

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce usando la regla 34 (assignation)


Estado 68

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce usando la regla 33 (assignation)


Estado 69

   61 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE .

    $default  reduce usando la regla 61 (print)


Estado 70

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 74
    COMMA     desplazar e ir al estado 75

    $default  reduce usando la regla 19 (params)

    params  ir al estado 76


Estado 71

   38 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 64
    ID       desplazar e ir al estado 65

    $default  reduce usando la regla 40 (functionCallParams)

    functionCallParams  ir al estado 77


Estado 72

   39 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 64
    ID       desplazar e ir al estado 65

    $default  reduce usando la regla 40 (functionCallParams)

    functionCallParams  ir al estado 78


Estado 73

   47 aritmeticOperation: ID PARENTESIS_OPEN @7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 47 (aritmeticOperation)


Estado 74

   17 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 79


Estado 75

   18 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 80


Estado 76

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@5)

    $@5  ir al estado 81


Estado 77

   38 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 38 (functionCallParams)


Estado 78

   39 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 39 (functionCallParams)


Estado 79

   17 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 74
    COMMA     desplazar e ir al estado 75

    $default  reduce usando la regla 19 (params)

    params  ir al estado 82


Estado 80

   18 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 83


Estado 81

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 84


Estado 82

   17 params: INT_TYPE ID params .

    $default  reduce usando la regla 17 (params)


Estado 83

   18 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 74
    COMMA     desplazar e ir al estado 75

    $default  reduce usando la regla 19 (params)

    params  ir al estado 85


Estado 84

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 15 ($@6)

    $@6  ir al estado 86


Estado 85

   18 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 18 (params)


Estado 86

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 87


Estado 87

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 88


Estado 88

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 94
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 89

   28 instruction: BREAK .

    $default  reduce usando la regla 28 (instruction)


Estado 90

   52 return: RETURN . ID $@8 $@9
   55       | RETURN . INT_VAL $@10 $@11
   58       | RETURN . aritmeticOperation $@12 $@13
   60       | RETURN . ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 101
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 102

    aritmeticOperation  ir al estado 103


Estado 91

   71 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    PARENTESIS_OPEN  desplazar e ir al estado 104


Estado 92

   22 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 105
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 93

   25 instruction: declaration .

    $default  reduce usando la regla 25 (instruction)


Estado 94

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 106


Estado 95

   20 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 107


Estado 96

   24 instruction: assignation .

    $default  reduce usando la regla 24 (instruction)


Estado 97

   26 instruction: return .

    $default  reduce usando la regla 26 (instruction)


Estado 98

   27 instruction: print .

    $default  reduce usando la regla 27 (instruction)


Estado 99

   21 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 108


Estado 100

   76 controlStructure: $@21 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 109


Estado 101

   48 aritmeticOperation: INT_VAL .
   55 return: RETURN INT_VAL . $@10 $@11

    END_OF_INSTRUCTION  reduce usando la regla 48 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 53 ($@10)]
    $default            reduce usando la regla 48 (aritmeticOperation)

    $@10  ir al estado 110


Estado 102

   47 aritmeticOperation: ID . PARENTESIS_OPEN @7 functionCallParams PARENTESIS_CLOSE
   49                   | ID .
   52 return: RETURN ID . $@8 $@9
   60       | RETURN ID . PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 111

    END_OF_INSTRUCTION  reduce usando la regla 49 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 50 ($@8)]
    $default            reduce usando la regla 49 (aritmeticOperation)

    $@8  ir al estado 112


Estado 103

   41 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   42                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   43                   | aritmeticOperation . PRODUCT aritmeticOperation
   44                   | aritmeticOperation . DIVIDE aritmeticOperation
   58 return: RETURN aritmeticOperation . $@12 $@13

    SUM        desplazar e ir al estado 44
    SUBSTRACT  desplazar e ir al estado 45
    PRODUCT    desplazar e ir al estado 46
    DIVIDE     desplazar e ir al estado 47

    $default  reduce usando la regla 56 ($@12)

    $@12  ir al estado 113


Estado 104

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    INT_VAL  desplazar e ir al estado 114
    ID       desplazar e ir al estado 115

    logicalOperation  ir al estado 116


Estado 105

   22 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 22 (codeSet)


Estado 106

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 117


Estado 107

   20 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 118
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 108

   21 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 119
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 109

   76 controlStructure: $@21 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 120


Estado 110

   55 return: RETURN INT_VAL $@10 . $@11

    $default  reduce usando la regla 54 ($@11)

    $@11  ir al estado 121


Estado 111

   47 aritmeticOperation: ID PARENTESIS_OPEN . @7 functionCallParams PARENTESIS_CLOSE
   60 return: RETURN ID PARENTESIS_OPEN . $@14 functionCallParams PARENTESIS_CLOSE

    INT_VAL           reduce usando la regla 46 (@7)
    INT_VAL           [reduce usando la regla 59 ($@14)]
    PARENTESIS_CLOSE  reduce usando la regla 46 (@7)
    PARENTESIS_CLOSE  [reduce usando la regla 59 ($@14)]
    ID                reduce usando la regla 46 (@7)
    ID                [reduce usando la regla 59 ($@14)]
    $default          reduce usando la regla 46 (@7)

    @7    ir al estado 55
    $@14  ir al estado 122


Estado 112

   52 return: RETURN ID $@8 . $@9

    $default  reduce usando la regla 51 ($@9)

    $@9  ir al estado 123


Estado 113

   58 return: RETURN aritmeticOperation $@12 . $@13

    $default  reduce usando la regla 57 ($@13)

    $@13  ir al estado 124


Estado 114

   79 logicalOperation: INT_VAL . logicalOperator INT_VAL
   80                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 125
    NOT_EQUALS      desplazar e ir al estado 126
    GREATER         desplazar e ir al estado 127
    GREATER_EQUALS  desplazar e ir al estado 128
    LESS            desplazar e ir al estado 129
    LESS_EQUALS     desplazar e ir al estado 130

    logicalOperator  ir al estado 131


Estado 115

   77 logicalOperation: ID . logicalOperator ID
   78                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 125
    NOT_EQUALS      desplazar e ir al estado 126
    GREATER         desplazar e ir al estado 127
    GREATER_EQUALS  desplazar e ir al estado 128
    LESS            desplazar e ir al estado 129
    LESS_EQUALS     desplazar e ir al estado 130

    logicalOperator  ir al estado 132


Estado 116

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    PARENTESIS_CLOSE  desplazar e ir al estado 133


Estado 117

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 16 (function)


Estado 118

   20 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 119

   21 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 21 (codeSet)


Estado 120

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 114
    ID       desplazar e ir al estado 115

    logicalOperation  ir al estado 134


Estado 121

   55 return: RETURN INT_VAL $@10 $@11 .

    $default  reduce usando la regla 55 (return)


Estado 122

   60 return: RETURN ID PARENTESIS_OPEN $@14 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 64
    ID       desplazar e ir al estado 65

    $default  reduce usando la regla 40 (functionCallParams)

    functionCallParams  ir al estado 135


Estado 123

   52 return: RETURN ID $@8 $@9 .

    $default  reduce usando la regla 52 (return)


Estado 124

   58 return: RETURN aritmeticOperation $@12 $@13 .

    $default  reduce usando la regla 58 (return)


Estado 125

   81 logicalOperator: EQUALS .

    $default  reduce usando la regla 81 (logicalOperator)


Estado 126

   82 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 82 (logicalOperator)


Estado 127

   85 logicalOperator: GREATER .

    $default  reduce usando la regla 85 (logicalOperator)


Estado 128

   86 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 86 (logicalOperator)


Estado 129

   83 logicalOperator: LESS .

    $default  reduce usando la regla 83 (logicalOperator)


Estado 130

   84 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 84 (logicalOperator)


Estado 131

   79 logicalOperation: INT_VAL logicalOperator . INT_VAL
   80                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 136
    ID       desplazar e ir al estado 137


Estado 132

   77 logicalOperation: ID logicalOperator . ID
   78                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 138
    ID       desplazar e ir al estado 139


Estado 133

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    $default  reduce usando la regla 68 ($@18)

    $@18  ir al estado 140


Estado 134

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 73 ($@22)

    $@22  ir al estado 141


Estado 135

   60 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 142


Estado 136

   79 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 79 (logicalOperation)


Estado 137

   80 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 80 (logicalOperation)


Estado 138

   78 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 78 (logicalOperation)


Estado 139

   77 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 77 (logicalOperation)


Estado 140

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 143


Estado 141

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 144


Estado 142

   60 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 60 (return)


Estado 143

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    END_OF_INSTRUCTION  desplazar e ir al estado 145


Estado 144

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 146


Estado 145

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    $default  reduce usando la regla 69 ($@19)

    $@19  ir al estado 147


Estado 146

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 148


Estado 147

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 . codeSet CURLY_BRACKET_CLOSE $@20 else

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 149
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 148

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 74 ($@23)

    $@23  ir al estado 150


Estado 149

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet . CURLY_BRACKET_CLOSE $@20 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 151


Estado 150

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 . codeSet $@24 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 152
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 151

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE . $@20 else

    $default  reduce usando la regla 70 ($@20)

    $@20  ir al estado 153


Estado 152

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet . $@24 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 75 ($@24)

    $@24  ir al estado 154


Estado 153

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 . else

    END_OF_INSTRUCTION  reduce usando la regla 67 (else)
    $default            reduce usando la regla 63 ($@15)

    else  ir al estado 155
    $@15  ir al estado 156


Estado 154

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 157


Estado 155

   71 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else .

    $default  reduce usando la regla 71 (controlStructure)


Estado 156

   66 else: $@15 . ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 158


Estado 157

   76 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 76 (controlStructure)


Estado 158

   66 else: $@15 ELSE_CLAUSE . $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 64 ($@16)

    $@16  ir al estado 159


Estado 159

   66 else: $@15 ELSE_CLAUSE $@16 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 160


Estado 160

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 161


Estado 161

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@17 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 65 ($@17)

    $@17  ir al estado 162


Estado 162

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 89
    RETURN              desplazar e ir al estado 90
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 91
    END_OF_INSTRUCTION  desplazar e ir al estado 92
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 72 ($@21)
    $default      reduce usando la regla 23 (codeSet)

    declaration       ir al estado 93
    codeSet           ir al estado 163
    instruction       ir al estado 95
    assignation       ir al estado 96
    return            ir al estado 97
    print             ir al estado 98
    controlStructure  ir al estado 99
    $@21              ir al estado 100


Estado 163

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 164


Estado 164

   66 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 66 (else)
