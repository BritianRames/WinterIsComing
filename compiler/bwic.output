Nonterminals useless in grammar

   printableElement
   text


Terminals unused in grammar

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG
   ' '


Rules useless in grammar

   85 printableElement: ID
   86                 | QUOTE text QUOTE
   87                 | printableElement SUM printableElement
   88                 | INT_VAL

   89 text: STRING_VAL
   90     | ' '


Rules useless in parser due to conflicts

   48 $@8: %empty

   51 $@10: %empty

   57 $@14: %empty


State 26 conflicts: 1 reduce/reduce
State 98 conflicts: 1 reduce/reduce
State 99 conflicts: 1 reduce/reduce
State 108 conflicts: 4 reduce/reduce


Grammar

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 $@5: %empty

   15 $@6: %empty

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   17 params: INT_TYPE ID params
   18       | COMMA INT_TYPE ID params
   19       | %empty

   20 codeSet: instruction END_OF_INSTRUCTION codeSet
   21        | controlStructure END_OF_INSTRUCTION codeSet
   22        | END_OF_INSTRUCTION codeSet
   23        | %empty

   24 instruction: assignation
   25            | declaration
   26            | return
   27            | print
   28            | BREAK

   29 assignation: ID ASSIGN INT_VAL
   30            | ID PLUSPLUS
   31            | ID MINUSMINUS
   32            | ID ASSIGN aritmeticOperation
   33            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   36 functionCallParams: aritmeticOperation
   37                   | aritmeticOperation COMMA functionCallParams
   38                   | %empty

   39 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   40                   | aritmeticOperation SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation PRODUCT aritmeticOperation
   42                   | aritmeticOperation DIVIDE aritmeticOperation
   43                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   44 $@7: %empty

   45 aritmeticOperation: ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   46                   | INT_VAL
   47                   | ID

   48 $@8: %empty

   49 $@9: %empty

   50 return: RETURN ID $@8 $@9

   51 $@10: %empty

   52 $@11: %empty

   53 return: RETURN INT_VAL $@10 $@11

   54 $@12: %empty

   55 $@13: %empty

   56 return: RETURN aritmeticOperation $@12 $@13

   57 $@14: %empty

   58 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

   59 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   60      | PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   61 $@15: %empty

   62 $@16: %empty

   63 $@17: %empty

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE
   65     | %empty

   66 $@18: %empty

   67 $@19: %empty

   68 $@20: %empty

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

   70 $@21: %empty

   71 $@22: %empty

   72 $@23: %empty

   73 $@24: %empty

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

   75 logicalOperation: ID logicalOperator ID
   76                 | ID logicalOperator INT_VAL
   77                 | INT_VAL logicalOperator INT_VAL
   78                 | INT_VAL logicalOperator ID

   79 logicalOperator: EQUALS
   80                | NOT_EQUALS
   81                | LESS
   82                | LESS_EQUALS
   83                | GREATER
   84                | GREATER_EQUALS


Terminals, with rules where they appear

$end (0) 0
' ' (32)
error (256)
CONTINUE <number> (258)
BREAK <number> (259) 28
RETURN <number> (260) 50 53 56 58
FUN <number> (261) 16
INT_VAL <number> (262) 11 29 33 34 35 46 53 76 77 78
STRING_VAL <string> (263) 59
INT_TYPE <number> (264) 10 11 17 18
STRING_TYPE <number> (265)
ASSIGN <number> (266) 29 32 33 34 35
SUM <number> (267) 39
SUBSTRACT <number> (268) 40
PRODUCT <number> (269) 41
DIVIDE <number> (270) 42
AND <number> (271)
OR <number> (272)
NOT <number> (273)
EQUALS <number> (274) 79
NOT_EQUALS <number> (275) 80
GREATER <number> (276) 83
GREATER_EQUALS <number> (277) 84
LESS <number> (278) 81
LESS_EQUALS <number> (279) 82
IF_CLAUSE <number> (280) 69
WHILE_CLAUSE <number> (281) 74
ELSE_CLAUSE <number> (282) 64
HEADER_END <number> (283)
SQUARE_BRACKET_OPEN <number> (284) 11 33 34 35
SQUARE_BRACKET_CLOSE <number> (285) 11 33 34 35
CURLY_BRACKET_OPEN <number> (286) 16 64 69 74
CURLY_BRACKET_CLOSE <number> (287) 16 64 69 74
COMMA <number> (288) 18 37
PARENTESIS_OPEN <number> (289) 16 43 45 58 59 60 69 74
PARENTESIS_CLOSE <number> (290) 16 43 45 58 59 60 69 74
END_OF_INSTRUCTION <number> (291) 3 4 7 8 16 20 21 22 64 69 74
OPEN_CONTEXT_TAG <number> (292)
CLOSE_CONTEXT_TAG <number> (293)
QUOTE <number> (294) 59
ID <string> (295) 10 11 16 17 18 29 30 31 32 33 34 35 45 47 50 58 75
    76 78
PRINT <number> (296) 59 60
PLUSPLUS <number> (297) 30
MINUSMINUS <number> (298) 31


Nonterminals, with rules where they appear

$accept (45)
    on left: 0
begin (46)
    on left: 2, on right: 0
$@1 (47)
    on left: 1, on right: 2
root <number> (48)
    on left: 3 4 6 7 8 9, on right: 2 3 4 6 7 8
$@2 (49)
    on left: 5, on right: 6
declaration <number> (50)
    on left: 10 11, on right: 3 25
function <number> (51)
    on left: 16, on right: 6
$@3 (52)
    on left: 12, on right: 16
$@4 (53)
    on left: 13, on right: 16
$@5 (54)
    on left: 14, on right: 16
$@6 (55)
    on left: 15, on right: 16
params <number> (56)
    on left: 17 18 19, on right: 16 17 18
codeSet <number> (57)
    on left: 20 21 22 23, on right: 16 20 21 22 64 69 74
instruction <number> (58)
    on left: 24 25 26 27 28, on right: 20
assignation <number> (59)
    on left: 29 30 31 32 33 34 35, on right: 4 24
functionCallParams <number> (60)
    on left: 36 37 38, on right: 37 45 58
aritmeticOperation (61)
    on left: 39 40 41 42 43 45 46 47, on right: 32 36 37 39 40 41 42
    43 56 60
$@7 (62)
    on left: 44, on right: 45
return <number> (63)
    on left: 50 53 56 58, on right: 26
$@8 (64)
    on left: 48, on right: 50
$@9 (65)
    on left: 49, on right: 50
$@10 (66)
    on left: 51, on right: 53
$@11 (67)
    on left: 52, on right: 53
$@12 (68)
    on left: 54, on right: 56
$@13 (69)
    on left: 55, on right: 56
$@14 (70)
    on left: 57, on right: 58
print <number> (71)
    on left: 59 60, on right: 8 27
else (72)
    on left: 64 65, on right: 69
$@15 (73)
    on left: 61, on right: 64
$@16 (74)
    on left: 62, on right: 64
$@17 (75)
    on left: 63, on right: 64
controlStructure <number> (76)
    on left: 69 74, on right: 21
$@18 (77)
    on left: 66, on right: 69
$@19 (78)
    on left: 67, on right: 69
$@20 (79)
    on left: 68, on right: 69
$@21 (80)
    on left: 70, on right: 74
$@22 (81)
    on left: 71, on right: 74
$@23 (82)
    on left: 72, on right: 74
$@24 (83)
    on left: 73, on right: 74
logicalOperation <number> (84)
    on left: 75 76 77 78, on right: 69 74
logicalOperator <number> (85)
    on left: 79 80 81 82 83 84, on right: 75 76 77 78


State 0

    0 $accept: . begin $end

    $default  reduce using rule 1 ($@1)

    begin  go to state 1
    $@1    go to state 2


State 1

    0 $accept: begin . $end

    $end  shift, and go to state 3


State 2

    2 begin: $@1 . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 8
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 3

    0 $accept: begin $end .

    $default  accept


State 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  shift, and go to state 13


State 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 14
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 6

   29 assignation: ID . ASSIGN INT_VAL
   30            | ID . PLUSPLUS
   31            | ID . MINUSMINUS
   32            | ID . ASSIGN aritmeticOperation
   33            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               shift, and go to state 15
    SQUARE_BRACKET_OPEN  shift, and go to state 16
    PLUSPLUS             shift, and go to state 17
    MINUSMINUS           shift, and go to state 18


State 7

   59 print: PRINT . PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   60      | PRINT . PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

    PARENTESIS_OPEN  shift, and go to state 19


State 8

    2 begin: $@1 root .

    $default  reduce using rule 2 (begin)


State 9

    6 root: $@2 . function root

    FUN  shift, and go to state 20

    function  go to state 21


State 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 22


State 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 23


State 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  shift, and go to state 24


State 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  shift, and go to state 25

    $default  reduce using rule 10 (declaration)


State 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce using rule 7 (root)


State 15

   29 assignation: ID ASSIGN . INT_VAL
   32            | ID ASSIGN . aritmeticOperation
   35            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL          shift, and go to state 26
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 28

    aritmeticOperation  go to state 29


State 16

   33 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  shift, and go to state 30


State 17

   30 assignation: ID PLUSPLUS .

    $default  reduce using rule 30 (assignation)


State 18

   31 assignation: ID MINUSMINUS .

    $default  reduce using rule 31 (assignation)


State 19

   59 print: PRINT PARENTESIS_OPEN . QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE
   60      | PRINT PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    QUOTE            shift, and go to state 32
    ID               shift, and go to state 33

    aritmeticOperation  go to state 34


State 20

   16 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  shift, and go to state 35


State 21

    6 root: $@2 function . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 36
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 37
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 38
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            shift, and go to state 4
    END_OF_INSTRUCTION  shift, and go to state 5
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    $end      reduce using rule 9 (root)
    $default  reduce using rule 5 ($@2)

    root         go to state 39
    $@2          go to state 9
    declaration  go to state 10
    assignation  go to state 11
    print        go to state 12


State 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  shift, and go to state 40


State 26

   29 assignation: ID ASSIGN INT_VAL .
   46 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce using rule 29 (assignation)
    END_OF_INSTRUCTION  [reduce using rule 46 (aritmeticOperation)]
    $default            reduce using rule 46 (aritmeticOperation)


State 27

   43 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 41


State 28

   35 assignation: ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   45 aritmeticOperation: ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   47                   | ID .

    SQUARE_BRACKET_OPEN  shift, and go to state 42
    PARENTESIS_OPEN      shift, and go to state 43

    $default  reduce using rule 47 (aritmeticOperation)


State 29

   32 assignation: ID ASSIGN aritmeticOperation .
   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47

    $default  reduce using rule 32 (assignation)


State 30

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  shift, and go to state 48


State 31

   46 aritmeticOperation: INT_VAL .

    $default  reduce using rule 46 (aritmeticOperation)


State 32

   59 print: PRINT PARENTESIS_OPEN QUOTE . STRING_VAL QUOTE PARENTESIS_CLOSE

    STRING_VAL  shift, and go to state 49


State 33

   45 aritmeticOperation: ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   47                   | ID .

    PARENTESIS_OPEN  shift, and go to state 43

    $default  reduce using rule 47 (aritmeticOperation)


State 34

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation
   60 print: PRINT PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               shift, and go to state 44
    SUBSTRACT         shift, and go to state 45
    PRODUCT           shift, and go to state 46
    DIVIDE            shift, and go to state 47
    PARENTESIS_CLOSE  shift, and go to state 50


State 35

   16 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 12 ($@3)

    $@3  go to state 51


State 36

    6 root: $@2 function root .

    $default  reduce using rule 6 (root)


State 37

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce using rule 3 (root)


State 38

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce using rule 4 (root)


State 39

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce using rule 8 (root)


State 40

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 52


State 41

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation
   43                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               shift, and go to state 44
    SUBSTRACT         shift, and go to state 45
    PRODUCT           shift, and go to state 46
    DIVIDE            shift, and go to state 47
    PARENTESIS_CLOSE  shift, and go to state 53


State 42

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  shift, and go to state 54


State 43

   45 aritmeticOperation: ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce using rule 44 ($@7)

    $@7  go to state 55


State 44

   39 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 56


State 45

   40 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 57


State 46

   41 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 58


State 47

   42 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    aritmeticOperation  go to state 59


State 48

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  shift, and go to state 60


State 49

   59 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL . QUOTE PARENTESIS_CLOSE

    QUOTE  shift, and go to state 61


State 50

   60 print: PRINT PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce using rule 60 (print)


State 51

   16 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  shift, and go to state 62


State 52

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 11 (declaration)


State 53

   43 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce using rule 43 (aritmeticOperation)


State 54

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  shift, and go to state 63


State 55

   45 aritmeticOperation: ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 38 (functionCallParams)

    functionCallParams  go to state 64
    aritmeticOperation  go to state 65


State 56

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation SUM aritmeticOperation .
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  shift, and go to state 46
    DIVIDE   shift, and go to state 47

    $default  reduce using rule 39 (aritmeticOperation)


State 57

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  shift, and go to state 46
    DIVIDE   shift, and go to state 47

    $default  reduce using rule 40 (aritmeticOperation)


State 58

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation PRODUCT aritmeticOperation .
   42                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce using rule 41 (aritmeticOperation)


State 59

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation
   42                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce using rule 42 (aritmeticOperation)


State 60

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  shift, and go to state 66
    ID       shift, and go to state 67


State 61

   59 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 68


State 62

   16 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 13 ($@4)

    $@4  go to state 69


State 63

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce using rule 35 (assignation)


State 64

   45 aritmeticOperation: ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 70


State 65

   36 functionCallParams: aritmeticOperation .
   37                   | aritmeticOperation . COMMA functionCallParams
   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47
    COMMA      shift, and go to state 71

    $default  reduce using rule 36 (functionCallParams)


State 66

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce using rule 34 (assignation)


State 67

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce using rule 33 (assignation)


State 68

   59 print: PRINT PARENTESIS_OPEN QUOTE STRING_VAL QUOTE PARENTESIS_CLOSE .

    $default  reduce using rule 59 (print)


State 69

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 19 (params)

    params  go to state 74


State 70

   45 aritmeticOperation: ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce using rule 45 (aritmeticOperation)


State 71

   37 functionCallParams: aritmeticOperation COMMA . functionCallParams

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 38 (functionCallParams)

    functionCallParams  go to state 75
    aritmeticOperation  go to state 65


State 72

   17 params: INT_TYPE . ID params

    ID  shift, and go to state 76


State 73

   18 params: COMMA . INT_TYPE ID params

    INT_TYPE  shift, and go to state 77


State 74

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 14 ($@5)

    $@5  go to state 78


State 75

   37 functionCallParams: aritmeticOperation COMMA functionCallParams .

    $default  reduce using rule 37 (functionCallParams)


State 76

   17 params: INT_TYPE ID . params

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 19 (params)

    params  go to state 79


State 77

   18 params: COMMA INT_TYPE . ID params

    ID  shift, and go to state 80


State 78

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  shift, and go to state 81


State 79

   17 params: INT_TYPE ID params .

    $default  reduce using rule 17 (params)


State 80

   18 params: COMMA INT_TYPE ID . params

    INT_TYPE  shift, and go to state 72
    COMMA     shift, and go to state 73

    $default  reduce using rule 19 (params)

    params  go to state 82


State 81

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce using rule 15 ($@6)

    $@6  go to state 83


State 82

   18 params: COMMA INT_TYPE ID params .

    $default  reduce using rule 18 (params)


State 83

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  shift, and go to state 84


State 84

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  shift, and go to state 85


State 85

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 91
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 86

   28 instruction: BREAK .

    $default  reduce using rule 28 (instruction)


State 87

   50 return: RETURN . ID $@8 $@9
   53       | RETURN . INT_VAL $@10 $@11
   56       | RETURN . aritmeticOperation $@12 $@13
   58       | RETURN . ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 98
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 99

    aritmeticOperation  go to state 100


State 88

   69 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    PARENTESIS_OPEN  shift, and go to state 101


State 89

   22 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 102
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 90

   25 instruction: declaration .

    $default  reduce using rule 25 (instruction)


State 91

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  shift, and go to state 103


State 92

   20 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  shift, and go to state 104


State 93

   24 instruction: assignation .

    $default  reduce using rule 24 (instruction)


State 94

   26 instruction: return .

    $default  reduce using rule 26 (instruction)


State 95

   27 instruction: print .

    $default  reduce using rule 27 (instruction)


State 96

   21 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  shift, and go to state 105


State 97

   74 controlStructure: $@21 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  shift, and go to state 106


State 98

   46 aritmeticOperation: INT_VAL .
   53 return: RETURN INT_VAL . $@10 $@11

    END_OF_INSTRUCTION  reduce using rule 46 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce using rule 51 ($@10)]
    $default            reduce using rule 46 (aritmeticOperation)

    $@10  go to state 107


State 99

   45 aritmeticOperation: ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   47                   | ID .
   50 return: RETURN ID . $@8 $@9
   58       | RETURN ID . PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  shift, and go to state 108

    END_OF_INSTRUCTION  reduce using rule 47 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce using rule 48 ($@8)]
    $default            reduce using rule 47 (aritmeticOperation)

    $@8  go to state 109


State 100

   39 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation . DIVIDE aritmeticOperation
   56 return: RETURN aritmeticOperation . $@12 $@13

    SUM        shift, and go to state 44
    SUBSTRACT  shift, and go to state 45
    PRODUCT    shift, and go to state 46
    DIVIDE     shift, and go to state 47

    $default  reduce using rule 54 ($@12)

    $@12  go to state 110


State 101

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    INT_VAL  shift, and go to state 111
    ID       shift, and go to state 112

    logicalOperation  go to state 113


State 102

   22 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 22 (codeSet)


State 103

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  shift, and go to state 114


State 104

   20 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 115
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 105

   21 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 116
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 106

   74 controlStructure: $@21 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  shift, and go to state 117


State 107

   53 return: RETURN INT_VAL $@10 . $@11

    $default  reduce using rule 52 ($@11)

    $@11  go to state 118


State 108

   45 aritmeticOperation: ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE
   58 return: RETURN ID PARENTESIS_OPEN . $@14 functionCallParams PARENTESIS_CLOSE

    INT_VAL           reduce using rule 44 ($@7)
    INT_VAL           [reduce using rule 57 ($@14)]
    PARENTESIS_OPEN   reduce using rule 44 ($@7)
    PARENTESIS_OPEN   [reduce using rule 57 ($@14)]
    PARENTESIS_CLOSE  reduce using rule 44 ($@7)
    PARENTESIS_CLOSE  [reduce using rule 57 ($@14)]
    ID                reduce using rule 44 ($@7)
    ID                [reduce using rule 57 ($@14)]
    $default          reduce using rule 44 ($@7)

    $@7   go to state 55
    $@14  go to state 119


State 109

   50 return: RETURN ID $@8 . $@9

    $default  reduce using rule 49 ($@9)

    $@9  go to state 120


State 110

   56 return: RETURN aritmeticOperation $@12 . $@13

    $default  reduce using rule 55 ($@13)

    $@13  go to state 121


State 111

   77 logicalOperation: INT_VAL . logicalOperator INT_VAL
   78                 | INT_VAL . logicalOperator ID

    EQUALS          shift, and go to state 122
    NOT_EQUALS      shift, and go to state 123
    GREATER         shift, and go to state 124
    GREATER_EQUALS  shift, and go to state 125
    LESS            shift, and go to state 126
    LESS_EQUALS     shift, and go to state 127

    logicalOperator  go to state 128


State 112

   75 logicalOperation: ID . logicalOperator ID
   76                 | ID . logicalOperator INT_VAL

    EQUALS          shift, and go to state 122
    NOT_EQUALS      shift, and go to state 123
    GREATER         shift, and go to state 124
    GREATER_EQUALS  shift, and go to state 125
    LESS            shift, and go to state 126
    LESS_EQUALS     shift, and go to state 127

    logicalOperator  go to state 129


State 113

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    PARENTESIS_CLOSE  shift, and go to state 130


State 114

   16 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce using rule 16 (function)


State 115

   20 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 20 (codeSet)


State 116

   21 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce using rule 21 (codeSet)


State 117

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    INT_VAL  shift, and go to state 111
    ID       shift, and go to state 112

    logicalOperation  go to state 131


State 118

   53 return: RETURN INT_VAL $@10 $@11 .

    $default  reduce using rule 53 (return)


State 119

   58 return: RETURN ID PARENTESIS_OPEN $@14 . functionCallParams PARENTESIS_CLOSE

    INT_VAL          shift, and go to state 31
    PARENTESIS_OPEN  shift, and go to state 27
    ID               shift, and go to state 33

    $default  reduce using rule 38 (functionCallParams)

    functionCallParams  go to state 132
    aritmeticOperation  go to state 65


State 120

   50 return: RETURN ID $@8 $@9 .

    $default  reduce using rule 50 (return)


State 121

   56 return: RETURN aritmeticOperation $@12 $@13 .

    $default  reduce using rule 56 (return)


State 122

   79 logicalOperator: EQUALS .

    $default  reduce using rule 79 (logicalOperator)


State 123

   80 logicalOperator: NOT_EQUALS .

    $default  reduce using rule 80 (logicalOperator)


State 124

   83 logicalOperator: GREATER .

    $default  reduce using rule 83 (logicalOperator)


State 125

   84 logicalOperator: GREATER_EQUALS .

    $default  reduce using rule 84 (logicalOperator)


State 126

   81 logicalOperator: LESS .

    $default  reduce using rule 81 (logicalOperator)


State 127

   82 logicalOperator: LESS_EQUALS .

    $default  reduce using rule 82 (logicalOperator)


State 128

   77 logicalOperation: INT_VAL logicalOperator . INT_VAL
   78                 | INT_VAL logicalOperator . ID

    INT_VAL  shift, and go to state 133
    ID       shift, and go to state 134


State 129

   75 logicalOperation: ID logicalOperator . ID
   76                 | ID logicalOperator . INT_VAL

    INT_VAL  shift, and go to state 135
    ID       shift, and go to state 136


State 130

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    $default  reduce using rule 66 ($@18)

    $@18  go to state 137


State 131

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    $default  reduce using rule 71 ($@22)

    $@22  go to state 138


State 132

   58 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 139


State 133

   77 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce using rule 77 (logicalOperation)


State 134

   78 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce using rule 78 (logicalOperation)


State 135

   76 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce using rule 76 (logicalOperation)


State 136

   75 logicalOperation: ID logicalOperator ID .

    $default  reduce using rule 75 (logicalOperation)


State 137

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    CURLY_BRACKET_OPEN  shift, and go to state 140


State 138

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  shift, and go to state 141


State 139

   58 return: RETURN ID PARENTESIS_OPEN $@14 functionCallParams PARENTESIS_CLOSE .

    $default  reduce using rule 58 (return)


State 140

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    END_OF_INSTRUCTION  shift, and go to state 142


State 141

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 143


State 142

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@19 codeSet CURLY_BRACKET_CLOSE $@20 else

    $default  reduce using rule 67 ($@19)

    $@19  go to state 144


State 143

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  shift, and go to state 145


State 144

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 . codeSet CURLY_BRACKET_CLOSE $@20 else

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 146
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 145

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@23 codeSet $@24 CURLY_BRACKET_CLOSE

    $default  reduce using rule 72 ($@23)

    $@23  go to state 147


State 146

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet . CURLY_BRACKET_CLOSE $@20 else

    CURLY_BRACKET_CLOSE  shift, and go to state 148


State 147

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 . codeSet $@24 CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 149
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 148

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE . $@20 else

    $default  reduce using rule 68 ($@20)

    $@20  go to state 150


State 149

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet . $@24 CURLY_BRACKET_CLOSE

    $default  reduce using rule 73 ($@24)

    $@24  go to state 151


State 150

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 . else

    END_OF_INSTRUCTION  reduce using rule 65 (else)
    $default            reduce using rule 61 ($@15)

    else  go to state 152
    $@15  go to state 153


State 151

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 154


State 152

   69 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@18 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@19 codeSet CURLY_BRACKET_CLOSE $@20 else .

    $default  reduce using rule 69 (controlStructure)


State 153

   64 else: $@15 . ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  shift, and go to state 155


State 154

   74 controlStructure: $@21 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation $@22 PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@23 codeSet $@24 CURLY_BRACKET_CLOSE .

    $default  reduce using rule 74 (controlStructure)


State 155

   64 else: $@15 ELSE_CLAUSE . $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    $default  reduce using rule 62 ($@16)

    $@16  go to state 156


State 156

   64 else: $@15 ELSE_CLAUSE $@16 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  shift, and go to state 157


State 157

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  shift, and go to state 158


State 158

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@17 codeSet CURLY_BRACKET_CLOSE

    $default  reduce using rule 63 ($@17)

    $@17  go to state 159


State 159

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 . codeSet CURLY_BRACKET_CLOSE

    BREAK               shift, and go to state 86
    RETURN              shift, and go to state 87
    INT_TYPE            shift, and go to state 4
    IF_CLAUSE           shift, and go to state 88
    END_OF_INSTRUCTION  shift, and go to state 89
    ID                  shift, and go to state 6
    PRINT               shift, and go to state 7

    WHILE_CLAUSE  reduce using rule 70 ($@21)
    $default      reduce using rule 23 (codeSet)

    declaration       go to state 90
    codeSet           go to state 160
    instruction       go to state 92
    assignation       go to state 93
    return            go to state 94
    print             go to state 95
    controlStructure  go to state 96
    $@21              go to state 97


State 160

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  shift, and go to state 161


State 161

   64 else: $@15 ELSE_CLAUSE $@16 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@17 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce using rule 64 (else)
