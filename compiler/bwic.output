Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   45 return: RETURN ID
   46       | RETURN INT_VAL


Estado 20 conflictos: 1 reducción/reducción
Estado 22 conflictos: 1 reducción/reducción
Estado 85 conflictos: 1 reducción/reducción
Estado 86 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | %empty

    9 declaration: INT_TYPE ID
   10            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   11 $@3: %empty

   12 $@4: %empty

   13 $@5: %empty

   14 $@6: %empty

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   16 params: INT_TYPE ID params
   17       | COMMA INT_TYPE ID params
   18       | %empty

   19 codeSet: instruction END_OF_INSTRUCTION codeSet
   20        | controlStructure codeSet
   21        | END_OF_INSTRUCTION codeSet
   22        | %empty

   23 instruction: assignation
   24            | declaration
   25            | return
   26            | print
   27            | BREAK

   28 assignation: ID ASSIGN INT_VAL
   29            | ID ASSIGN ID

   30 $@7: %empty

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN aritmeticOperation
   33            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

   34 functionCallParams: INT_VAL
   35                   | ID
   36                   | INT_VAL COMMA functionCallParams
   37                   | ID COMMA functionCallParams

   38 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   39                   | aritmeticOperation SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation PRODUCT aritmeticOperation
   41                   | aritmeticOperation DIVIDE aritmeticOperation
   42                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   43                   | INT_VAL
   44                   | ID

   45 return: RETURN ID
   46       | RETURN INT_VAL
   47       | RETURN aritmeticOperation

   48 $@8: %empty

   49 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

   50 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   51 printableElement: ID
   52                 | QUOTE text QUOTE
   53                 | printableElement SUM printableElement

   54 text: STRING_VAL
   55     | ' '

   56 $@9: %empty

   57 $@10: %empty

   58 $@11: %empty

   59 $@12: %empty

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

   61 $@13: %empty

   62 $@14: %empty

   63 $@15: %empty

   64 $@16: %empty

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

   66 logicalOperation: ID logicalOperator ID
   67                 | ID logicalOperator INT_VAL
   68                 | INT_VAL logicalOperator INT_VAL
   69                 | INT_VAL logicalOperator ID

   70 logicalOperator: EQUALS
   71                | NOT_EQUALS
   72                | LESS
   73                | LESS_EQUALS
   74                | GREATER
   75                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 55
error (256)
CONTINUE (258)
BREAK (259) 27
RETURN (260) 45 46 47 49
FUN (261) 15
INT_VAL (262) 10 28 33 34 36 43 46 67 68 69
STRING_VAL (263) 54
INT_TYPE (264) 9 10 16 17
STRING_TYPE (265)
ASSIGN (266) 28 29 31 32 33
SUM (267) 38 53
SUBSTRACT (268) 39
PRODUCT (269) 40
DIVIDE (270) 41
AND (271)
OR (272)
NOT (273)
EQUALS (274) 70
NOT_EQUALS (275) 71
GREATER (276) 74
GREATER_EQUALS (277) 75
LESS (278) 72
LESS_EQUALS (279) 73
IF_CLAUSE (280) 60
WHILE_CLAUSE (281) 65
ELSE_CLAUSE (282) 60
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 10 33
SQUARE_BRACKET_CLOSE (285) 10 33
CURLY_BRACKET_OPEN (286) 15 60 65
CURLY_BRACKET_CLOSE (287) 15 60 65
COMMA (288) 17 36 37
PARENTESIS_OPEN (289) 15 31 42 49 50 60 65
PARENTESIS_CLOSE (290) 15 31 42 49 50 60 65
END_OF_INSTRUCTION (291) 3 4 7 15 19 21 60 65
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 52
ID (295) 9 10 15 16 17 28 29 31 32 33 35 37 44 45 49 51 66 67 69
PRINT (296) 50


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
begin (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
root (46)
    en la izquierda: 3 4 6 7 8, en la derecha: 2 3 4 6 7
$@2 (47)
    en la izquierda: 5, en la derecha: 6
declaration (48)
    en la izquierda: 9 10, en la derecha: 3 24
function (49)
    en la izquierda: 15, en la derecha: 6
$@3 (50)
    en la izquierda: 11, en la derecha: 15
$@4 (51)
    en la izquierda: 12, en la derecha: 15
$@5 (52)
    en la izquierda: 13, en la derecha: 15
$@6 (53)
    en la izquierda: 14, en la derecha: 15
params (54)
    en la izquierda: 16 17 18, en la derecha: 15 16 17
codeSet (55)
    en la izquierda: 19 20 21 22, en la derecha: 15 19 20 21 60 65
instruction (56)
    en la izquierda: 23 24 25 26 27, en la derecha: 19
assignation (57)
    en la izquierda: 28 29 31 32 33, en la derecha: 4 23
$@7 (58)
    en la izquierda: 30, en la derecha: 31
functionCallParams (59)
    en la izquierda: 34 35 36 37, en la derecha: 31 36 37 49
aritmeticOperation (60)
    en la izquierda: 38 39 40 41 42 43 44, en la derecha: 32 33 38
    39 40 41 42 47
return (61)
    en la izquierda: 45 46 47 49, en la derecha: 25
$@8 (62)
    en la izquierda: 48, en la derecha: 49
print (63)
    en la izquierda: 50, en la derecha: 26
printableElement (64)
    en la izquierda: 51 52 53, en la derecha: 50 53
text (65)
    en la izquierda: 54 55, en la derecha: 52
controlStructure (66)
    en la izquierda: 60 65, en la derecha: 20
$@9 (67)
    en la izquierda: 56, en la derecha: 60
$@10 (68)
    en la izquierda: 57, en la derecha: 60
$@11 (69)
    en la izquierda: 58, en la derecha: 60
$@12 (70)
    en la izquierda: 59, en la derecha: 60
$@13 (71)
    en la izquierda: 61, en la derecha: 65
$@14 (72)
    en la izquierda: 62, en la derecha: 65
$@15 (73)
    en la izquierda: 63, en la derecha: 65
$@16 (74)
    en la izquierda: 64, en la derecha: 65
logicalOperation (75)
    en la izquierda: 66 67 68 69, en la derecha: 60 65
logicalOperator (76)
    en la izquierda: 70 71 72 73 74 75, en la derecha: 66 67 68 69


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 7
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

    9 declaration: INT_TYPE . ID
   10            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 11


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 12
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 6

   28 assignation: ID . ASSIGN INT_VAL
   29            | ID . ASSIGN ID
   31            | ID . ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID . ASSIGN aritmeticOperation
   33            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    ASSIGN               desplazar e ir al estado 13
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 14


Estado 7

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 8

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 15

    function  ir al estado 16


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 17


Estado 10

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 18


Estado 11

    9 declaration: INT_TYPE ID .
   10            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 19

    $default  reduce usando la regla 9 (declaration)


Estado 12

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 13

   28 assignation: ID ASSIGN . INT_VAL
   29            | ID ASSIGN . ID
   31            | ID ASSIGN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 20
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 22

    aritmeticOperation  ir al estado 23


Estado 14

   33 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    INT_VAL  desplazar e ir al estado 24


Estado 15

   15 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 25


Estado 16

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 26
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 17

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 27
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 18

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6

    $end      reduce usando la regla 8 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 28
    $@2          ir al estado 8
    declaration  ir al estado 9
    assignation  ir al estado 10


Estado 19

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 29


Estado 20

   28 assignation: ID ASSIGN INT_VAL .
   43 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 43 (aritmeticOperation)]
    $default            reduce usando la regla 43 (aritmeticOperation)


Estado 21

   42 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 32


Estado 22

   29 assignation: ID ASSIGN ID .
   31            | ID ASSIGN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE
   44 aritmeticOperation: ID .

    PARENTESIS_OPEN  desplazar e ir al estado 33

    END_OF_INSTRUCTION  reduce usando la regla 29 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 44 (aritmeticOperation)]
    $default            reduce usando la regla 44 (aritmeticOperation)


Estado 23

   32 assignation: ID ASSIGN aritmeticOperation .
   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 34
    SUBSTRACT  desplazar e ir al estado 35
    PRODUCT    desplazar e ir al estado 36
    DIVIDE     desplazar e ir al estado 37

    $default  reduce usando la regla 32 (assignation)


Estado 24

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 38


Estado 25

   15 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@3)

    $@3  ir al estado 39


Estado 26

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 27

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 28

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 29

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 40


Estado 30

   43 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 31

   44 aritmeticOperation: ID .

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 32

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation
   42                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 34
    SUBSTRACT         desplazar e ir al estado 35
    PRODUCT           desplazar e ir al estado 36
    DIVIDE            desplazar e ir al estado 37
    PARENTESIS_CLOSE  desplazar e ir al estado 41


Estado 33

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 30 ($@7)

    $@7  ir al estado 42


Estado 34

   38 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 43


Estado 35

   39 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 44


Estado 36

   40 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 45


Estado 37

   41 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 46


Estado 38

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 47


Estado 39

   15 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 48


Estado 40

   10 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 10 (declaration)


Estado 41

   42 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 42

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 49
    ID       desplazar e ir al estado 50

    functionCallParams  ir al estado 51


Estado 43

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   38                   | aritmeticOperation SUM aritmeticOperation .
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 36
    DIVIDE   desplazar e ir al estado 37

    $default  reduce usando la regla 38 (aritmeticOperation)


Estado 44

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   39                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 36
    DIVIDE   desplazar e ir al estado 37

    $default  reduce usando la regla 39 (aritmeticOperation)


Estado 45

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   40                   | aritmeticOperation PRODUCT aritmeticOperation .
   41                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 46

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation
   41                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 47

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 30
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 31

    aritmeticOperation  ir al estado 52


Estado 48

   15 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@4)

    $@4  ir al estado 53


Estado 49

   34 functionCallParams: INT_VAL .
   36                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 54

    $default  reduce usando la regla 34 (functionCallParams)


Estado 50

   35 functionCallParams: ID .
   37                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 55

    $default  reduce usando la regla 35 (functionCallParams)


Estado 51

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 56


Estado 52

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN aritmeticOperation .
   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 34
    SUBSTRACT  desplazar e ir al estado 35
    PRODUCT    desplazar e ir al estado 36
    DIVIDE     desplazar e ir al estado 37

    $default  reduce usando la regla 33 (assignation)


Estado 53

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 57
    COMMA     desplazar e ir al estado 58

    $default  reduce usando la regla 18 (params)

    params  ir al estado 59


Estado 54

   36 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 49
    ID       desplazar e ir al estado 50

    functionCallParams  ir al estado 60


Estado 55

   37 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 49
    ID       desplazar e ir al estado 50

    functionCallParams  ir al estado 61


Estado 56

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 31 (assignation)


Estado 57

   16 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 62


Estado 58

   17 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 63


Estado 59

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@5)

    $@5  ir al estado 64


Estado 60

   36 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 36 (functionCallParams)


Estado 61

   37 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 37 (functionCallParams)


Estado 62

   16 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 57
    COMMA     desplazar e ir al estado 58

    $default  reduce usando la regla 18 (params)

    params  ir al estado 65


Estado 63

   17 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 66


Estado 64

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 . PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 67


Estado 65

   16 params: INT_TYPE ID params .

    $default  reduce usando la regla 16 (params)


Estado 66

   17 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 57
    COMMA     desplazar e ir al estado 58

    $default  reduce usando la regla 18 (params)

    params  ir al estado 68


Estado 67

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE . $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 14 ($@6)

    $@6  ir al estado 69


Estado 68

   17 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 17 (params)


Estado 69

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 70


Estado 70

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 71


Estado 71

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 78
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 72

   27 instruction: BREAK .

    $default  reduce usando la regla 27 (instruction)


Estado 73

   45 return: RETURN . ID
   46       | RETURN . INT_VAL
   47       | RETURN . aritmeticOperation
   49       | RETURN . ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 85
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 86

    aritmeticOperation  ir al estado 87


Estado 74

   60 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 88


Estado 75

   21 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 89
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 76

   50 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 90


Estado 77

   24 instruction: declaration .

    $default  reduce usando la regla 24 (instruction)


Estado 78

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 91


Estado 79

   19 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 92


Estado 80

   23 instruction: assignation .

    $default  reduce usando la regla 23 (instruction)


Estado 81

   25 instruction: return .

    $default  reduce usando la regla 25 (instruction)


Estado 82

   26 instruction: print .

    $default  reduce usando la regla 26 (instruction)


Estado 83

   20 codeSet: controlStructure . codeSet

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 93
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 84

   65 controlStructure: $@13 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 94


Estado 85

   43 aritmeticOperation: INT_VAL .
   46 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 43 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 46 (return)]
    $default            reduce usando la regla 43 (aritmeticOperation)


Estado 86

   44 aritmeticOperation: ID .
   45 return: RETURN ID .
   49       | RETURN ID . PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 95

    END_OF_INSTRUCTION  reduce usando la regla 44 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 45 (return)]
    $default            reduce usando la regla 44 (aritmeticOperation)


Estado 87

   38 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   39                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   40                   | aritmeticOperation . PRODUCT aritmeticOperation
   41                   | aritmeticOperation . DIVIDE aritmeticOperation
   47 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 34
    SUBSTRACT  desplazar e ir al estado 35
    PRODUCT    desplazar e ir al estado 36
    DIVIDE     desplazar e ir al estado 37

    $default  reduce usando la regla 47 (return)


Estado 88

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 96
    ID       desplazar e ir al estado 97

    logicalOperation  ir al estado 98


Estado 89

   21 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 21 (codeSet)


Estado 90

   50 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 99
    ID     desplazar e ir al estado 100

    printableElement  ir al estado 101


Estado 91

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 102


Estado 92

   19 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 103
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 93

   20 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 94

   65 controlStructure: $@13 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 104


Estado 95

   49 return: RETURN ID PARENTESIS_OPEN . $@8 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 48 ($@8)

    $@8  ir al estado 105


Estado 96

   68 logicalOperation: INT_VAL . logicalOperator INT_VAL
   69                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 106
    NOT_EQUALS      desplazar e ir al estado 107
    GREATER         desplazar e ir al estado 108
    GREATER_EQUALS  desplazar e ir al estado 109
    LESS            desplazar e ir al estado 110
    LESS_EQUALS     desplazar e ir al estado 111

    logicalOperator  ir al estado 112


Estado 97

   66 logicalOperation: ID . logicalOperator ID
   67                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 106
    NOT_EQUALS      desplazar e ir al estado 107
    GREATER         desplazar e ir al estado 108
    GREATER_EQUALS  desplazar e ir al estado 109
    LESS            desplazar e ir al estado 110
    LESS_EQUALS     desplazar e ir al estado 111

    logicalOperator  ir al estado 113


Estado 98

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 114


Estado 99

   52 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 115
    ' '         desplazar e ir al estado 116

    text  ir al estado 117


Estado 100

   51 printableElement: ID .

    $default  reduce usando la regla 51 (printableElement)


Estado 101

   50 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   53 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 118
    PARENTESIS_CLOSE  desplazar e ir al estado 119


Estado 102

   15 function: FUN ID $@3 PARENTESIS_OPEN $@4 params $@5 PARENTESIS_CLOSE $@6 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 15 (function)


Estado 103

   19 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 104

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 96
    ID       desplazar e ir al estado 97

    logicalOperation  ir al estado 120


Estado 105

   49 return: RETURN ID PARENTESIS_OPEN $@8 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 49
    ID       desplazar e ir al estado 50

    functionCallParams  ir al estado 121


Estado 106

   70 logicalOperator: EQUALS .

    $default  reduce usando la regla 70 (logicalOperator)


Estado 107

   71 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 71 (logicalOperator)


Estado 108

   74 logicalOperator: GREATER .

    $default  reduce usando la regla 74 (logicalOperator)


Estado 109

   75 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 75 (logicalOperator)


Estado 110

   72 logicalOperator: LESS .

    $default  reduce usando la regla 72 (logicalOperator)


Estado 111

   73 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 73 (logicalOperator)


Estado 112

   68 logicalOperation: INT_VAL logicalOperator . INT_VAL
   69                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 122
    ID       desplazar e ir al estado 123


Estado 113

   66 logicalOperation: ID logicalOperator . ID
   67                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 124
    ID       desplazar e ir al estado 125


Estado 114

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 56 ($@9)

    $@9  ir al estado 126


Estado 115

   54 text: STRING_VAL .

    $default  reduce usando la regla 54 (text)


Estado 116

   55 text: ' ' .

    $default  reduce usando la regla 55 (text)


Estado 117

   52 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 127


Estado 118

   53 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 99
    ID     desplazar e ir al estado 100

    printableElement  ir al estado 128


Estado 119

   50 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 50 (print)


Estado 120

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 129


Estado 121

   49 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 130


Estado 122

   68 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 68 (logicalOperation)


Estado 123

   69 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 69 (logicalOperation)


Estado 124

   67 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 67 (logicalOperation)


Estado 125

   66 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 66 (logicalOperation)


Estado 126

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 . CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 131


Estado 127

   52 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 52 (printableElement)


Estado 128

   53 printableElement: printableElement . SUM printableElement
   53                 | printableElement SUM printableElement .

    $default  reduce usando la regla 53 (printableElement)


Estado 129

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 62 ($@14)

    $@14  ir al estado 132


Estado 130

   49 return: RETURN ID PARENTESIS_OPEN $@8 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 49 (return)


Estado 131

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN . $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 57 ($@10)

    $@10  ir al estado 133


Estado 132

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 . CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 134


Estado 133

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 135


Estado 134

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN . $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 63 ($@15)

    $@15  ir al estado 136


Estado 135

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 137
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 136

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 . END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 138


Estado 137

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 139


Estado 138

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION . codeSet $@16 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 140
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 139

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 58 ($@11)

    $@11  ir al estado 141


Estado 140

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet . $@16 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 64 ($@16)

    $@16  ir al estado 142


Estado 141

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 . ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 143


Estado 142

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 144


Estado 143

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE . CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 145


Estado 144

   65 controlStructure: $@13 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@14 CURLY_BRACKET_OPEN $@15 END_OF_INSTRUCTION codeSet $@16 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 65 (controlStructure)


Estado 145

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN . $@12 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 59 ($@12)

    $@12  ir al estado 146


Estado 146

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 72
    RETURN              desplazar e ir al estado 73
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 74
    END_OF_INSTRUCTION  desplazar e ir al estado 75
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 76

    WHILE_CLAUSE  reduce usando la regla 61 ($@13)
    $default      reduce usando la regla 22 (codeSet)

    declaration       ir al estado 77
    codeSet           ir al estado 147
    instruction       ir al estado 79
    assignation       ir al estado 80
    return            ir al estado 81
    print             ir al estado 82
    controlStructure  ir al estado 83
    $@13              ir al estado 84


Estado 147

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 148


Estado 148

   60 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@9 CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE $@11 ELSE_CLAUSE CURLY_BRACKET_OPEN $@12 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 60 (controlStructure)
