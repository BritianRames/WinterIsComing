Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   SQUARE_BRACKET_OPEN
   SQUARE_BRACKET_CLOSE
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   47 return: RETURN ID
   48       | RETURN INT_VAL

   68 structuresWord: IF_CLAUSE


Estado 20 conflictos: 3 reducción/reducción
Estado 22 conflictos: 3 reducción/reducción
Estado 29 conflictos: 4 reducción/reducción
Estado 30 conflictos: 4 reducción/reducción
Estado 40 conflictos: 2 desplazamiento/reducción
Estado 41 conflictos: 2 desplazamiento/reducción
Estado 71 conflictos: 1 desplazamiento/reducción
Estado 84 conflictos: 3 reducción/reducción
Estado 85 conflictos: 3 reducción/reducción
Estado 97 conflictos: 1 reducción/reducción
Estado 125 conflictos: 1 desplazamiento/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root
    5     | function root
    6     | END_OF_INSTRUCTION root
    7     | %empty

    8 declaration: INT_TYPE ID

    9 $@2: %empty

   10 $@3: %empty

   11 $@4: %empty

   12 $@5: %empty

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   14 params: INT_TYPE ID params
   15       | COMMA INT_TYPE ID params
   16       | %empty

   17 codeSet: instruction END_OF_INSTRUCTION codeSet
   18        | controlStructure codeSet
   19        | END_OF_INSTRUCTION codeSet
   20        | %empty

   21 instruction: assignation
   22            | declaration
   23            | ID ASSIGN aritmeticOperation
   24            | return
   25            | print
   26            | BREAK

   27 assignation: ID ASSIGN INT_VAL
   28            | ID ASSIGN ID

   29 $@6: %empty

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN aritmeticOperation

   32 functionCallParams: INT_VAL
   33                   | ID
   34                   | INT_VAL COMMA functionCallParams
   35                   | ID COMMA functionCallParams

   36 aritmeticOperation: aritmeticOperationSum SUM aritmeticOperationSum
   37                   | aritmeticOperationSubstract SUBSTRACT aritmeticOperationSubstract
   38                   | aritmeticOperation PRODUCT aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation
   40                   | aritmeticOperationSum
   41                   | aritmeticOperationSubstract
   42                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE

   43 aritmeticOperationSubstract: ID
   44                            | INT_VAL

   45 aritmeticOperationSum: INT_VAL
   46                      | ID

   47 return: RETURN ID
   48       | RETURN INT_VAL
   49       | RETURN aritmeticOperation

   50 $@7: %empty

   51 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

   52 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   53 printableElement: ID
   54                 | QUOTE text QUOTE
   55                 | printableElement SUM printableElement

   56 text: STRING_VAL
   57     | ' '

   58 $@8: %empty

   59 $@9: %empty

   60 $@10: %empty

   61 $@11: %empty

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

   63 $@12: %empty

   64 $@13: %empty

   65 $@14: %empty

   66 $@15: %empty

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

   68 structuresWord: IF_CLAUSE
   69               | WHILE_CLAUSE

   70 logicalOperation: ID logicalOperator ID
   71                 | ID logicalOperator INT_VAL
   72                 | INT_VAL logicalOperator INT_VAL
   73                 | INT_VAL logicalOperator ID

   74 logicalOperator: EQUALS
   75                | NOT_EQUALS
   76                | GREATER
   77                | LESS
   78                | GREATER_EQUALS
   79                | LESS_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 57
error (256)
CONTINUE (258)
BREAK (259) 26
RETURN (260) 47 48 49 51
FUN (261) 13
INT_VAL (262) 27 32 34 44 45 48 71 72 73
STRING_VAL (263) 56
INT_TYPE (264) 8 14 15
STRING_TYPE (265)
ASSIGN (266) 23 27 28 30 31
SUM (267) 36 55
SUBSTRACT (268) 37
PRODUCT (269) 38
DIVIDE (270) 39
AND (271)
OR (272)
NOT (273)
EQUALS (274) 74
NOT_EQUALS (275) 75
GREATER (276) 76
GREATER_EQUALS (277) 78
LESS (278) 77
LESS_EQUALS (279) 79
IF_CLAUSE (280) 62 68
WHILE_CLAUSE (281) 69
ELSE_CLAUSE (282) 62
HEADER_END (283)
SQUARE_BRACKET_OPEN (284)
SQUARE_BRACKET_CLOSE (285)
CURLY_BRACKET_OPEN (286) 13 62 67
CURLY_BRACKET_CLOSE (287) 13 62 67
COMMA (288) 15 34 35
PARENTESIS_OPEN (289) 13 30 42 51 52 62 67
PARENTESIS_CLOSE (290) 13 30 42 51 52 62 67
END_OF_INSTRUCTION (291) 3 4 6 13 17 19 62 67
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 54
ID (295) 8 13 14 15 23 27 28 30 31 33 35 43 46 47 51 53 70 71 73
PRINT (296) 52


No terminales con las reglas donde aparecen

$accept (43)
    en la izquierda: 0
begin (44)
    en la izquierda: 2, en la derecha: 0
$@1 (45)
    en la izquierda: 1, en la derecha: 2
root (46)
    en la izquierda: 3 4 5 6 7, en la derecha: 2 3 4 5 6
declaration (47)
    en la izquierda: 8, en la derecha: 3 22
function (48)
    en la izquierda: 13, en la derecha: 5
$@2 (49)
    en la izquierda: 9, en la derecha: 13
$@3 (50)
    en la izquierda: 10, en la derecha: 13
$@4 (51)
    en la izquierda: 11, en la derecha: 13
$@5 (52)
    en la izquierda: 12, en la derecha: 13
params (53)
    en la izquierda: 14 15 16, en la derecha: 13 14 15
codeSet (54)
    en la izquierda: 17 18 19 20, en la derecha: 13 17 18 19 62 67
instruction (55)
    en la izquierda: 21 22 23 24 25 26, en la derecha: 17
assignation (56)
    en la izquierda: 27 28 30 31, en la derecha: 4 21
$@6 (57)
    en la izquierda: 29, en la derecha: 30
functionCallParams (58)
    en la izquierda: 32 33 34 35, en la derecha: 30 34 35 51
aritmeticOperation (59)
    en la izquierda: 36 37 38 39 40 41 42, en la derecha: 23 31 38
    39 42 49
aritmeticOperationSubstract (60)
    en la izquierda: 43 44, en la derecha: 37 41
aritmeticOperationSum (61)
    en la izquierda: 45 46, en la derecha: 36 40
return (62)
    en la izquierda: 47 48 49 51, en la derecha: 24
$@7 (63)
    en la izquierda: 50, en la derecha: 51
print (64)
    en la izquierda: 52, en la derecha: 25
printableElement (65)
    en la izquierda: 53 54 55, en la derecha: 52 55
text (66)
    en la izquierda: 56 57, en la derecha: 54
controlStructure (67)
    en la izquierda: 62 67, en la derecha: 18
$@8 (68)
    en la izquierda: 58, en la derecha: 62
$@9 (69)
    en la izquierda: 59, en la derecha: 62
$@10 (70)
    en la izquierda: 60, en la derecha: 62
$@11 (71)
    en la izquierda: 61, en la derecha: 62
$@12 (72)
    en la izquierda: 63, en la derecha: 67
$@13 (73)
    en la izquierda: 64, en la derecha: 67
$@14 (74)
    en la izquierda: 65, en la derecha: 67
$@15 (75)
    en la izquierda: 66, en la derecha: 67
structuresWord (76)
    en la izquierda: 68 69, en la derecha: 67
logicalOperation (77)
    en la izquierda: 70 71 72 73, en la derecha: 62 67
logicalOperator (78)
    en la izquierda: 74 75 76 77 78 79, en la derecha: 70 71 72 73


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 8
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   13 function: FUN . ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 12


Estado 5

    8 declaration: INT_TYPE . ID

    ID  desplazar e ir al estado 13


Estado 6

    6 root: END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 14
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 7

   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   30            | ID . ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 15


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 16


Estado 10

    5 root: function . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 17
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 18


Estado 12

   13 function: FUN ID . $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 9 ($@2)

    $@2  ir al estado 19


Estado 13

    8 declaration: INT_TYPE ID .

    $default  reduce usando la regla 8 (declaration)


Estado 14

    6 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 6 (root)


Estado 15

   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   30            | ID ASSIGN . ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 20
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 22

    aritmeticOperation           ir al estado 23
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 16

    3 root: declaration END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 26
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 17

    5 root: function root .

    $default  reduce usando la regla 5 (root)


Estado 18

    4 root: assignation END_OF_INSTRUCTION . root

    FUN                 desplazar e ir al estado 4
    INT_TYPE            desplazar e ir al estado 5
    END_OF_INSTRUCTION  desplazar e ir al estado 6
    ID                  desplazar e ir al estado 7

    $default  reduce usando la regla 7 (root)

    root         ir al estado 27
    declaration  ir al estado 9
    function     ir al estado 10
    assignation  ir al estado 11


Estado 19

   13 function: FUN ID $@2 . PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 28


Estado 20

   27 assignation: ID ASSIGN INT_VAL .
   44 aritmeticOperationSubstract: INT_VAL .
   45 aritmeticOperationSum: INT_VAL .

    SUM                 reduce usando la regla 45 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 44 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 45 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 44 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 45 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 27 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 44 (aritmeticOperationSubstract)]
    END_OF_INSTRUCTION  [reduce usando la regla 45 (aritmeticOperationSum)]
    $default            reduce usando la regla 44 (aritmeticOperationSubstract)


Estado 21

   42 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 29
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 30

    aritmeticOperation           ir al estado 31
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 22

   28 assignation: ID ASSIGN ID .
   30            | ID ASSIGN ID . PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   43 aritmeticOperationSubstract: ID .
   46 aritmeticOperationSum: ID .

    PARENTESIS_OPEN  desplazar e ir al estado 32

    SUM                 reduce usando la regla 46 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 43 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 46 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 43 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 46 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 43 (aritmeticOperationSubstract)]
    END_OF_INSTRUCTION  [reduce usando la regla 46 (aritmeticOperationSum)]
    $default            reduce usando la regla 43 (aritmeticOperationSubstract)


Estado 23

   31 assignation: ID ASSIGN aritmeticOperation .
   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 33
    DIVIDE   desplazar e ir al estado 34

    $default  reduce usando la regla 31 (assignation)


Estado 24

   37 aritmeticOperation: aritmeticOperationSubstract . SUBSTRACT aritmeticOperationSubstract
   41                   | aritmeticOperationSubstract .

    SUBSTRACT  desplazar e ir al estado 35

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 25

   36 aritmeticOperation: aritmeticOperationSum . SUM aritmeticOperationSum
   40                   | aritmeticOperationSum .

    SUM  desplazar e ir al estado 36

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 26

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 27

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 28

   13 function: FUN ID $@2 PARENTESIS_OPEN . $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 10 ($@3)

    $@3  ir al estado 37


Estado 29

   44 aritmeticOperationSubstract: INT_VAL .
   45 aritmeticOperationSum: INT_VAL .

    SUM                 reduce usando la regla 45 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 44 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 45 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 44 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 45 (aritmeticOperationSum)]
    PARENTESIS_CLOSE    reduce usando la regla 44 (aritmeticOperationSubstract)
    PARENTESIS_CLOSE    [reduce usando la regla 45 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 44 (aritmeticOperationSubstract)
    END_OF_INSTRUCTION  [reduce usando la regla 45 (aritmeticOperationSum)]
    $default            reduce usando la regla 44 (aritmeticOperationSubstract)


Estado 30

   43 aritmeticOperationSubstract: ID .
   46 aritmeticOperationSum: ID .

    SUM                 reduce usando la regla 46 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 43 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 46 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 43 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 46 (aritmeticOperationSum)]
    PARENTESIS_CLOSE    reduce usando la regla 43 (aritmeticOperationSubstract)
    PARENTESIS_CLOSE    [reduce usando la regla 46 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 43 (aritmeticOperationSubstract)
    END_OF_INSTRUCTION  [reduce usando la regla 46 (aritmeticOperationSum)]
    $default            reduce usando la regla 43 (aritmeticOperationSubstract)


Estado 31

   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   42                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    PRODUCT           desplazar e ir al estado 33
    DIVIDE            desplazar e ir al estado 34
    PARENTESIS_CLOSE  desplazar e ir al estado 38


Estado 32

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN . $@6 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 29 ($@6)

    $@6  ir al estado 39


Estado 33

   38 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 29
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 30

    aritmeticOperation           ir al estado 40
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 34

   39 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 29
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 30

    aritmeticOperation           ir al estado 41
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 35

   37 aritmeticOperation: aritmeticOperationSubstract SUBSTRACT . aritmeticOperationSubstract

    INT_VAL  desplazar e ir al estado 42
    ID       desplazar e ir al estado 43

    aritmeticOperationSubstract  ir al estado 44


Estado 36

   36 aritmeticOperation: aritmeticOperationSum SUM . aritmeticOperationSum

    INT_VAL  desplazar e ir al estado 45
    ID       desplazar e ir al estado 46

    aritmeticOperationSum  ir al estado 47


Estado 37

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 . params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 16 (params)

    params  ir al estado 50


Estado 38

   42 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 39

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 51
    ID       desplazar e ir al estado 52

    functionCallParams  ir al estado 53


Estado 40

   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   38                   | aritmeticOperation PRODUCT aritmeticOperation .
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 33
    DIVIDE   desplazar e ir al estado 34

    PRODUCT   [reduce usando la regla 38 (aritmeticOperation)]
    DIVIDE    [reduce usando la regla 38 (aritmeticOperation)]
    $default  reduce usando la regla 38 (aritmeticOperation)


Estado 41

   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   39                   | aritmeticOperation DIVIDE aritmeticOperation .

    PRODUCT  desplazar e ir al estado 33
    DIVIDE   desplazar e ir al estado 34

    PRODUCT   [reduce usando la regla 39 (aritmeticOperation)]
    DIVIDE    [reduce usando la regla 39 (aritmeticOperation)]
    $default  reduce usando la regla 39 (aritmeticOperation)


Estado 42

   44 aritmeticOperationSubstract: INT_VAL .

    $default  reduce usando la regla 44 (aritmeticOperationSubstract)


Estado 43

   43 aritmeticOperationSubstract: ID .

    $default  reduce usando la regla 43 (aritmeticOperationSubstract)


Estado 44

   37 aritmeticOperation: aritmeticOperationSubstract SUBSTRACT aritmeticOperationSubstract .

    $default  reduce usando la regla 37 (aritmeticOperation)


Estado 45

   45 aritmeticOperationSum: INT_VAL .

    $default  reduce usando la regla 45 (aritmeticOperationSum)


Estado 46

   46 aritmeticOperationSum: ID .

    $default  reduce usando la regla 46 (aritmeticOperationSum)


Estado 47

   36 aritmeticOperation: aritmeticOperationSum SUM aritmeticOperationSum .

    $default  reduce usando la regla 36 (aritmeticOperation)


Estado 48

   14 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 54


Estado 49

   15 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 55


Estado 50

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params . $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 11 ($@4)

    $@4  ir al estado 56


Estado 51

   32 functionCallParams: INT_VAL .
   34                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 57

    $default  reduce usando la regla 32 (functionCallParams)


Estado 52

   33 functionCallParams: ID .
   35                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 58

    $default  reduce usando la regla 33 (functionCallParams)


Estado 53

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 59


Estado 54

   14 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 16 (params)

    params  ir al estado 60


Estado 55

   15 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 61


Estado 56

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 . PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 62


Estado 57

   34 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 51
    ID       desplazar e ir al estado 52

    functionCallParams  ir al estado 63


Estado 58

   35 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 51
    ID       desplazar e ir al estado 52

    functionCallParams  ir al estado 64


Estado 59

   30 assignation: ID ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 30 (assignation)


Estado 60

   14 params: INT_TYPE ID params .

    $default  reduce usando la regla 14 (params)


Estado 61

   15 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 48
    COMMA     desplazar e ir al estado 49

    $default  reduce usando la regla 16 (params)

    params  ir al estado 65


Estado 62

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE . $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@5)

    $@5  ir al estado 66


Estado 63

   34 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 34 (functionCallParams)


Estado 64

   35 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 35 (functionCallParams)


Estado 65

   15 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 15 (params)


Estado 66

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 67


Estado 67

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 68


Estado 68

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 77
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 69

   26 instruction: BREAK .

    $default  reduce usando la regla 26 (instruction)


Estado 70

   47 return: RETURN . ID
   48       | RETURN . INT_VAL
   49       | RETURN . aritmeticOperation
   51       | RETURN . ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 84
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 85

    aritmeticOperation           ir al estado 86
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 71

   62 controlStructure: IF_CLAUSE . PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE
   68 structuresWord: IF_CLAUSE .

    PARENTESIS_OPEN  desplazar e ir al estado 87

    PARENTESIS_OPEN  [reduce usando la regla 68 (structuresWord)]


Estado 72

   69 structuresWord: WHILE_CLAUSE .

    $default  reduce usando la regla 69 (structuresWord)


Estado 73

   19 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 88
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 74

   23 instruction: ID . ASSIGN aritmeticOperation
   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   30            | ID . ASSIGN ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID . ASSIGN aritmeticOperation

    ASSIGN  desplazar e ir al estado 89


Estado 75

   52 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 90


Estado 76

   22 instruction: declaration .

    $default  reduce usando la regla 22 (instruction)


Estado 77

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 91


Estado 78

   17 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 92


Estado 79

   21 instruction: assignation .

    $default  reduce usando la regla 21 (instruction)


Estado 80

   24 instruction: return .

    $default  reduce usando la regla 24 (instruction)


Estado 81

   25 instruction: print .

    $default  reduce usando la regla 25 (instruction)


Estado 82

   18 codeSet: controlStructure . codeSet

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 93
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 83

   67 controlStructure: structuresWord . PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 94


Estado 84

   44 aritmeticOperationSubstract: INT_VAL .
   45 aritmeticOperationSum: INT_VAL .
   48 return: RETURN INT_VAL .

    SUM                 reduce usando la regla 45 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 44 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 45 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 44 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 45 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 44 (aritmeticOperationSubstract)
    END_OF_INSTRUCTION  [reduce usando la regla 45 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  [reduce usando la regla 48 (return)]
    $default            reduce usando la regla 44 (aritmeticOperationSubstract)


Estado 85

   43 aritmeticOperationSubstract: ID .
   46 aritmeticOperationSum: ID .
   47 return: RETURN ID .
   51       | RETURN ID . PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 95

    SUM                 reduce usando la regla 46 (aritmeticOperationSum)
    PRODUCT             reduce usando la regla 43 (aritmeticOperationSubstract)
    PRODUCT             [reduce usando la regla 46 (aritmeticOperationSum)]
    DIVIDE              reduce usando la regla 43 (aritmeticOperationSubstract)
    DIVIDE              [reduce usando la regla 46 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  reduce usando la regla 43 (aritmeticOperationSubstract)
    END_OF_INSTRUCTION  [reduce usando la regla 46 (aritmeticOperationSum)]
    END_OF_INSTRUCTION  [reduce usando la regla 47 (return)]
    $default            reduce usando la regla 43 (aritmeticOperationSubstract)


Estado 86

   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation
   49 return: RETURN aritmeticOperation .

    PRODUCT  desplazar e ir al estado 33
    DIVIDE   desplazar e ir al estado 34

    $default  reduce usando la regla 49 (return)


Estado 87

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN . $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 58 ($@8)

    $@8  ir al estado 96


Estado 88

   19 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 89

   23 instruction: ID ASSIGN . aritmeticOperation
   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   30            | ID ASSIGN . ID PARENTESIS_OPEN $@6 functionCallParams PARENTESIS_CLOSE
   31            | ID ASSIGN . aritmeticOperation

    INT_VAL          desplazar e ir al estado 20
    PARENTESIS_OPEN  desplazar e ir al estado 21
    ID               desplazar e ir al estado 22

    aritmeticOperation           ir al estado 97
    aritmeticOperationSubstract  ir al estado 24
    aritmeticOperationSum        ir al estado 25


Estado 90

   52 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    QUOTE  desplazar e ir al estado 98
    ID     desplazar e ir al estado 99

    printableElement  ir al estado 100


Estado 91

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 101


Estado 92

   17 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 102
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 93

   18 codeSet: controlStructure codeSet .

    $default  reduce usando la regla 18 (codeSet)


Estado 94

   67 controlStructure: structuresWord PARENTESIS_OPEN . $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 63 ($@12)

    $@12  ir al estado 103


Estado 95

   51 return: RETURN ID PARENTESIS_OPEN . $@7 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 50 ($@7)

    $@7  ir al estado 104


Estado 96

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 . logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 105
    ID       desplazar e ir al estado 106

    logicalOperation  ir al estado 107


Estado 97

   23 instruction: ID ASSIGN aritmeticOperation .
   31 assignation: ID ASSIGN aritmeticOperation .
   38 aritmeticOperation: aritmeticOperation . PRODUCT aritmeticOperation
   39                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 33
    DIVIDE   desplazar e ir al estado 34

    END_OF_INSTRUCTION  reduce usando la regla 23 (instruction)
    END_OF_INSTRUCTION  [reduce usando la regla 31 (assignation)]
    $default            reduce usando la regla 23 (instruction)


Estado 98

   54 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 108
    ' '         desplazar e ir al estado 109

    text  ir al estado 110


Estado 99

   53 printableElement: ID .

    $default  reduce usando la regla 53 (printableElement)


Estado 100

   52 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   55 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 111
    PARENTESIS_CLOSE  desplazar e ir al estado 112


Estado 101

   13 function: FUN ID $@2 PARENTESIS_OPEN $@3 params $@4 PARENTESIS_CLOSE $@5 CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 13 (function)


Estado 102

   17 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 17 (codeSet)


Estado 103

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 . logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 105
    ID       desplazar e ir al estado 106

    logicalOperation  ir al estado 113


Estado 104

   51 return: RETURN ID PARENTESIS_OPEN $@7 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 51
    ID       desplazar e ir al estado 52

    functionCallParams  ir al estado 114


Estado 105

   72 logicalOperation: INT_VAL . logicalOperator INT_VAL
   73                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 115
    NOT_EQUALS      desplazar e ir al estado 116
    GREATER         desplazar e ir al estado 117
    GREATER_EQUALS  desplazar e ir al estado 118
    LESS            desplazar e ir al estado 119
    LESS_EQUALS     desplazar e ir al estado 120

    logicalOperator  ir al estado 121


Estado 106

   70 logicalOperation: ID . logicalOperator ID
   71                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 115
    NOT_EQUALS      desplazar e ir al estado 116
    GREATER         desplazar e ir al estado 117
    GREATER_EQUALS  desplazar e ir al estado 118
    LESS            desplazar e ir al estado 119
    LESS_EQUALS     desplazar e ir al estado 120

    logicalOperator  ir al estado 122


Estado 107

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation . $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 59 ($@9)

    $@9  ir al estado 123


Estado 108

   56 text: STRING_VAL .

    $default  reduce usando la regla 56 (text)


Estado 109

   57 text: ' ' .

    $default  reduce usando la regla 57 (text)


Estado 110

   54 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 124


Estado 111

   55 printableElement: printableElement SUM . printableElement

    QUOTE  desplazar e ir al estado 98
    ID     desplazar e ir al estado 99

    printableElement  ir al estado 125


Estado 112

   52 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 52 (print)


Estado 113

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation . $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 64 ($@13)

    $@13  ir al estado 126


Estado 114

   51 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 127


Estado 115

   74 logicalOperator: EQUALS .

    $default  reduce usando la regla 74 (logicalOperator)


Estado 116

   75 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 75 (logicalOperator)


Estado 117

   76 logicalOperator: GREATER .

    $default  reduce usando la regla 76 (logicalOperator)


Estado 118

   78 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 78 (logicalOperator)


Estado 119

   77 logicalOperator: LESS .

    $default  reduce usando la regla 77 (logicalOperator)


Estado 120

   79 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 79 (logicalOperator)


Estado 121

   72 logicalOperation: INT_VAL logicalOperator . INT_VAL
   73                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 128
    ID       desplazar e ir al estado 129


Estado 122

   70 logicalOperation: ID logicalOperator . ID
   71                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 130
    ID       desplazar e ir al estado 131


Estado 123

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 132


Estado 124

   54 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 54 (printableElement)


Estado 125

   55 printableElement: printableElement . SUM printableElement
   55                 | printableElement SUM printableElement .

    SUM  desplazar e ir al estado 111

    SUM       [reduce usando la regla 55 (printableElement)]
    $default  reduce usando la regla 55 (printableElement)


Estado 126

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 . PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 133


Estado 127

   51 return: RETURN ID PARENTESIS_OPEN $@7 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 51 (return)


Estado 128

   72 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 72 (logicalOperation)


Estado 129

   73 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 73 (logicalOperation)


Estado 130

   71 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 71 (logicalOperation)


Estado 131

   70 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 70 (logicalOperation)


Estado 132

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 134


Estado 133

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE . CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 135


Estado 134

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 60 ($@10)

    $@10  ir al estado 136


Estado 135

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN . $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 65 ($@14)

    $@14  ir al estado 137


Estado 136

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 . END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 138


Estado 137

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 . END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 139


Estado 138

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION . codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 140
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 139

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION . codeSet $@15 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 141
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 140

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet . $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 61 ($@11)

    $@11  ir al estado 142


Estado 141

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet . $@15 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 66 ($@15)

    $@15  ir al estado 143


Estado 142

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 . CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 144


Estado 143

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 145


Estado 144

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE . ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 146


Estado 145

   67 controlStructure: structuresWord PARENTESIS_OPEN $@12 logicalOperation $@13 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@14 END_OF_INSTRUCTION codeSet $@15 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 67 (controlStructure)


Estado 146

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE . CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 147


Estado 147

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 69
    RETURN              desplazar e ir al estado 70
    INT_TYPE            desplazar e ir al estado 5
    IF_CLAUSE           desplazar e ir al estado 71
    WHILE_CLAUSE        desplazar e ir al estado 72
    END_OF_INSTRUCTION  desplazar e ir al estado 73
    ID                  desplazar e ir al estado 74
    PRINT               desplazar e ir al estado 75

    $default  reduce usando la regla 20 (codeSet)

    declaration       ir al estado 76
    codeSet           ir al estado 148
    instruction       ir al estado 78
    assignation       ir al estado 79
    return            ir al estado 80
    print             ir al estado 81
    controlStructure  ir al estado 82
    structuresWord    ir al estado 83


Estado 148

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 149


Estado 149

   62 controlStructure: IF_CLAUSE PARENTESIS_OPEN $@8 logicalOperation $@9 PARENTESIS_CLOSE CURLY_BRACKET_OPEN $@10 END_OF_INSTRUCTION codeSet $@11 CURLY_BRACKET_CLOSE ELSE_CLAUSE CURLY_BRACKET_OPEN codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 62 (controlStructure)
