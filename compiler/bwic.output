Terminales no usados en la gramática

   CONTINUE
   STRING_TYPE
   AND
   OR
   NOT
   HEADER_END
   OPEN_CONTEXT_TAG
   CLOSE_CONTEXT_TAG


La regla es inútil debido a los conflictos

   47 return: RETURN ID
   48       | RETURN INT_VAL


Estado 26 conflictos: 1 reducción/reducción
Estado 28 conflictos: 1 reducción/reducción
Estado 103 conflictos: 1 reducción/reducción
Estado 104 conflictos: 1 reducción/reducción


Gramática

    0 $accept: begin $end

    1 $@1: %empty

    2 begin: $@1 root

    3 root: declaration END_OF_INSTRUCTION root
    4     | assignation END_OF_INSTRUCTION root

    5 $@2: %empty

    6 root: $@2 function root
    7     | END_OF_INSTRUCTION root
    8     | print END_OF_INSTRUCTION root
    9     | %empty

   10 declaration: INT_TYPE ID
   11            | INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   12 $@3: %empty

   13 $@4: %empty

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

   15 params: INT_TYPE ID params
   16       | COMMA INT_TYPE ID params
   17       | %empty

   18 codeSet: instruction END_OF_INSTRUCTION codeSet
   19        | controlStructure END_OF_INSTRUCTION codeSet
   20        | END_OF_INSTRUCTION codeSet
   21        | %empty

   22 instruction: assignation
   23            | declaration
   24            | return
   25            | print
   26            | BREAK

   27 assignation: ID ASSIGN INT_VAL
   28            | ID ASSIGN ID
   29            | ID PLUSPLUS
   30            | ID MINUSMINUS
   31            | ID ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN aritmeticOperation
   33            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

   36 functionCallParams: INT_VAL
   37                   | ID
   38                   | INT_VAL COMMA functionCallParams
   39                   | ID COMMA functionCallParams

   40 aritmeticOperation: aritmeticOperation SUM aritmeticOperation
   41                   | aritmeticOperation SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation PRODUCT aritmeticOperation
   43                   | aritmeticOperation DIVIDE aritmeticOperation
   44                   | PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE
   45                   | INT_VAL
   46                   | ID

   47 return: RETURN ID
   48       | RETURN INT_VAL
   49       | RETURN aritmeticOperation

   50 $@5: %empty

   51 return: RETURN ID PARENTESIS_OPEN $@5 functionCallParams PARENTESIS_CLOSE

   52 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

   53 printableElement: ID
   54                 | QUOTE text QUOTE
   55                 | printableElement SUM printableElement
   56                 | INT_VAL

   57 text: STRING_VAL
   58     | ' '

   59 $@6: %empty

   60 $@7: %empty

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 codeSet CURLY_BRACKET_CLOSE
   62     | %empty

   63 $@8: %empty

   64 $@9: %empty

   65 $@10: %empty

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

   67 $@11: %empty

   68 $@12: %empty

   69 $@13: %empty

   70 $@14: %empty

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

   72 logicalOperation: ID logicalOperator ID
   73                 | ID logicalOperator INT_VAL
   74                 | INT_VAL logicalOperator INT_VAL
   75                 | INT_VAL logicalOperator ID

   76 logicalOperator: EQUALS
   77                | NOT_EQUALS
   78                | LESS
   79                | LESS_EQUALS
   80                | GREATER
   81                | GREATER_EQUALS


Terminales con las reglas donde aparecen

$end (0) 0
' ' (32) 58
error (256)
CONTINUE (258)
BREAK (259) 26
RETURN (260) 47 48 49 51
FUN (261) 14
INT_VAL (262) 11 27 33 34 35 36 38 45 48 56 73 74 75
STRING_VAL (263) 57
INT_TYPE (264) 10 11 15 16
STRING_TYPE (265)
ASSIGN (266) 27 28 31 32 33 34 35
SUM (267) 40 55
SUBSTRACT (268) 41
PRODUCT (269) 42
DIVIDE (270) 43
AND (271)
OR (272)
NOT (273)
EQUALS (274) 76
NOT_EQUALS (275) 77
GREATER (276) 80
GREATER_EQUALS (277) 81
LESS (278) 78
LESS_EQUALS (279) 79
IF_CLAUSE (280) 66
WHILE_CLAUSE (281) 71
ELSE_CLAUSE (282) 61
HEADER_END (283)
SQUARE_BRACKET_OPEN (284) 11 33 34 35
SQUARE_BRACKET_CLOSE (285) 11 33 34 35
CURLY_BRACKET_OPEN (286) 14 61 66 71
CURLY_BRACKET_CLOSE (287) 14 61 66 71
COMMA (288) 16 38 39
PARENTESIS_OPEN (289) 14 31 44 51 52 66 71
PARENTESIS_CLOSE (290) 14 31 44 51 52 66 71
END_OF_INSTRUCTION (291) 3 4 7 8 14 18 19 20 61 66 71
OPEN_CONTEXT_TAG (292)
CLOSE_CONTEXT_TAG (293)
QUOTE (294) 54
ID (295) 10 11 14 15 16 27 28 29 30 31 32 33 34 35 37 39 46 47 51 53
    72 73 75
PRINT (296) 52
PLUSPLUS (297) 29
MINUSMINUS (298) 30


No terminales con las reglas donde aparecen

$accept (45)
    en la izquierda: 0
begin (46)
    en la izquierda: 2, en la derecha: 0
$@1 (47)
    en la izquierda: 1, en la derecha: 2
root (48)
    en la izquierda: 3 4 6 7 8 9, en la derecha: 2 3 4 6 7 8
$@2 (49)
    en la izquierda: 5, en la derecha: 6
declaration (50)
    en la izquierda: 10 11, en la derecha: 3 23
function (51)
    en la izquierda: 14, en la derecha: 6
$@3 (52)
    en la izquierda: 12, en la derecha: 14
$@4 (53)
    en la izquierda: 13, en la derecha: 14
params (54)
    en la izquierda: 15 16 17, en la derecha: 14 15 16
codeSet (55)
    en la izquierda: 18 19 20 21, en la derecha: 14 18 19 20 61 66
    71
instruction (56)
    en la izquierda: 22 23 24 25 26, en la derecha: 18
assignation (57)
    en la izquierda: 27 28 29 30 31 32 33 34 35, en la derecha: 4 22
functionCallParams (58)
    en la izquierda: 36 37 38 39, en la derecha: 31 38 39 51
aritmeticOperation (59)
    en la izquierda: 40 41 42 43 44 45 46, en la derecha: 32 40 41
    42 43 44 49
return (60)
    en la izquierda: 47 48 49 51, en la derecha: 24
$@5 (61)
    en la izquierda: 50, en la derecha: 51
print (62)
    en la izquierda: 52, en la derecha: 8 25
printableElement (63)
    en la izquierda: 53 54 55 56, en la derecha: 52 55
text (64)
    en la izquierda: 57 58, en la derecha: 54
else (65)
    en la izquierda: 61 62, en la derecha: 66
$@6 (66)
    en la izquierda: 59, en la derecha: 61
$@7 (67)
    en la izquierda: 60, en la derecha: 61
controlStructure (68)
    en la izquierda: 66 71, en la derecha: 19
$@8 (69)
    en la izquierda: 63, en la derecha: 66
$@9 (70)
    en la izquierda: 64, en la derecha: 66
$@10 (71)
    en la izquierda: 65, en la derecha: 66
$@11 (72)
    en la izquierda: 67, en la derecha: 71
$@12 (73)
    en la izquierda: 68, en la derecha: 71
$@13 (74)
    en la izquierda: 69, en la derecha: 71
$@14 (75)
    en la izquierda: 70, en la derecha: 71
logicalOperation (76)
    en la izquierda: 72 73 74 75, en la derecha: 66 71
logicalOperator (77)
    en la izquierda: 76 77 78 79 80 81, en la derecha: 72 73 74 75


Estado 0

    0 $accept: . begin $end

    $default  reduce usando la regla 1 ($@1)

    begin  ir al estado 1
    $@1    ir al estado 2


Estado 1

    0 $accept: begin . $end

    $end  desplazar e ir al estado 3


Estado 2

    2 begin: $@1 . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 8
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 3

    0 $accept: begin $end .

    $default  aceptar


Estado 4

   10 declaration: INT_TYPE . ID
   11            | INT_TYPE . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ID  desplazar e ir al estado 13


Estado 5

    7 root: END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 14
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 6

   27 assignation: ID . ASSIGN INT_VAL
   28            | ID . ASSIGN ID
   29            | ID . PLUSPLUS
   30            | ID . MINUSMINUS
   31            | ID . ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   32            | ID . ASSIGN aritmeticOperation
   33            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL
   35            | ID . ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    ASSIGN               desplazar e ir al estado 15
    SQUARE_BRACKET_OPEN  desplazar e ir al estado 16
    PLUSPLUS             desplazar e ir al estado 17
    MINUSMINUS           desplazar e ir al estado 18


Estado 7

   52 print: PRINT . PARENTESIS_OPEN printableElement PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 19


Estado 8

    2 begin: $@1 root .

    $default  reduce usando la regla 2 (begin)


Estado 9

    6 root: $@2 . function root

    FUN  desplazar e ir al estado 20

    function  ir al estado 21


Estado 10

    3 root: declaration . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 22


Estado 11

    4 root: assignation . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 23


Estado 12

    8 root: print . END_OF_INSTRUCTION root

    END_OF_INSTRUCTION  desplazar e ir al estado 24


Estado 13

   10 declaration: INT_TYPE ID .
   11            | INT_TYPE ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 25

    $default  reduce usando la regla 10 (declaration)


Estado 14

    7 root: END_OF_INSTRUCTION root .

    $default  reduce usando la regla 7 (root)


Estado 15

   27 assignation: ID ASSIGN . INT_VAL
   28            | ID ASSIGN . ID
   31            | ID ASSIGN . ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   32            | ID ASSIGN . aritmeticOperation
   35            | ID ASSIGN . ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL          desplazar e ir al estado 26
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 28

    aritmeticOperation  ir al estado 29


Estado 16

   33 assignation: ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    INT_VAL  desplazar e ir al estado 30


Estado 17

   29 assignation: ID PLUSPLUS .

    $default  reduce usando la regla 29 (assignation)


Estado 18

   30 assignation: ID MINUSMINUS .

    $default  reduce usando la regla 30 (assignation)


Estado 19

   52 print: PRINT PARENTESIS_OPEN . printableElement PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 31
    QUOTE    desplazar e ir al estado 32
    ID       desplazar e ir al estado 33

    printableElement  ir al estado 34


Estado 20

   14 function: FUN . ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    ID  desplazar e ir al estado 35


Estado 21

    6 root: $@2 function . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 36
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 22

    3 root: declaration END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 37
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 23

    4 root: assignation END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 38
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 24

    8 root: print END_OF_INSTRUCTION . root

    INT_TYPE            desplazar e ir al estado 4
    END_OF_INSTRUCTION  desplazar e ir al estado 5
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    $end      reduce usando la regla 9 (root)
    $default  reduce usando la regla 5 ($@2)

    root         ir al estado 39
    $@2          ir al estado 9
    declaration  ir al estado 10
    assignation  ir al estado 11
    print        ir al estado 12


Estado 25

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 40


Estado 26

   27 assignation: ID ASSIGN INT_VAL .
   45 aritmeticOperation: INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 27 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 45 (aritmeticOperation)]
    $default            reduce usando la regla 45 (aritmeticOperation)


Estado 27

   44 aritmeticOperation: PARENTESIS_OPEN . aritmeticOperation PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 41
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 42

    aritmeticOperation  ir al estado 43


Estado 28

   28 assignation: ID ASSIGN ID .
   31            | ID ASSIGN ID . PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE
   35            | ID ASSIGN ID . SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE
   46 aritmeticOperation: ID .

    SQUARE_BRACKET_OPEN  desplazar e ir al estado 44
    PARENTESIS_OPEN      desplazar e ir al estado 45

    END_OF_INSTRUCTION  reduce usando la regla 28 (assignation)
    END_OF_INSTRUCTION  [reduce usando la regla 46 (aritmeticOperation)]
    $default            reduce usando la regla 46 (aritmeticOperation)


Estado 29

   32 assignation: ID ASSIGN aritmeticOperation .
   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    SUM        desplazar e ir al estado 46
    SUBSTRACT  desplazar e ir al estado 47
    PRODUCT    desplazar e ir al estado 48
    DIVIDE     desplazar e ir al estado 49

    $default  reduce usando la regla 32 (assignation)


Estado 30

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE ASSIGN INT_VAL

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 50


Estado 31

   56 printableElement: INT_VAL .

    $default  reduce usando la regla 56 (printableElement)


Estado 32

   54 printableElement: QUOTE . text QUOTE

    STRING_VAL  desplazar e ir al estado 51
    ' '         desplazar e ir al estado 52

    text  ir al estado 53


Estado 33

   53 printableElement: ID .

    $default  reduce usando la regla 53 (printableElement)


Estado 34

   52 print: PRINT PARENTESIS_OPEN printableElement . PARENTESIS_CLOSE
   55 printableElement: printableElement . SUM printableElement

    SUM               desplazar e ir al estado 54
    PARENTESIS_CLOSE  desplazar e ir al estado 55


Estado 35

   14 function: FUN ID . $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 12 ($@3)

    $@3  ir al estado 56


Estado 36

    6 root: $@2 function root .

    $default  reduce usando la regla 6 (root)


Estado 37

    3 root: declaration END_OF_INSTRUCTION root .

    $default  reduce usando la regla 3 (root)


Estado 38

    4 root: assignation END_OF_INSTRUCTION root .

    $default  reduce usando la regla 4 (root)


Estado 39

    8 root: print END_OF_INSTRUCTION root .

    $default  reduce usando la regla 8 (root)


Estado 40

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 57


Estado 41

   45 aritmeticOperation: INT_VAL .

    $default  reduce usando la regla 45 (aritmeticOperation)


Estado 42

   46 aritmeticOperation: ID .

    $default  reduce usando la regla 46 (aritmeticOperation)


Estado 43

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   44                   | PARENTESIS_OPEN aritmeticOperation . PARENTESIS_CLOSE

    SUM               desplazar e ir al estado 46
    SUBSTRACT         desplazar e ir al estado 47
    PRODUCT           desplazar e ir al estado 48
    DIVIDE            desplazar e ir al estado 49
    PARENTESIS_CLOSE  desplazar e ir al estado 58


Estado 44

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN . INT_VAL SQUARE_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 59


Estado 45

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 60
    ID       desplazar e ir al estado 61

    functionCallParams  ir al estado 62


Estado 46

   40 aritmeticOperation: aritmeticOperation SUM . aritmeticOperation

    INT_VAL          desplazar e ir al estado 41
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 42

    aritmeticOperation  ir al estado 63


Estado 47

   41 aritmeticOperation: aritmeticOperation SUBSTRACT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 41
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 42

    aritmeticOperation  ir al estado 64


Estado 48

   42 aritmeticOperation: aritmeticOperation PRODUCT . aritmeticOperation

    INT_VAL          desplazar e ir al estado 41
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 42

    aritmeticOperation  ir al estado 65


Estado 49

   43 aritmeticOperation: aritmeticOperation DIVIDE . aritmeticOperation

    INT_VAL          desplazar e ir al estado 41
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 42

    aritmeticOperation  ir al estado 66


Estado 50

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE . ASSIGN INT_VAL

    ASSIGN  desplazar e ir al estado 67


Estado 51

   57 text: STRING_VAL .

    $default  reduce usando la regla 57 (text)


Estado 52

   58 text: ' ' .

    $default  reduce usando la regla 58 (text)


Estado 53

   54 printableElement: QUOTE text . QUOTE

    QUOTE  desplazar e ir al estado 68


Estado 54

   55 printableElement: printableElement SUM . printableElement

    INT_VAL  desplazar e ir al estado 31
    QUOTE    desplazar e ir al estado 32
    ID       desplazar e ir al estado 33

    printableElement  ir al estado 69


Estado 55

   52 print: PRINT PARENTESIS_OPEN printableElement PARENTESIS_CLOSE .

    $default  reduce usando la regla 52 (print)


Estado 56

   14 function: FUN ID $@3 . PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_OPEN  desplazar e ir al estado 70


Estado 57

   11 declaration: INT_TYPE ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 11 (declaration)


Estado 58

   44 aritmeticOperation: PARENTESIS_OPEN aritmeticOperation PARENTESIS_CLOSE .

    $default  reduce usando la regla 44 (aritmeticOperation)


Estado 59

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL . SQUARE_BRACKET_CLOSE

    SQUARE_BRACKET_CLOSE  desplazar e ir al estado 71


Estado 60

   36 functionCallParams: INT_VAL .
   38                   | INT_VAL . COMMA functionCallParams

    COMMA  desplazar e ir al estado 72

    $default  reduce usando la regla 36 (functionCallParams)


Estado 61

   37 functionCallParams: ID .
   39                   | ID . COMMA functionCallParams

    COMMA  desplazar e ir al estado 73

    $default  reduce usando la regla 37 (functionCallParams)


Estado 62

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 74


Estado 63

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   40                   | aritmeticOperation SUM aritmeticOperation .
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 48
    DIVIDE   desplazar e ir al estado 49

    $default  reduce usando la regla 40 (aritmeticOperation)


Estado 64

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   41                   | aritmeticOperation SUBSTRACT aritmeticOperation .
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    PRODUCT  desplazar e ir al estado 48
    DIVIDE   desplazar e ir al estado 49

    $default  reduce usando la regla 41 (aritmeticOperation)


Estado 65

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   42                   | aritmeticOperation PRODUCT aritmeticOperation .
   43                   | aritmeticOperation . DIVIDE aritmeticOperation

    $default  reduce usando la regla 42 (aritmeticOperation)


Estado 66

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   43                   | aritmeticOperation DIVIDE aritmeticOperation .

    $default  reduce usando la regla 43 (aritmeticOperation)


Estado 67

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . ID
   34            | ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN . INT_VAL

    INT_VAL  desplazar e ir al estado 75
    ID       desplazar e ir al estado 76


Estado 68

   54 printableElement: QUOTE text QUOTE .

    $default  reduce usando la regla 54 (printableElement)


Estado 69

   55 printableElement: printableElement . SUM printableElement
   55                 | printableElement SUM printableElement .

    $default  reduce usando la regla 55 (printableElement)


Estado 70

   14 function: FUN ID $@3 PARENTESIS_OPEN . $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    $default  reduce usando la regla 13 ($@4)

    $@4  ir al estado 77


Estado 71

   35 assignation: ID ASSIGN ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE .

    $default  reduce usando la regla 35 (assignation)


Estado 72

   38 functionCallParams: INT_VAL COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 60
    ID       desplazar e ir al estado 61

    functionCallParams  ir al estado 78


Estado 73

   39 functionCallParams: ID COMMA . functionCallParams

    INT_VAL  desplazar e ir al estado 60
    ID       desplazar e ir al estado 61

    functionCallParams  ir al estado 79


Estado 74

   31 assignation: ID ASSIGN ID PARENTESIS_OPEN functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 31 (assignation)


Estado 75

   34 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN INT_VAL .

    $default  reduce usando la regla 34 (assignation)


Estado 76

   33 assignation: ID SQUARE_BRACKET_OPEN INT_VAL SQUARE_BRACKET_CLOSE ASSIGN ID .

    $default  reduce usando la regla 33 (assignation)


Estado 77

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 . params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    INT_TYPE  desplazar e ir al estado 80
    COMMA     desplazar e ir al estado 81

    $default  reduce usando la regla 17 (params)

    params  ir al estado 82


Estado 78

   38 functionCallParams: INT_VAL COMMA functionCallParams .

    $default  reduce usando la regla 38 (functionCallParams)


Estado 79

   39 functionCallParams: ID COMMA functionCallParams .

    $default  reduce usando la regla 39 (functionCallParams)


Estado 80

   15 params: INT_TYPE . ID params

    ID  desplazar e ir al estado 83


Estado 81

   16 params: COMMA . INT_TYPE ID params

    INT_TYPE  desplazar e ir al estado 84


Estado 82

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params . PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    PARENTESIS_CLOSE  desplazar e ir al estado 85


Estado 83

   15 params: INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 80
    COMMA     desplazar e ir al estado 81

    $default  reduce usando la regla 17 (params)

    params  ir al estado 86


Estado 84

   16 params: COMMA INT_TYPE . ID params

    ID  desplazar e ir al estado 87


Estado 85

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_OPEN  desplazar e ir al estado 88


Estado 86

   15 params: INT_TYPE ID params .

    $default  reduce usando la regla 15 (params)


Estado 87

   16 params: COMMA INT_TYPE ID . params

    INT_TYPE  desplazar e ir al estado 80
    COMMA     desplazar e ir al estado 81

    $default  reduce usando la regla 17 (params)

    params  ir al estado 89


Estado 88

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 90


Estado 89

   16 params: COMMA INT_TYPE ID params .

    $default  reduce usando la regla 16 (params)


Estado 90

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 96
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 91

   26 instruction: BREAK .

    $default  reduce usando la regla 26 (instruction)


Estado 92

   47 return: RETURN . ID
   48       | RETURN . INT_VAL
   49       | RETURN . aritmeticOperation
   51       | RETURN . ID PARENTESIS_OPEN $@5 functionCallParams PARENTESIS_CLOSE

    INT_VAL          desplazar e ir al estado 103
    PARENTESIS_OPEN  desplazar e ir al estado 27
    ID               desplazar e ir al estado 104

    aritmeticOperation  ir al estado 105


Estado 93

   66 controlStructure: IF_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    PARENTESIS_OPEN  desplazar e ir al estado 106


Estado 94

   20 codeSet: END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 107
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 95

   23 instruction: declaration .

    $default  reduce usando la regla 23 (instruction)


Estado 96

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet . CURLY_BRACKET_CLOSE END_OF_INSTRUCTION

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 108


Estado 97

   18 codeSet: instruction . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 109


Estado 98

   22 instruction: assignation .

    $default  reduce usando la regla 22 (instruction)


Estado 99

   24 instruction: return .

    $default  reduce usando la regla 24 (instruction)


Estado 100

   25 instruction: print .

    $default  reduce usando la regla 25 (instruction)


Estado 101

   19 codeSet: controlStructure . END_OF_INSTRUCTION codeSet

    END_OF_INSTRUCTION  desplazar e ir al estado 110


Estado 102

   71 controlStructure: $@11 . WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    WHILE_CLAUSE  desplazar e ir al estado 111


Estado 103

   45 aritmeticOperation: INT_VAL .
   48 return: RETURN INT_VAL .

    END_OF_INSTRUCTION  reduce usando la regla 45 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 48 (return)]
    $default            reduce usando la regla 45 (aritmeticOperation)


Estado 104

   46 aritmeticOperation: ID .
   47 return: RETURN ID .
   51       | RETURN ID . PARENTESIS_OPEN $@5 functionCallParams PARENTESIS_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 112

    END_OF_INSTRUCTION  reduce usando la regla 46 (aritmeticOperation)
    END_OF_INSTRUCTION  [reduce usando la regla 47 (return)]
    $default            reduce usando la regla 46 (aritmeticOperation)


Estado 105

   40 aritmeticOperation: aritmeticOperation . SUM aritmeticOperation
   41                   | aritmeticOperation . SUBSTRACT aritmeticOperation
   42                   | aritmeticOperation . PRODUCT aritmeticOperation
   43                   | aritmeticOperation . DIVIDE aritmeticOperation
   49 return: RETURN aritmeticOperation .

    SUM        desplazar e ir al estado 46
    SUBSTRACT  desplazar e ir al estado 47
    PRODUCT    desplazar e ir al estado 48
    DIVIDE     desplazar e ir al estado 49

    $default  reduce usando la regla 49 (return)


Estado 106

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    INT_VAL  desplazar e ir al estado 113
    ID       desplazar e ir al estado 114

    logicalOperation  ir al estado 115


Estado 107

   20 codeSet: END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 20 (codeSet)


Estado 108

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE . END_OF_INSTRUCTION

    END_OF_INSTRUCTION  desplazar e ir al estado 116


Estado 109

   18 codeSet: instruction END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 117
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 110

   19 codeSet: controlStructure END_OF_INSTRUCTION . codeSet

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 118
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 111

   71 controlStructure: $@11 WHILE_CLAUSE . PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    PARENTESIS_OPEN  desplazar e ir al estado 119


Estado 112

   51 return: RETURN ID PARENTESIS_OPEN . $@5 functionCallParams PARENTESIS_CLOSE

    $default  reduce usando la regla 50 ($@5)

    $@5  ir al estado 120


Estado 113

   74 logicalOperation: INT_VAL . logicalOperator INT_VAL
   75                 | INT_VAL . logicalOperator ID

    EQUALS          desplazar e ir al estado 121
    NOT_EQUALS      desplazar e ir al estado 122
    GREATER         desplazar e ir al estado 123
    GREATER_EQUALS  desplazar e ir al estado 124
    LESS            desplazar e ir al estado 125
    LESS_EQUALS     desplazar e ir al estado 126

    logicalOperator  ir al estado 127


Estado 114

   72 logicalOperation: ID . logicalOperator ID
   73                 | ID . logicalOperator INT_VAL

    EQUALS          desplazar e ir al estado 121
    NOT_EQUALS      desplazar e ir al estado 122
    GREATER         desplazar e ir al estado 123
    GREATER_EQUALS  desplazar e ir al estado 124
    LESS            desplazar e ir al estado 125
    LESS_EQUALS     desplazar e ir al estado 126

    logicalOperator  ir al estado 128


Estado 115

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    PARENTESIS_CLOSE  desplazar e ir al estado 129


Estado 116

   14 function: FUN ID $@3 PARENTESIS_OPEN $@4 params PARENTESIS_CLOSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION codeSet CURLY_BRACKET_CLOSE END_OF_INSTRUCTION .

    $default  reduce usando la regla 14 (function)


Estado 117

   18 codeSet: instruction END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 18 (codeSet)


Estado 118

   19 codeSet: controlStructure END_OF_INSTRUCTION codeSet .

    $default  reduce usando la regla 19 (codeSet)


Estado 119

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN . logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    INT_VAL  desplazar e ir al estado 113
    ID       desplazar e ir al estado 114

    logicalOperation  ir al estado 130


Estado 120

   51 return: RETURN ID PARENTESIS_OPEN $@5 . functionCallParams PARENTESIS_CLOSE

    INT_VAL  desplazar e ir al estado 60
    ID       desplazar e ir al estado 61

    functionCallParams  ir al estado 131


Estado 121

   76 logicalOperator: EQUALS .

    $default  reduce usando la regla 76 (logicalOperator)


Estado 122

   77 logicalOperator: NOT_EQUALS .

    $default  reduce usando la regla 77 (logicalOperator)


Estado 123

   80 logicalOperator: GREATER .

    $default  reduce usando la regla 80 (logicalOperator)


Estado 124

   81 logicalOperator: GREATER_EQUALS .

    $default  reduce usando la regla 81 (logicalOperator)


Estado 125

   78 logicalOperator: LESS .

    $default  reduce usando la regla 78 (logicalOperator)


Estado 126

   79 logicalOperator: LESS_EQUALS .

    $default  reduce usando la regla 79 (logicalOperator)


Estado 127

   74 logicalOperation: INT_VAL logicalOperator . INT_VAL
   75                 | INT_VAL logicalOperator . ID

    INT_VAL  desplazar e ir al estado 132
    ID       desplazar e ir al estado 133


Estado 128

   72 logicalOperation: ID logicalOperator . ID
   73                 | ID logicalOperator . INT_VAL

    INT_VAL  desplazar e ir al estado 134
    ID       desplazar e ir al estado 135


Estado 129

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    $default  reduce usando la regla 63 ($@8)

    $@8  ir al estado 136


Estado 130

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation . PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 137


Estado 131

   51 return: RETURN ID PARENTESIS_OPEN $@5 functionCallParams . PARENTESIS_CLOSE

    PARENTESIS_CLOSE  desplazar e ir al estado 138


Estado 132

   74 logicalOperation: INT_VAL logicalOperator INT_VAL .

    $default  reduce usando la regla 74 (logicalOperation)


Estado 133

   75 logicalOperation: INT_VAL logicalOperator ID .

    $default  reduce usando la regla 75 (logicalOperation)


Estado 134

   73 logicalOperation: ID logicalOperator INT_VAL .

    $default  reduce usando la regla 73 (logicalOperation)


Estado 135

   72 logicalOperation: ID logicalOperator ID .

    $default  reduce usando la regla 72 (logicalOperation)


Estado 136

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    CURLY_BRACKET_OPEN  desplazar e ir al estado 139


Estado 137

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE . $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 68 ($@12)

    $@12  ir al estado 140


Estado 138

   51 return: RETURN ID PARENTESIS_OPEN $@5 functionCallParams PARENTESIS_CLOSE .

    $default  reduce usando la regla 51 (return)


Estado 139

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    END_OF_INSTRUCTION  desplazar e ir al estado 141


Estado 140

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 142


Estado 141

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@9 codeSet CURLY_BRACKET_CLOSE $@10 else

    $default  reduce usando la regla 64 ($@9)

    $@9  ir al estado 143


Estado 142

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 144


Estado 143

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 . codeSet CURLY_BRACKET_CLOSE $@10 else

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 145
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 144

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@13 codeSet $@14 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 69 ($@13)

    $@13  ir al estado 146


Estado 145

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet . CURLY_BRACKET_CLOSE $@10 else

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 147


Estado 146

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 . codeSet $@14 CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 148
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 147

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE . $@10 else

    $default  reduce usando la regla 65 ($@10)

    $@10  ir al estado 149


Estado 148

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet . $@14 CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 70 ($@14)

    $@14  ir al estado 150


Estado 149

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 . else

    END_OF_INSTRUCTION  reduce usando la regla 62 (else)
    $default            reduce usando la regla 59 ($@6)

    else  ir al estado 151
    $@6   ir al estado 152


Estado 150

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 153


Estado 151

   66 controlStructure: IF_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@8 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@9 codeSet CURLY_BRACKET_CLOSE $@10 else .

    $default  reduce usando la regla 66 (controlStructure)


Estado 152

   61 else: $@6 . ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 codeSet CURLY_BRACKET_CLOSE

    ELSE_CLAUSE  desplazar e ir al estado 154


Estado 153

   71 controlStructure: $@11 WHILE_CLAUSE PARENTESIS_OPEN logicalOperation PARENTESIS_CLOSE $@12 CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@13 codeSet $@14 CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 71 (controlStructure)


Estado 154

   61 else: $@6 ELSE_CLAUSE . CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 codeSet CURLY_BRACKET_CLOSE

    CURLY_BRACKET_OPEN  desplazar e ir al estado 155


Estado 155

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN . END_OF_INSTRUCTION $@7 codeSet CURLY_BRACKET_CLOSE

    END_OF_INSTRUCTION  desplazar e ir al estado 156


Estado 156

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION . $@7 codeSet CURLY_BRACKET_CLOSE

    $default  reduce usando la regla 60 ($@7)

    $@7  ir al estado 157


Estado 157

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 . codeSet CURLY_BRACKET_CLOSE

    BREAK               desplazar e ir al estado 91
    RETURN              desplazar e ir al estado 92
    INT_TYPE            desplazar e ir al estado 4
    IF_CLAUSE           desplazar e ir al estado 93
    END_OF_INSTRUCTION  desplazar e ir al estado 94
    ID                  desplazar e ir al estado 6
    PRINT               desplazar e ir al estado 7

    WHILE_CLAUSE  reduce usando la regla 67 ($@11)
    $default      reduce usando la regla 21 (codeSet)

    declaration       ir al estado 95
    codeSet           ir al estado 158
    instruction       ir al estado 97
    assignation       ir al estado 98
    return            ir al estado 99
    print             ir al estado 100
    controlStructure  ir al estado 101
    $@11              ir al estado 102


Estado 158

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 codeSet . CURLY_BRACKET_CLOSE

    CURLY_BRACKET_CLOSE  desplazar e ir al estado 159


Estado 159

   61 else: $@6 ELSE_CLAUSE CURLY_BRACKET_OPEN END_OF_INSTRUCTION $@7 codeSet CURLY_BRACKET_CLOSE .

    $default  reduce usando la regla 61 (else)
